pivot_wider(names_from = "Minute", values_from = "GeoMean", names_prefix = "Minute ")
results
results = tibble(GeoMean = apply(HDA[,c(99:128)], 2, EnvStats::geoMean),
Minute = as.integer(rep(c(0, 15, 30, 45, 60, 75), 5)),
Model = factor(c(rep("A", 6),
rep("B", 6),
rep("C", 6),
rep("D", 6),
rep("E", 6)))) %>%
pivot_wider(names_from = "Model", values_from = "GeoMean", names_prefix = "Model ")
results %>%
ggplot(aes(x = Minute, y = GeoMean, col = Model)) +
geom_line() +
geom_point() +
scale_x_continuous(breaks = c(0, 15, 30, 45, 60, 75)) +
theme_bw() +
ggtitle("All predicted matches") +
ylab("Geometric mean for the results")
results = tibble(GeoMean = apply(HDA[,c(99:128)], 2, EnvStats::geoMean),
Minute = as.integer(rep(c(0, 15, 30, 45, 60, 75), 5)),
Model = factor(c(rep("A", 6),
rep("B", 6),
rep("C", 6),
rep("D", 6),
rep("E", 6)))) %>%
pivot_wider(names_from = "Model", values_from = "GeoMean", names_prefix = "Model ")
results
results = tibble(GeoMean = apply(HDA[,c(99:128)], 2, EnvStats::geoMean),
Minute = as.integer(rep(c(0, 15, 30, 45, 60, 75), 5)),
Model = factor(c(rep("A", 6),
rep("B", 6),
rep("C", 6),
rep("D", 6),
rep("E", 6)))) %>%
pivot_wider(names_from = "Model", values_from = "GeoMean", names_prefix = "Model ") %>%
mutate(`Model B` = log(`Model B`) - log(`Model A`),
`Model C` = log(`Model D`) - log(`Model A`),
`Model D` = log(`Model D`) - log(`Model A`),
`Model E` = log(`Model E`) - log(`Model A`),
`Model A` = 0)
results
?pivot_longer
results = tibble(GeoMean = apply(HDA[,c(99:128)], 2, EnvStats::geoMean),
Minute = as.integer(rep(c(0, 15, 30, 45, 60, 75), 5)),
Model = factor(c(rep("A", 6),
rep("B", 6),
rep("C", 6),
rep("D", 6),
rep("E", 6)))) %>%
pivot_wider(names_from = "Model", values_from = "GeoMean", names_prefix = "Model ") %>%
mutate(`Model B` = log(`Model B`) - log(`Model A`),
`Model C` = log(`Model D`) - log(`Model A`),
`Model D` = log(`Model D`) - log(`Model A`),
`Model E` = log(`Model E`) - log(`Model A`),
`Model A` = 0) %>%
pivot_longer(names_to = "Model", values_to = "GeoMean")
results = tibble(GeoMean = apply(HDA[,c(99:128)], 2, EnvStats::geoMean),
Minute = as.integer(rep(c(0, 15, 30, 45, 60, 75), 5)),
Model = factor(c(rep("A", 6),
rep("B", 6),
rep("C", 6),
rep("D", 6),
rep("E", 6)))) %>%
pivot_wider(names_from = "Model", values_from = "GeoMean", names_prefix = "Model ") %>%
mutate(`Model B` = log(`Model B`) - log(`Model A`),
`Model C` = log(`Model D`) - log(`Model A`),
`Model D` = log(`Model D`) - log(`Model A`),
`Model E` = log(`Model E`) - log(`Model A`),
`Model A` = 0) %>%
pivot_longer(cols = starts_with("Model"), names_to = "Model", values_to = "GeoMean")
results %>%
ggplot(aes(x = Minute, y = GeoMean, col = Model)) +
geom_line() +
geom_point() +
scale_x_continuous(breaks = c(0, 15, 30, 45, 60, 75)) +
theme_bw() +
ggtitle("All predicted matches") +
ylab("Geometric mean for the results")
results %>%
pivot_wider(id_cols = "Model", values_from = "GeoMean", names_from = "Minute",
names_prefix = "Minute ") %>%
kable()
results = tibble(GeoMean = apply(HDA[,c(99:128)], 2, EnvStats::geoMean),
Minute = as.integer(rep(c(0, 15, 30, 45, 60, 75), 5)),
Model = factor(c(rep("A", 6),
rep("B", 6),
rep("C", 6),
rep("D", 6),
rep("E", 6)))) %>%
pivot_wider(names_from = "Model", values_from = "GeoMean", names_prefix = "Model ") %>%
mutate(`Model B` = log(`Model B`) - log(`Model A`),
`Model C` = log(`Model C`) - log(`Model A`),
`Model D` = log(`Model D`) - log(`Model A`),
`Model E` = log(`Model E`) - log(`Model A`),
`Model A` = 0) %>%
pivot_longer(cols = starts_with("Model"), names_to = "Model", values_to = "GeoMean")
results %>%
ggplot(aes(x = Minute, y = GeoMean, col = Model)) +
geom_line() +
geom_point() +
scale_x_continuous(breaks = c(0, 15, 30, 45, 60, 75)) +
theme_bw() +
ggtitle("All predicted matches") +
ylab("Geometric mean for the results")
results %>%
pivot_wider(id_cols = "Model", values_from = "GeoMean", names_from = "Minute",
names_prefix = "Minute ") %>%
kable()
load("~/GitHub/soccer-live-predictions/soccer-live-predictions/odds/data/HDA_bet365.RData")
library(dplyr)
library(ggplot2)
library(tidyr)
library(knitr)
load("~/GitHub/soccer-live-predictions/soccer-live-predictions/odds/data/HDA_bet365.RData")
load("data/first_matches.RData")
HDA = HDA_dc %>%
anti_join(first_matches)
library(dplyr)
library(ggplot2)
library(tidyr)
library(knitr)
load("~/GitHub/soccer-live-predictions/soccer-live-predictions/odds/data/HDA_bet365.RData")
load("data/first_matches.RData")
HDA = HDA_bet365 %>%
anti_join(first_matches) %>%
filter(!is.na(Home_bet365))
nrow(HDA)
HDA[,c(9:158)][which(HDA[,c(9:158)] == 0, arr.ind = TRUE)] = 10^-5
library(dplyr)
library(ggplot2)
library(tidyr)
library(knitr)
load("~/GitHub/soccer-live-predictions/soccer-live-predictions/odds/data/HDA_bet365.RData")
load("data/first_matches.RData")
HDA = HDA_bet365 %>%
anti_join(first_matches) %>%
filter(!is.na(Home_bet365))
nrow(HDA)
HDA[,c(9:158)][which(HDA[,c(9:158)] == 0, arr.ind = TRUE)] = 10^-5
names(HDA)
View(HDA_bet365)
names(HDA)
pnk_Result <- function(Score, Home, Draw, Away) {
if(Score == 1) {
return(Home)
} else if(Score == 2) {
return(Draw)
} else {
return(Away)
}
}
load("odds/data/bet365.RData")
load("weight/data/HDA_dc_2.RData")
nrow(HDA_dc)
nrow(bet365)
bet365 = bet365 %>%
select(-Date, -Score_Home, -Score_Away)
HDA_bet365 = left_join(HDA_dc, bet365, by = c("Season", "Home_Team", "Away_Team")) %>%
rowwise() %>%
mutate(pnk_Result_bet365 = pnk_Result(Result, Home_bet365, Draw_bet365, Away_bet365))
View(HDA_bet365)
library(dplyr)
library(ggplot2)
library(tidyr)
library(knitr)
load("~/GitHub/soccer-live-predictions/soccer-live-predictions/odds/data/HDA_bet365.RData")
load("data/first_matches.RData")
HDA = HDA_bet365 %>%
anti_join(first_matches) %>%
filter(!is.na(Home_bet365))
nrow(HDA)
HDA[,c(9:158)][which(HDA[,c(9:158)] == 0, arr.ind = TRUE)] = 10^-5
HDA
names(HDA)
library(dplyr)
library(ggplot2)
library(tidyr)
library(knitr)
load("~/GitHub/soccer-live-predictions/soccer-live-predictions/odds/data/HDA_bet365.RData")
load("data/first_matches.RData")
HDA = HDA_bet365 %>%
anti_join(first_matches) %>%
filter(!is.na(Home_bet365))
nrow(HDA)
HDA[,c(9:158)][which(HDA[,c(9:158)] == 0, arr.ind = TRUE)] = 10^-5
View(HDA)
source('~/GitHub/soccer-live-predictions/soccer-live-predictions/odds/HDA_bet365.R', encoding = 'UTF-8', echo=TRUE)
names(HDA_bet365)
library(dplyr)
library(ggplot2)
library(tidyr)
library(knitr)
load("~/GitHub/soccer-live-predictions/soccer-live-predictions/odds/data/HDA_bet365.RData")
load("data/first_matches.RData")
HDA = HDA_bet365 %>%
anti_join(first_matches) %>%
filter(!is.na(Home_bet365))
nrow(HDA)
HDA[,c(9:158)][which(HDA[,c(9:158)] == 0, arr.ind = TRUE)] = 10^-5
names(HDA_bet365)
library(dplyr)
library(ggplot2)
library(tidyr)
library(knitr)
load("~/GitHub/soccer-live-predictions/soccer-live-predictions/odds/data/HDA_bet365.RData")
load("data/first_matches.RData")
HDA = HDA_bet365 %>%
anti_join(first_matches) %>%
filter(!is.na(Home_bet365))
nrow(HDA)
HDA[,c(9:161)][which(HDA[,c(9:161)] == 0, arr.ind = TRUE)] = 10^-5
library(dplyr)
library(ggplot2)
library(tidyr)
library(knitr)
load("~/GitHub/soccer-live-predictions/soccer-live-predictions/odds/data/HDA_bet365.RData")
load("data/first_matches.RData")
HDA = HDA_bet365 %>%
anti_join(first_matches) %>%
filter(!is.na(Home_bet365))
nrow(HDA)
HDA[,c(9:161)][which(HDA[,c(9:161)] == 0, arr.ind = TRUE)] = 10^-5
library(dplyr)
library(ggplot2)
library(tidyr)
library(knitr)
load("~/GitHub/soccer-live-predictions/soccer-live-predictions/odds/data/HDA_bet365.RData")
load("data/first_matches.RData")
HDA = HDA_bet365 %>%
anti_join(first_matches) %>%
filter(!is.na(Home_bet365))
nrow(HDA)
HDA[,c(9:161)][which(HDA[,c(9:161)] == 0, arr.ind = TRUE)] = 10^-5
View(HDA)
which(HDA[,c(9:161)] == 0, arr.ind = TRUE)
HDA[,c(9:161)][which(HDA[,c(9:161)] == 0, arr.ind = TRUE)]
names(HDA)
library(dplyr)
library(ggplot2)
library(tidyr)
library(knitr)
load("~/GitHub/soccer-live-predictions/soccer-live-predictions/odds/data/HDA_bet365.RData")
load("data/first_matches.RData")
HDA = HDA_bet365 %>%
anti_join(first_matches) %>%
filter(!is.na(Home_bet365))
nrow(HDA)
HDA[,c(9:162)][which(HDA[,c(9:162)] == 0, arr.ind = TRUE)] = 10^-5
library(dplyr)
library(ggplot2)
library(tidyr)
library(knitr)
load("~/GitHub/soccer-live-predictions/soccer-live-predictions/odds/data/HDA_bet365.RData")
load("data/first_matches.RData")
HDA = HDA_bet365 %>%
anti_join(first_matches) %>%
filter(!is.na(Home_bet365))
nrow(HDA)
HDA[,c(9:162)][which(HDA[,c(9:162)] == 0, arr.ind = TRUE)] = 10^-5
library(dplyr)
library(ggplot2)
library(tidyr)
library(knitr)
load("~/GitHub/soccer-live-predictions/soccer-live-predictions/odds/data/HDA_bet365.RData")
load("data/first_matches.RData")
HDA = HDA_bet365 %>%
anti_join(first_matches) %>%
filter(!is.na(Home_bet365))
nrow(HDA)
HDA[,c(9:162)][which(HDA[,c(9:162)] == 0, arr.ind = TRUE)] = 10^-5
library(dplyr)
library(ggplot2)
library(tidyr)
library(knitr)
load("~/GitHub/soccer-live-predictions/soccer-live-predictions/odds/data/HDA_bet365.RData")
load("data/first_matches.RData")
HDA = HDA_bet365 %>%
anti_join(first_matches) %>%
filter(!is.na(Home_bet365))
nrow(HDA)
HDA[,c(9:162)][which(HDA[,c(9:162)] == 0, arr.ind = TRUE)] = 10^-5
library(dplyr)
library(ggplot2)
library(tidyr)
library(knitr)
load("~/GitHub/soccer-live-predictions/soccer-live-predictions/odds/data/HDA_bet365.RData")
load("data/first_matches.RData")
HDA = HDA_bet365 %>%
anti_join(first_matches) %>%
filter(!is.na(Home_bet365))
nrow(HDA)
HDA[,c(9:162)][which(HDA[,c(9:162)] == 0, arr.ind = TRUE)] = 10^-5
library(dplyr)
library(ggplot2)
library(tidyr)
library(knitr)
load("~/GitHub/soccer-live-predictions/soccer-live-predictions/odds/data/HDA_bet365.RData")
load("data/first_matches.RData")
HDA = HDA_bet365 %>%
anti_join(first_matches) %>%
filter(!is.na(Home_bet365))
nrow(HDA)
HDA[,c(9:162)][which(HDA[,c(9:162)] == 0, arr.ind = TRUE)] = 10^-5
library(dplyr)
library(ggplot2)
library(tidyr)
library(knitr)
load("~/GitHub/soccer-live-predictions/soccer-live-predictions/odds/data/HDA_bet365.RData")
load("data/first_matches.RData")
HDA = HDA_bet365 %>%
anti_join(first_matches) %>%
filter(!is.na(Home_bet365))
nrow(HDA)
HDA[,c(9:162)][which(HDA[,c(9:162)] == 0, arr.ind = TRUE)] = 10^-5
library(dplyr)
library(ggplot2)
library(tidyr)
library(knitr)
load("~/GitHub/soccer-live-predictions/soccer-live-predictions/odds/data/HDA_bet365.RData")
load("data/first_matches.RData")
HDA = HDA_bet365 %>%
anti_join(first_matches) %>%
filter(!is.na(Home_bet365))
nrow(HDA)
HDA[,c(9:162)][which(HDA[,c(9:162)] == 0, arr.ind = TRUE)] = 10^-5
HDA[,c(9:162)]
library(dplyr)
library(ggplot2)
library(tidyr)
library(knitr)
load("~/GitHub/soccer-live-predictions/soccer-live-predictions/odds/data/HDA_bet365.RData")
load("data/first_matches.RData")
HDA = HDA_bet365 %>%
anti_join(first_matches) %>%
filter(!is.na(Home_bet365))
nrow(HDA)
HDA = as.data.frame(HDA)
HDA[,c(9:162)][which(HDA[,c(9:162)] == 0, arr.ind = TRUE)] = 10^-5
names(HDA)
results = tibble(GeoMean = apply(HDA[,c(99, 105, 101, 117, 123, 162)], 2, EnvStats::geoMean),
Model = c("A", "B", "C", "D", "E", "bet365"))
results
names(results)
names(HDA)
names(results)
kable(results)
library(dplyr)
library(ggplot2)
library(tidyr)
library(knitr)
load("~/GitHub/soccer-live-predictions/soccer-live-predictions/odds/data/HDA_bet365.RData")
load("data/first_matches.RData")
HDA = HDA_bet365 %>%
anti_join(first_matches) %>%
filter(!is.na(Home_bet365))
nrow(HDA)
HDA = as.data.frame(HDA)
HDA[,c(9:162)][which(HDA[,c(9:162)] == 0, arr.ind = TRUE)] = 10^-5
results = tibble(GeoMean = apply(HDA[,c(99, 105, 101, 117, 123, 162)], 2, EnvStats::geoMean),
Model = c("A", "B", "C", "D", "E", "bet365"))
kable(results)
library(dplyr)
library(ggplot2)
library(tidyr)
library(knitr)
load("~/GitHub/soccer-live-predictions/soccer-live-predictions/odds/data/HDA_bet365.RData")
load("data/first_matches.RData")
HDA = HDA_bet365 %>%
anti_join(first_matches) #%>%
#filter(!is.na(Home_bet365))
nrow(HDA)
HDA = as.data.frame(HDA)
HDA[,c(9:162)][which(HDA[,c(9:162)] == 0, arr.ind = TRUE)] = 10^-5
results = tibble(GeoMean = apply(HDA[,c(99, 105, 101, 117, 123, 162)], 2, EnvStats::geoMean),
Model = c("A", "B", "C", "D", "E", "bet365"))
kable(results)
names(HDA)
results = tibble(GeoMean = apply(HDA[,c(99, 105, 111, 117, 123, 162)], 2, EnvStats::geoMean),
Model = c("A", "B", "C", "D", "E", "bet365"))
kable(results)
names(HDA)
library(dplyr)
library(ggplot2)
library(tidyr)
library(knitr)
load("~/GitHub/soccer-live-predictions/soccer-live-predictions/odds/data/HDA_bet365.RData")
load("data/first_matches.RData")
HDA = HDA_bet365 %>%
anti_join(first_matches) #%>%
#filter(!is.na(Home_bet365))
nrow(HDA)
HDA = as.data.frame(HDA)
HDA[,c(9:162)][which(HDA[,c(9:162)] == 0, arr.ind = TRUE)] = 10^-5
names(HDA)
results = tibble(GeoMean = apply(HDA[,c(99, 105, 111, 117, 123, 162)], 2, EnvStats::geoMean),
Model = c("A", "B", "C", "D", "E", "bet365"))
kable(results)
library(dplyr)
library(ggplot2)
library(tidyr)
library(knitr)
load("data/HDA_dc.RData")
load("data/first_matches.RData")
HDA = HDA_dc %>%
anti_join(first_matches)
nrow(HDA)
results = tibble(GeoMean = apply(HDA[,c(99, 105, 111, 117, 123, 162)], 2, EnvStats::geoMean),
Model = c("A", "B", "C", "D", "E", "bet365"))
results = tibble(GeoMean = apply(HDA[,c(99, 105, 111, 117, 123)], 2, EnvStats::geoMean),
Model = c("A", "B", "C", "D", "E", "bet365"))
HDA
names(HDA)
# results = tibble(GeoMean = apply(HDA[,c(99, 105, 111, 117, 123, 162)], 2, EnvStats::geoMean),
#                  Model = c("A", "B", "C", "D", "E", "bet365"))
results = tibble(GeoMean = apply(HDA[,c(99, 105, 111, 117, 123)], 2, EnvStats::geoMean),
Model = c("A", "B", "C", "D", "E"))
kable(results)
library(dplyr)
library(ggplot2)
library(tidyr)
library(knitr)
load("~/GitHub/soccer-live-predictions/soccer-live-predictions/odds/data/HDA_bet365.RData")
load("data/first_matches.RData")
HDA = HDA_bet365 %>%
anti_join(first_matches) #%>%
#filter(!is.na(Home_bet365))
nrow(HDA)
HDA = as.data.frame(HDA)
HDA[,c(9:162)][which(HDA[,c(9:162)] == 0, arr.ind = TRUE)] = 10^-5
# results = tibble(GeoMean = apply(HDA[,c(99, 105, 111, 117, 123, 162)], 2, EnvStats::geoMean),
#                  Model = c("A", "B", "C", "D", "E", "bet365"))
results = tibble(GeoMean = apply(HDA[,c(99, 105, 111, 117, 123)], 2, EnvStats::geoMean),
Model = c("A", "B", "C", "D", "E"))
kable(results)
first_matches
library(dplyr)
library(ggplot2)
library(tidyr)
library(knitr)
load("~/GitHub/soccer-live-predictions/soccer-live-predictions/odds/data/HDA_bet365.RData")
load("data/first_matches.RData")
HDA = HDA_bet365 %>%
anti_join(first_matches) #%>%
#filter(!is.na(Home_bet365))
nrow(HDA)
HDA = as.data.frame(HDA)
HDA[,c(9:162)][which(HDA[,c(9:162)] == 0, arr.ind = TRUE)] = 10^-5
results = tibble(GeoMean = apply(HDA[,c(99, 105, 111, 117, 123, 162)], 2, EnvStats::geoMean),
Model = c("A", "B", "C", "D", "E", "bet365"))
# results = tibble(GeoMean = apply(HDA[,c(99, 105, 111, 117, 123)], 2, EnvStats::geoMean),
#                   Model = c("A", "B", "C", "D", "E"))
kable(results)
load("~/GitHub/soccer-live-predictions/soccer-live-predictions/odds/data/HDA_bet365.RData")
load("data/HDA_dc.RData")
load("data/HDA_dc.RData")
library(dplyr)
library(ggplot2)
library(tidyr)
library(knitr)
load("data/HDA_dc_2.RData")
load("data/first_matches.RData")
HDA = HDA_dc %>%
anti_join(first_matches)
nrow(HDA)
HDA[,c(9:158)][which(HDA[,c(9:158)] == 0, arr.ind = TRUE)] = 10^-5
results = tibble(GeoMean = apply(HDA[,c(99:128)], 2, EnvStats::geoMean),
Minute = as.integer(rep(c(0, 15, 30, 45, 60, 75), 5)),
Model = factor(c(rep("A", 6),
rep("B", 6),
rep("C", 6),
rep("D", 6),
rep("E", 6))))
results %>%
ggplot(aes(x = Minute, y = GeoMean, col = Model)) +
geom_line() +
geom_point() +
scale_x_continuous(breaks = c(0, 15, 30, 45, 60, 75)) +
theme_bw() +
ggtitle("All predicted matches") +
ylab("Geometric mean for the results")
results %>%
pivot_wider(id_cols = "Model", values_from = "GeoMean", names_from = "Minute",
names_prefix = "Minute ") %>%
kable()
library(dplyr)
library(ggplot2)
library(tidyr)
library(knitr)
load("~/GitHub/soccer-live-predictions/soccer-live-predictions/odds/data/HDA_bet365.RData")
load("data/first_matches.RData")
HDA = HDA_bet365 %>%
anti_join(first_matches) #%>%
#filter(!is.na(Home_bet365))
nrow(HDA)
HDA = as.data.frame(HDA)
HDA[,c(9:162)][which(HDA[,c(9:162)] == 0, arr.ind = TRUE)] = 10^-5
results = tibble(GeoMean = apply(HDA[,c(99, 105, 111, 117, 123, 162)], 2, EnvStats::geoMean),
Model = c("A", "B", "C", "D", "E", "bet365"))
# results = tibble(GeoMean = apply(HDA[,c(99, 105, 111, 117, 123)], 2, EnvStats::geoMean),
#                   Model = c("A", "B", "C", "D", "E"))
kable(results)
library(dplyr)
library(ggplot2)
library(tidyr)
library(knitr)
load("data/HDA_dc_2.RData")
load("data/first_matches.RData")
HDA = HDA_dc %>%
anti_join(first_matches)
nrow(HDA)
HDA[,c(9:158)][which(HDA[,c(9:158)] == 0, arr.ind = TRUE)] = 10^-5
names(HDA)
