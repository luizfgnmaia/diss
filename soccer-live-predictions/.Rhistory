source('~/GitHub/soccer-live-predictions/soccer-live-predictions/pred/mod_0.R', echo=TRUE)
mod_0
load("pred/data/predictions_mod_0.RData")
load("pred/data/predictions_mod_3.RData")
load("pred/data/predictions_mod_3_2019.RData")
load("pred/data/predictions_mod_3_2015_2019.RData")
n_pred = 10^6
HDA = tibble()
library(dplyr)
HDA = tibble()
predictions_mod_0
predictions_mod_0[[1]]
predictions_mod_0[[1]]
predictions_mod_0[[1]]$Match
predictions_mod_0[[1]]$pred_0
predictions_mod_0[[1]]$pred_0$Result[[1]]
source('~/GitHub/soccer-live-predictions/soccer-live-predictions/pred/HDA.R', echo=TRUE)
source('~/GitHub/soccer-live-predictions/soccer-live-predictions/pred/HDA.R', echo=TRUE)
library(dplyr)
library(ggplot2)
load("data/HDA.RData")
nrow(HDA)
View(HDA)
as.integer(rep(c(0, 15, 30, 45, 60, 75), 2))
as.integer(rep(c(0, 15, 30, 45, 60, 75), 4))
names(RPS)
colnames(RPS)
colnames(HDA)
tibble(RPS = apply(HDA[,-c(1:80)], 2, mean),
Minute = as.integer(rep(c(0, 15, 30, 45, 60, 75), 4)),
Model = c(rep("0", 6), rep("3", 6), rep("3 (2019)"), rep("3 (2015-2019)"))) %>%
ggplot(aes(x = Minute, y = RPS, col = Model)) +
geom_line() +
geom_point() +
scale_x_continuous(breaks = c(0, 15, 30, 45, 60, 75)) +
theme_bw() +
ggtitle("All predicted matches")
c1 = apply(HDA[,-c(1:80)], 2, mean
)
c2 = as.integer(rep(c(0, 15, 30, 45, 60, 75), 4))
c3 = c(rep("0", 6), rep("3", 6), rep("3 (2019)"), rep("3 (2015-2019)"))
length(c1)
length(c2)
length(c3)
tibble(RPS = apply(HDA[,-c(1:80)], 2, mean),
Minute = as.integer(rep(c(0, 15, 30, 45, 60, 75), 4)),
Model = c(rep("0", 6), rep("3", 6), rep("3 (2019)", 6), rep("3 (2015-2019)", 6))) %>%
ggplot(aes(x = Minute, y = RPS, col = Model)) +
geom_line() +
geom_point() +
scale_x_continuous(breaks = c(0, 15, 30, 45, 60, 75)) +
theme_bw() +
ggtitle("All predicted matches")
HDA2 = HDA %>%
filter(Match <= 190)
tibble(RPS = apply(HDA2[,-c(1:80)], 2, mean),
Minute = as.integer(rep(c(0, 15, 30, 45, 60, 75), 4)),
Model = c(rep("0", 6), rep("3", 6), rep("3 (2019)", 6), rep("3 (2015-2019)", 6))) %>%
ggplot(aes(x = Minute, y = RPS, col = Model)) +
geom_line() +
geom_point() +
scale_x_continuous(breaks = c(0, 15, 30, 45, 60, 75)) +
theme_bw() +
ggtitle("All predicted matches")
HDA3 = HDA %>%
filter(Match > 190)
tibble(RPS = apply(HDA3[,-c(1:80)], 2, mean),
Minute = as.integer(rep(c(0, 15, 30, 45, 60, 75), 4)),
Model = c(rep("0", 6), rep("3", 6), rep("3 (2019)", 6), rep("3 (2015-2019)", 6))) %>%
ggplot(aes(x = Minute, y = RPS, col = Model)) +
geom_line() +
geom_point() +
scale_x_continuous(breaks = c(0, 15, 30, 45, 60, 75)) +
theme_bw() +
ggtitle("All predicted matches")
tibble(RPS = apply(HDA[,-c(1:80)], 2, mean),
Minute = as.integer(rep(c(0, 15, 30, 45, 60, 75), 4)),
Model = factor(c(rep("0", 6), rep("3", 6), rep("3 (2019)", 6),
rep("3 (2015-2019)", 6)))) %>%
ggplot(aes(x = Minute, y = RPS, col = Model)) +
geom_line() +
geom_point() +
scale_x_continuous(breaks = c(0, 15, 30, 45, 60, 75)) +
theme_bw() +
ggtitle("All predicted matches")
library(dplyr)
library(ggplot2)
load("data/HDA.RData")
nrow(HDA)
tibble(RPS = apply(HDA[,-c(1:80)], 2, mean),
Minute = as.integer(rep(c(0, 15, 30, 45, 60, 75), 4)),
Model = factor(c(rep("0", 6), rep("3", 6), rep("3 (2019)", 6),
rep("3 (2015-2019)", 6)))) %>%
ggplot(aes(x = Minute, y = RPS, col = Model)) +
geom_line() +
geom_point() +
scale_x_continuous(breaks = c(0, 15, 30, 45, 60, 75)) +
theme_bw() +
ggtitle("All predicted matches")
?factor
tibble(RPS = apply(HDA[,-c(1:80)], 2, mean),
Minute = as.integer(rep(c(0, 15, 30, 45, 60, 75), 4)),
Model = factor(c(rep("0", 6), rep("3", 6), rep("3 (2019)", 6),
rep("3 (2015-2019)", 6))),
levels = c(rep("0", 6), rep("3", 6), rep("3 (2019)", 6),
rep("3 (2015-2019)", 6))) %>%
ggplot(aes(x = Minute, y = RPS, col = Model)) +
geom_line() +
geom_point() +
scale_x_continuous(breaks = c(0, 15, 30, 45, 60, 75)) +
theme_bw() +
ggtitle("All predicted matches")
tibble(RPS = apply(HDA[,-c(1:80)], 2, mean),
Minute = as.integer(rep(c(0, 15, 30, 45, 60, 75), 4)),
Model = c(rep("0", 6), rep("3", 6), rep("3 (2019)", 6),
rep("3 (2015-2019)", 6))) %>%
ggplot(aes(x = Minute, y = RPS, col = Model)) +
geom_line() +
geom_point() +
scale_x_continuous(breaks = c(0, 15, 30, 45, 60, 75)) +
theme_bw() +
ggtitle("All predicted matches")
tibble(RPS = apply(HDA[,-c(1:80)], 2, mean),
Minute = as.integer(rep(c(0, 15, 30, 45, 60, 75), 4)),
Model = factor(c(rep("0", 6), rep("3", 6), rep("3 (2019)", 6),
rep("3 (2015-2019)", 6)),
levels = c("0", "3", "3 (2019)", "3 (2015-2019)"))) %>%
ggplot(aes(x = Minute, y = RPS, col = Model)) +
geom_line() +
geom_point() +
scale_x_continuous(breaks = c(0, 15, 30, 45, 60, 75)) +
theme_bw() +
ggtitle("All predicted matches")
library(dplyr)
library(ggplot2)
load("data/HDA.RData")
nrow(HDA)
tibble(RPS = apply(HDA[,-c(1:80)], 2, mean),
Minute = as.integer(rep(c(0, 15, 30, 45, 60, 75), 4)),
Model = factor(c(rep("0", 6), rep("3", 6), rep("3 (2019)", 6),
rep("3 (2015-2019)", 6)),
levels = c("0", "3", "3 (2019)", "3 (2015-2019)"))) %>%
ggplot(aes(x = Minute, y = RPS, col = Model)) +
geom_line() +
geom_point() +
scale_x_continuous(breaks = c(0, 15, 30, 45, 60, 75)) +
theme_bw() +
ggtitle("All predicted matches")
tibble(RPS = apply(HDA[c(1:100),-c(1:80)], 2, mean),
Minute = as.integer(rep(c(0, 15, 30, 45, 60, 75), 4)),
Model = factor(c(rep("0", 6), rep("3", 6), rep("3 (2019)", 6),
rep("3 (2015-2019)", 6)),
levels = c("0", "3", "3 (2019)", "3 (2015-2019)"))) %>%
ggplot(aes(x = Minute, y = RPS, col = Model)) +
geom_line() +
geom_point() +
scale_x_continuous(breaks = c(0, 15, 30, 45, 60, 75)) +
theme_bw() +
ggtitle("All predicted matches")
tibble(RPS = apply(HDA[c(1:200),-c(1:80)], 2, mean),
Minute = as.integer(rep(c(0, 15, 30, 45, 60, 75), 4)),
Model = factor(c(rep("0", 6), rep("3", 6), rep("3 (2019)", 6),
rep("3 (2015-2019)", 6)),
levels = c("0", "3", "3 (2019)", "3 (2015-2019)"))) %>%
ggplot(aes(x = Minute, y = RPS, col = Model)) +
geom_line() +
geom_point() +
scale_x_continuous(breaks = c(0, 15, 30, 45, 60, 75)) +
theme_bw() +
ggtitle("First 200 matches")
tibble(RPS = apply(HDA[c(151:350),-c(1:80)], 2, mean),
Minute = as.integer(rep(c(0, 15, 30, 45, 60, 75), 4)),
Model = factor(c(rep("0", 6), rep("3", 6), rep("3 (2019)", 6),
rep("3 (2015-2019)", 6)),
levels = c("0", "3", "3 (2019)", "3 (2015-2019)"))) %>%
ggplot(aes(x = Minute, y = RPS, col = Model)) +
geom_line() +
geom_point() +
scale_x_continuous(breaks = c(0, 15, 30, 45, 60, 75)) +
theme_bw() +
ggtitle("Last 200 matches")
tibble(RPS = apply(HDA[c(251:350),-c(1:80)], 2, mean),
Minute = as.integer(rep(c(0, 15, 30, 45, 60, 75), 4)),
Model = factor(c(rep("0", 6), rep("3", 6), rep("3 (2019)", 6),
rep("3 (2015-2019)", 6)),
levels = c("0", "3", "3 (2019)", "3 (2015-2019)"))) %>%
ggplot(aes(x = Minute, y = RPS, col = Model)) +
geom_line() +
geom_point() +
scale_x_continuous(breaks = c(0, 15, 30, 45, 60, 75)) +
theme_bw() +
ggtitle("Last 100 matches")
source('~/GitHub/soccer-live-predictions/soccer-live-predictions/pred/HDA.R', echo=TRUE)
source('~/GitHub/soccer-live-predictions/soccer-live-predictions/pred/HDA.R', echo=TRUE)
library(dplyr)
library(ggplot2)
load("data/HDA.RData")
nrow(HDA)
colnames(HDA)
