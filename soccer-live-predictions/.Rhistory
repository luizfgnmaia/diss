XL = sample(names(Score), size = size, replace = TRUE, prob = Score)
XL1 = as.integer(substr(XL, start = 1, stop = 1))
XL2 = as.integer(substr(XL, start = 3, stop = 3))
EXXL = mean(abs(X1 - XL1) + abs(X2 - XL2))
EX - 0.5*EXXL
}
ENERG1(predictions_mod_0[[100]]$pred_0$Score,
predictions_mod_0[[100]]$Match)
source('~/GitHub/soccer-live-predictions/soccer-live-predictions/pred/HDA2.R', echo=TRUE)
warnings()
source('~/GitHub/soccer-live-predictions/soccer-live-predictions/pred/HDA2.R', echo=TRUE)
source('~/GitHub/soccer-live-predictions/soccer-live-predictions/pred/HDA2.R', echo=TRUE)
warnings()
mean(ENERG1_mod_0_pred_0)
mean(ENERG1_mod_0_pred_1)
mean(ENERG1_mod_0_pred_15)
mean(ENERG1_mod_3_2015_2019_pred_0)
source('~/GitHub/soccer-live-predictions/soccer-live-predictions/pred/HDA2.R', echo=TRUE)
warnings()
predictions_mod_3_2019
View(HDA2)
HDA2 = cbind(HDA, ENERG1_mod_0_pred_0, ENERG1_mod_0_pred_15, ENERG1_mod_0_pred_30,
ENERG1_mod_0_pred_45, ENERG1_mod_0_pred_60, ENERG1_mod_0_pred_75,
ENERG1_mod_3_pred_0, ENERG1_mod_3_pred_15, ENERG1_mod_3_pred_30,
ENERG1_mod_3_pred_45, ENERG1_mod_3_pred_60, ENERG1_mod_3_pred_75,
ENERG1_mod_3_2019_pred_0, ENERG1_mod_3_2019_pred_15, ENERG1_mod_3_2019_pred_30,
ENERG1_mod_3_2019_pred_45, ENERG1_mod_3_2019_pred_60, ENERG1_mod_3_2019_pred_75,
ENERG1_mod_3_2015_2019_pred_0, ENERG1_mod_3_2015_2019_pred_15, ENERG1_mod_3_2015_2019_pred_30,
ENERG1_mod_3_2015_2019_pred_45, ENERG1_mod_3_2015_2019_pred_60, ENERG1_mod_3_2015_2019_pred_75)
save(HDA2, file = "pred/data/HDA2.RData")
max(HDA2)
max(HDA2$ENERG1_mod_3_2015_2019_pred_75)
min(HDA2$ENERG1_mod_3_2015_2019_pred_75)
View(HDA2)
i = 350
ENERG1(predictions_mod_3_2015_2019[[i]]$pred_75$Score, predictions_mod_3_2015_2019[[i]]$Match)
ENERG1(predictions_mod_3_2015_2019[[i]]$pred_60$Score, predictions_mod_3_2015_2019[[i]]$Match)
Score = predictions_mod_3_2015_2019[[i]]$pred_60$Score
Match = predictions_mod_3_2015_2019[[i]]$Match
Score
sum(Score)
Score = predictions_mod_3_2015_2019[[i]]$pred_60$Score
Match = predictions_mod_3_2015_2019[[i]]$Match
x1 = Match$Score_Home
x2 = Match$Score_Away
x1
x2
X = sample(names(Score), size = size, replace = TRUE, prob = Score)
X1 = as.integer(substr(X, start = 1, stop = 1))
X2 = as.integer(substr(X, start = 3, stop = 3))
EX = mean(abs(X1 - x1) + abs(X2 - x2))
X = sample(names(Score), size = size, replace = TRUE, prob = Score)
size = 10^6
X = sample(names(Score), size = size, replace = TRUE, prob = Score)
X1 = as.integer(substr(X, start = 1, stop = 1))
X2 = as.integer(substr(X, start = 3, stop = 3))
EX = mean(abs(X1 - x1) + abs(X2 - x2))
EX
X = sample(names(Score), size = size, replace = TRUE, prob = Score)
X1 = as.integer(substr(X, start = 1, stop = 1))
X2 = as.integer(substr(X, start = 3, stop = 3))
XL = sample(names(Score), size = size, replace = TRUE, prob = Score)
XL1 = as.integer(substr(XL, start = 1, stop = 1))
XL2 = as.integer(substr(XL, start = 3, stop = 3))
library(stringr)
X1 = as.integer(str_extract(X, "?<=-"))
X1 = as.integer(str_extract(X, "?<=\\-"))
str_extract(X, "?<=\\-")
str_extract(X, "?<=\\-")
X
str_extract(X, "?<=\\-")
str_extract(X, "(?<=)\\-")
str_extract(X, "(?<=-)[0-9]*")
str_extract(X, "(?<=-)[0-9]*")
str_extract(X, "(?<=-)[0-9]*")
str_extract("10-1", "(?<=-)[0-9]*")
str_extract("10-1", "(?<=-)[0-9]*")
str_extract("2-1", "(?<=-)[0-9]*")
str_extract("2-1", "(?<=-)[0-9]*")
str_extract("2-1", "[0-9](?<=)")
str_extract("2-1", "[0-9](?<=)")
str_extract("2-1", "[0-9](?<=)")
str_extract("2-1", "[0-9](?<=)")
str_extract("2-1", "[0-9](?<=)")
str_extract("2-1", "[0-9](?<=)")
str_extract("2-1", "[0-9](?<=)")
str_extract("2-1", "[0-9](?<=)")
str_extract("2-1", "[0-9](?<=)")
str_extract("2-1", "[0-9](?<=)")
str_extract("2-1", "[0-9](?<=)")
str_extract("2-1", "[0-9](?<=)")
X1 = as.integer(str_extract("2-1", "[0-9](?<=)"))
X2 = as.integer(str_extract("2-1", "(?<=-)[0-9]*"))
X1
X2
X1
X1 = as.integer(str_extract("2-1", "[0-9](?<=)"))
X2 = as.integer(str_extract("2-1", "(?<=-)[0-9]*"))
X1
X2
X=("3-1")
X1 = as.integer(str_extract(X, "[0-9](?<=)"))
X2 = as.integer(str_extract(X, "(?<=-)[0-9]*"))
X1
X2
X = sample(names(Score), size = size, replace = TRUE, prob = Score)
X1 = as.integer(str_extract(X, "[0-9](?<=)"))
X2 = as.integer(str_extract(X, "(?<=-)[0-9]*"))
X1
X2
X = c("3-1")
X1 = as.integer(str_extract(X, "[0-9](?<=)"))
X2 = as.integer(str_extract(X, "(?<=-)[0-9]*"))
x1
X1
X2
X = c("10-20")
X1 = as.integer(str_extract(X, "[0-9](?<=)"))
X2 = as.integer(str_extract(X, "(?<=-)[0-9]*"))
x1
x2
X1
X2
X = c("10-20")
X1 = as.integer(str_extract(X, "[0-9](?<=-)"))
X2 = as.integer(str_extract(X, "(?=-)[0-9]*"))
x1
X1
X2
X1 = as.integer(str_extract(X, "[0-9]*(?<=-)"))
X2 = as.integer(str_extract(X, "(?=-)[0-9]*"))
X1
X2
X1 = as.integer(str_extract(X, "[0-9]*(?=-)"))
x1
X1
X1
X2 = as.integer(str_extract(X, "(?<=-)[0-9]*"))
X2
x1 = Match$Score_Home
x2 = Match$Score_Away
X = c("10-40")
X1 = as.integer(str_extract(X, "[0-9]*(?=-)"))
X2 = as.integer(str_extract(X, "(?<=-)[0-9]*"))
X1
X2
X = c("1-4")
X1 = as.integer(str_extract(X, "[0-9]*(?=-)"))
X2 = as.integer(str_extract(X, "(?<=-)[0-9]*"))
X1
X2
source('~/GitHub/soccer-live-predictions/soccer-live-predictions/pred/HDA2.R', echo=TRUE)
source('~/GitHub/soccer-live-predictions/soccer-live-predictions/pred/HDA2.R', echo=TRUE)
library(dplyr)
library(ggplot2)
load("data/HDA2.RData")
nrow(HDA2)
names(HDA2)
View(HDA2)
library(dplyr)
library(ggplot2)
load("data/HDA2.RData")
nrow(HDA2)
tibble(Brier = apply(HDA2[,c(129:152)], 2, mean),
Minute = as.integer(rep(c(0, 15, 30, 45, 60, 75), 4)),
Model = factor(c(rep("0", 6), rep("3", 6), rep("3 (2019)", 6),
rep("3 (2015-2019)", 6)),
levels = c("0", "3", "3 (2019)", "3 (2015-2019)"))) %>%
ggplot(aes(x = Minute, y = Brier, col = Model)) +
geom_line() +
geom_point() +
scale_x_continuous(breaks = c(0, 15, 30, 45, 60, 75)) +
theme_bw() +
ggtitle("All predicted matches") +
ylab("Energy norm 1")
tibble(Brier = apply(HDA2[c(1:100),c(129:152)], 2, mean),
Minute = as.integer(rep(c(0, 15, 30, 45, 60, 75), 4)),
Model = factor(c(rep("0", 6), rep("3", 6), rep("3 (2019)", 6),
rep("3 (2015-2019)", 6)),
levels = c("0", "3", "3 (2019)", "3 (2015-2019)"))) %>%
ggplot(aes(x = Minute, y = Brier, col = Model)) +
geom_line() +
geom_point() +
scale_x_continuous(breaks = c(0, 15, 30, 45, 60, 75)) +
theme_bw() +
ggtitle("First 100 matches") +
ylab("Energy norm 1")
tibble(Brier = apply(HDA2[c(1:200),c(129:152)], 2, mean),
Minute = as.integer(rep(c(0, 15, 30, 45, 60, 75), 4)),
Model = factor(c(rep("0", 6), rep("3", 6), rep("3 (2019)", 6),
rep("3 (2015-2019)", 6)),
levels = c("0", "3", "3 (2019)", "3 (2015-2019)"))) %>%
ggplot(aes(x = Minute, y = Brier, col = Model)) +
geom_line() +
geom_point() +
scale_x_continuous(breaks = c(0, 15, 30, 45, 60, 75)) +
theme_bw() +
ggtitle("First 200 matches") +
ylab("Energy norm 1")
tibble(Brier = apply(HDA2[c(151:350),c(129:152)], 2, mean),
Minute = as.integer(rep(c(0, 15, 30, 45, 60, 75), 4)),
Model = factor(c(rep("0", 6), rep("3", 6), rep("3 (2019)", 6),
rep("3 (2015-2019)", 6)),
levels = c("0", "3", "3 (2019)", "3 (2015-2019)"))) %>%
ggplot(aes(x = Minute, y = Brier, col = Model)) +
geom_line() +
geom_point() +
scale_x_continuous(breaks = c(0, 15, 30, 45, 60, 75)) +
theme_bw() +
ggtitle("Last 200 matches") +
ylab("Energy norm 1")
tibble(Brier = apply(HDA2[c(251:350),c(129:152)], 2, mean),
Minute = as.integer(rep(c(0, 15, 30, 45, 60, 75), 4)),
Model = factor(c(rep("0", 6), rep("3", 6), rep("3 (2019)", 6),
rep("3 (2015-2019)", 6)),
levels = c("0", "3", "3 (2019)", "3 (2015-2019)"))) %>%
ggplot(aes(x = Minute, y = Brier, col = Model)) +
geom_line() +
geom_point() +
scale_x_continuous(breaks = c(0, 15, 30, 45, 60, 75)) +
theme_bw() +
ggtitle("Last 100 matches") +
ylab("Energy norm 1")
library(dplyr)
library(ggplot2)
load("data/HDA2.RData")
nrow(HDA2)
tibble(ENERG1 = apply(HDA2[,c(129:152)], 2, mean),
Minute = as.integer(rep(c(0, 15, 30, 45, 60, 75), 4)),
Model = factor(c(rep("0", 6), rep("3", 6), rep("3 (2019)", 6),
rep("3 (2015-2019)", 6)),
levels = c("0", "3", "3 (2019)", "3 (2015-2019)"))) %>%
ggplot(aes(x = Minute, y = ENERG1, col = Model)) +
geom_line() +
geom_point() +
scale_x_continuous(breaks = c(0, 15, 30, 45, 60, 75)) +
theme_bw() +
ggtitle("All predicted matches") +
ylab("Energy norm 1")
tibble(ENERG1 = apply(HDA2[c(1:100),c(129:152)], 2, mean),
Minute = as.integer(rep(c(0, 15, 30, 45, 60, 75), 4)),
Model = factor(c(rep("0", 6), rep("3", 6), rep("3 (2019)", 6),
rep("3 (2015-2019)", 6)),
levels = c("0", "3", "3 (2019)", "3 (2015-2019)"))) %>%
ggplot(aes(x = Minute, y = ENERG1, col = Model)) +
geom_line() +
geom_point() +
scale_x_continuous(breaks = c(0, 15, 30, 45, 60, 75)) +
theme_bw() +
ggtitle("First 100 matches") +
ylab("Energy norm 1")
tibble(ENERG1 = apply(HDA2[c(1:200),c(129:152)], 2, mean),
Minute = as.integer(rep(c(0, 15, 30, 45, 60, 75), 4)),
Model = factor(c(rep("0", 6), rep("3", 6), rep("3 (2019)", 6),
rep("3 (2015-2019)", 6)),
levels = c("0", "3", "3 (2019)", "3 (2015-2019)"))) %>%
ggplot(aes(x = Minute, y = ENERG1, col = Model)) +
geom_line() +
geom_point() +
scale_x_continuous(breaks = c(0, 15, 30, 45, 60, 75)) +
theme_bw() +
ggtitle("First 200 matches") +
ylab("Energy norm 1")
tibble(ENERG1 = apply(HDA2[c(151:350),c(129:152)], 2, mean),
Minute = as.integer(rep(c(0, 15, 30, 45, 60, 75), 4)),
Model = factor(c(rep("0", 6), rep("3", 6), rep("3 (2019)", 6),
rep("3 (2015-2019)", 6)),
levels = c("0", "3", "3 (2019)", "3 (2015-2019)"))) %>%
ggplot(aes(x = Minute, y = ENERG1, col = Model)) +
geom_line() +
geom_point() +
scale_x_continuous(breaks = c(0, 15, 30, 45, 60, 75)) +
theme_bw() +
ggtitle("Last 200 matches") +
ylab("Energy norm 1")
tibble(ENERG1 = apply(HDA2[c(251:350),c(129:152)], 2, mean),
Minute = as.integer(rep(c(0, 15, 30, 45, 60, 75), 4)),
Model = factor(c(rep("0", 6), rep("3", 6), rep("3 (2019)", 6),
rep("3 (2015-2019)", 6)),
levels = c("0", "3", "3 (2019)", "3 (2015-2019)"))) %>%
ggplot(aes(x = Minute, y = ENERG1, col = Model)) +
geom_line() +
geom_point() +
scale_x_continuous(breaks = c(0, 15, 30, 45, 60, 75)) +
theme_bw() +
ggtitle("Last 100 matches") +
ylab("Energy norm 1")
a = tibble(ENERG1 = apply(HDA2[,c(129:152)], 2, mean),
Minute = as.integer(rep(c(0, 15, 30, 45, 60, 75), 4)),
Model = factor(c(rep("0", 6), rep("3", 6), rep("3 (2019)", 6),
rep("3 (2015-2019)", 6)),
levels = c("0", "3", "3 (2019)", "3 (2015-2019)")))
View(a)
names(HDA2)
tibble(ENERG1 = apply(HDA2[,c(129:152)], 2, mean),
Minute = as.integer(rep(c(0, 15, 30, 45, 60, 75), 4)),
Model = factor(c(rep("0", 6), rep("3", 6), rep("3 (2019)", 6),
rep("3 (2015-2019)", 6)))
library(dplyr)
library(ggplot2)
load("data/HDA2.RData")
nrow(HDA2)
tibble(ENERG1 = apply(HDA2[,c(129:152)], 2, mean),
Minute = as.integer(rep(c(0, 15, 30, 45, 60, 75), 4)),
Model = factor(c(rep("0", 6), rep("3", 6), rep("3 (2019)", 6),
rep("3 (2015-2019)", 6)),
levels = c("0", "3", "3 (2019)", "3 (2015-2019)"))) %>%
ggplot(aes(x = Minute, y = ENERG1, col = Model)) +
geom_line() +
geom_point() +
scale_x_continuous(breaks = c(0, 15, 30, 45, 60, 75)) +
theme_bw() +
ggtitle("All predicted matches") +
ylab("Energy norm 1")
tibble(ENERG1 = apply(HDA2[c(1:100),c(129:152)], 2, mean),
Minute = as.integer(rep(c(0, 15, 30, 45, 60, 75), 4)),
Model = factor(c(rep("0", 6), rep("3", 6), rep("3 (2019)", 6),
rep("3 (2015-2019)", 6)),
levels = c("0", "3", "3 (2019)", "3 (2015-2019)"))) %>%
ggplot(aes(x = Minute, y = ENERG1, col = Model)) +
geom_line() +
geom_point() +
scale_x_continuous(breaks = c(0, 15, 30, 45, 60, 75)) +
theme_bw() +
ggtitle("First 100 matches") +
ylab("Energy norm 1")
tibble(ENERG1 = apply(HDA2[c(1:200),c(129:152)], 2, mean),
Minute = as.integer(rep(c(0, 15, 30, 45, 60, 75), 4)),
Model = factor(c(rep("0", 6), rep("3", 6), rep("3 (2019)", 6),
rep("3 (2015-2019)", 6)),
levels = c("0", "3", "3 (2019)", "3 (2015-2019)"))) %>%
ggplot(aes(x = Minute, y = ENERG1, col = Model)) +
geom_line() +
geom_point() +
scale_x_continuous(breaks = c(0, 15, 30, 45, 60, 75)) +
theme_bw() +
ggtitle("First 200 matches") +
ylab("Energy norm 1")
tibble(ENERG1 = apply(HDA2[c(151:350),c(129:152)], 2, mean),
Minute = as.integer(rep(c(0, 15, 30, 45, 60, 75), 4)),
Model = factor(c(rep("0", 6), rep("3", 6), rep("3 (2019)", 6),
rep("3 (2015-2019)", 6)),
levels = c("0", "3", "3 (2019)", "3 (2015-2019)"))) %>%
ggplot(aes(x = Minute, y = ENERG1, col = Model)) +
geom_line() +
geom_point() +
scale_x_continuous(breaks = c(0, 15, 30, 45, 60, 75)) +
theme_bw() +
ggtitle("Last 200 matches") +
ylab("Energy norm 1")
tibble(ENERG1 = apply(HDA2[c(251:350),c(129:152)], 2, mean),
Minute = as.integer(rep(c(0, 15, 30, 45, 60, 75), 4)),
Model = factor(c(rep("0", 6), rep("3", 6), rep("3 (2019)", 6),
rep("3 (2015-2019)", 6)),
levels = c("0", "3", "3 (2019)", "3 (2015-2019)"))) %>%
ggplot(aes(x = Minute, y = ENERG1, col = Model)) +
geom_line() +
geom_point() +
scale_x_continuous(breaks = c(0, 15, 30, 45, 60, 75)) +
theme_bw() +
ggtitle("Last 100 matches") +
ylab("Energy norm 1")
tibble(ENERG1 = apply(HDA2[,c(129:152)], 2, mean),
Minute = as.integer(rep(c(0, 15, 30, 45, 60, 75), 4)),
Model = factor(c(rep("0", 6), rep("3", 6), rep("3 (2019)", 6),
rep("3 (2015-2019)", 6))))
?reshape
tibble(ENERG1 = apply(HDA2[,c(129:152)], 2, mean),
Minute = as.integer(rep(c(0, 15, 30, 45, 60, 75), 4)),
Model = factor(c(rep("0", 6), rep("3", 6), rep("3 (2019)", 6),
rep("3 (2015-2019)", 6)))) %>%
reshape(idname = "Model", timevar = "Minute", direction = "wide")
tibble(ENERG1 = apply(HDA2[,c(129:152)], 2, mean),
Minute = as.integer(rep(c(0, 15, 30, 45, 60, 75), 4)),
Model = factor(c(rep("0", 6), rep("3", 6), rep("3 (2019)", 6),
rep("3 (2015-2019)", 6)))) %>%
reshape(idvar = "Model", timevar = "Minute", direction = "wide")
tibble(ENERG1 = apply(HDA2[,c(129:152)], 2, mean),
Minute = as.integer(rep(c(0, 15, 30, 45, 60, 75), 4)),
Model = factor(c(rep("0", 6), rep("3", 6), rep("3 (2019)", 6),
rep("3 (2015-2019)", 6)))) %>%
reshape(idvar = "Model", timevar = "Minute")
tibble(ENERG1 = apply(HDA2[,c(129:152)], 2, mean),
Minute = as.integer(rep(c(0, 15, 30, 45, 60, 75), 4)),
Model = factor(c(rep("0", 6), rep("3", 6), rep("3 (2019)", 6),
rep("3 (2015-2019)", 6)))) %>%
reshape(idvar = "Model", timevar = "Minute", direction = "wide")
library(tidyr)
?cast
library(tidyr)
?cast
?spread
?pivot_wider
tibble(ENERG1 = apply(HDA2[,c(129:152)], 2, mean),
Minute = as.integer(rep(c(0, 15, 30, 45, 60, 75), 4)),
Model = factor(c(rep("0", 6), rep("3", 6), rep("3 (2019)", 6),
rep("3 (2015-2019)", 6)))) %>%
pivot_wider(id_cols = "Model", values_from = ENERG1)
tibble(ENERG1 = apply(HDA2[,c(129:152)], 2, mean),
Minute = as.integer(rep(c(0, 15, 30, 45, 60, 75), 4)),
Model = factor(c(rep("0", 6), rep("3", 6), rep("3 (2019)", 6),
rep("3 (2015-2019)", 6)))) %>%
pivot_wider(id_cols = "Model", values_from = "ENERG1", names_from = "Minute")
library(knitr)
tibble(ENERG1 = apply(HDA2[,c(129:152)], 2, mean),
Minute = as.integer(rep(c(0, 15, 30, 45, 60, 75), 4)),
Model = factor(c(rep("0", 6), rep("3", 6), rep("3 (2019)", 6),
rep("3 (2015-2019)", 6)))) %>%
pivot_wider(id_cols = "Model", values_from = "ENERG1", names_from = "Minute") %>%
kable()
all = tibble(ENERG1 = apply(HDA2[,c(129:152)], 2, mean),
Minute = as.integer(rep(c(0, 15, 30, 45, 60, 75), 4)),
Model = factor(c(rep("0", 6), rep("3", 6), rep("3 (2019)", 6),
rep("3 (2015-2019)", 6)),
levels = c("0", "3", "3 (2019)", "3 (2015-2019)")))
all %>%
ggplot(aes(x = Minute, y = ENERG1, col = Model)) +
geom_line() +
geom_point() +
scale_x_continuous(breaks = c(0, 15, 30, 45, 60, 75)) +
theme_bw() +
ggtitle("All predicted matches") +
ylab("Energy norm 1")
first_100 = tibble(ENERG1 = apply(HDA2[c(1:100),c(129:152)], 2, mean),
Minute = as.integer(rep(c(0, 15, 30, 45, 60, 75), 4)),
Model = factor(c(rep("0", 6), rep("3", 6), rep("3 (2019)", 6),
rep("3 (2015-2019)", 6)),
levels = c("0", "3", "3 (2019)", "3 (2015-2019)")))
first_100 %>%
ggplot(aes(x = Minute, y = ENERG1, col = Model)) +
geom_line() +
geom_point() +
scale_x_continuous(breaks = c(0, 15, 30, 45, 60, 75)) +
theme_bw() +
ggtitle("First 100 matches") +
ylab("Energy norm 1")
all %>%
pivot_wider(id_cols = "Model", values_from = "ENERG1", names_from = "Minute") %>%
kable()
all = tibble(ENERG1 = apply(HDA2[,c(129:152)], 2, mean),
Minute = as.integer(rep(c(0, 15, 30, 45, 60, 75), 4)),
Model = factor(c(rep("0", 6), rep("3", 6), rep("3 (2019)", 6),
rep("3 (2015-2019)", 6)),
levels = c("0", "3", "3 (2019)", "3 (2015-2019)")))
all %>%
ggplot(aes(x = Minute, y = ENERG1, col = Model)) +
geom_line() +
geom_point() +
scale_x_continuous(breaks = c(0, 15, 30, 45, 60, 75)) +
theme_bw() +
ggtitle("All predicted matches") +
ylab("Energy norm 1") %>%
ylim(0, max(all$ENERG1))
all = tibble(ENERG1 = apply(HDA2[,c(129:152)], 2, mean),
Minute = as.integer(rep(c(0, 15, 30, 45, 60, 75), 4)),
Model = factor(c(rep("0", 6), rep("3", 6), rep("3 (2019)", 6),
rep("3 (2015-2019)", 6)),
levels = c("0", "3", "3 (2019)", "3 (2015-2019)")))
all %>%
ggplot(aes(x = Minute, y = ENERG1, col = Model)) +
geom_line() +
geom_point() +
scale_x_continuous(breaks = c(0, 15, 30, 45, 60, 75)) +
theme_bw() +
ggtitle("All predicted matches") +
ylab("Energy norm 1") +
ylim(0, max(all$ENERG1))
all %>%
pivot_wider(id_cols = "Model", values_from = "ENERG1", names_from = "Minute") %>%
kable()
all %>%
pivot_wider(id_cols = "Model", values_from = "ENERG1", names_from = "Minute",
names_prefix = "Minute ") %>%
kable()
library(dplyr)
library(ggplot2)
library(tidyr)
library(knitr)
load("data/HDA2.RData")
nrow(HDA2)
all = tibble(ENERG1 = apply(HDA2[,c(129:152)], 2, mean),
Minute = as.integer(rep(c(0, 15, 30, 45, 60, 75), 4)),
Model = factor(c(rep("0", 6), rep("3", 6), rep("3 (2019)", 6),
rep("3 (2015-2019)", 6)),
levels = c("0", "3", "3 (2019)", "3 (2015-2019)")))
all %>%
ggplot(aes(x = Minute, y = ENERG1, col = Model)) +
geom_line() +
geom_point() +
scale_x_continuous(breaks = c(0, 15, 30, 45, 60, 75)) +
theme_bw() +
ggtitle("All predicted matches") +
ylab("Energy norm 1")
all %>%
pivot_wider(id_cols = "Model", values_from = "ENERG1", names_from = "Minute",
names_prefix = "Minute ") %>%
kable()
\clearpage
```{r}
last_100 = tibble(ENERG1 = apply(HDA2[c(251:350),c(129:152)], 2, mean),
Minute = as.integer(rep(c(0, 15, 30, 45, 60, 75), 4)),
Model = factor(c(rep("0", 6), rep("3", 6), rep("3 (2019)", 6),
rep("3 (2015-2019)", 6)),
levels = c("0", "3", "3 (2019)", "3 (2015-2019)")))
last_100 %>%
ggplot(aes(x = Minute, y = ENERG1, col = Model)) +
geom_line() +
geom_point() +
scale_x_continuous(breaks = c(0, 15, 30, 45, 60, 75)) +
theme_bw() +
ggtitle("Last 100 matches") +
ylab("Energy norm 1")
