sort(unique(transfermarkt$Home_Team))
sort(unique(results$Home_Team))
transfermarkt$Home_Team[which(transfermarkt$Home_Team == "Avaí FC")] = "Avaí"
transfermarkt$Away_Team[which(transfermarkt$Away_Team == "Avaí FC")] = "Avaí"
transfermarkt$Home_Team[which(transfermarkt$Home_Team == "Ceará SC")] = "Ceará"
transfermarkt$Away_Team[which(transfermarkt$Away_Team == "Ceará SC")] = "Ceará"
transfermarkt$Home_Team[which(transfermarkt$Home_Team == "Coritiba FC")] = "Coritiba"
transfermarkt$Away_Team[which(transfermarkt$Away_Team == "Coritiba FC")] = "Coritiba"
transfermarkt$Home_Team[which(transfermarkt$Home_Team == "CSA")] = "Csa"
transfermarkt$Away_Team[which(transfermarkt$Away_Team == "CSA")] = "Csa"
transfermarkt$Home_Team[which(transfermarkt$Home_Team == "EC Bahia")] = "Bahia"
transfermarkt$Away_Team[which(transfermarkt$Away_Team == "EC Bahia")] = "Bahia"
transfermarkt$Home_Team[which(transfermarkt$Home_Team == "EC Vitória")] = "Vitória"
transfermarkt$Away_Team[which(transfermarkt$Away_Team == "EC Vitória")] = "Vitória"
transfermarkt$Home_Team[which(transfermarkt$Home_Team == "Figueirense FC")] = "Figueirense"
transfermarkt$Away_Team[which(transfermarkt$Away_Team == "Figueirense FC")] = "Figueirense"
transfermarkt$Home_Team[which(transfermarkt$Home_Team == "Goiás EC")] = "Goiás"
transfermarkt$Away_Team[which(transfermarkt$Away_Team == "Goiás EC")] = "Goiás"
transfermarkt$Home_Team[which(transfermarkt$Home_Team == "Joinville-SC")] = "Joinville"
transfermarkt$Away_Team[which(transfermarkt$Away_Team == "Joinville-SC")] = "Joinville"
transfermarkt$Home_Team[which(transfermarkt$Home_Team == "RB Bragantino")] = "Red Bull Bragantino"
transfermarkt$Away_Team[which(transfermarkt$Away_Team == "RB Bragantino")] = "Red Bull Bragantino"
transfermarkt$Home_Team[which(transfermarkt$Home_Team == "Santos FC")] = "Santos"
transfermarkt$Away_Team[which(transfermarkt$Away_Team == "Santos FC")] = "Santos"
transfermarkt$Home_Team[which(transfermarkt$Home_Team == "Sport Recife")] = "Sport"
transfermarkt$Away_Team[which(transfermarkt$Away_Team == "Sport Recife")] = "Sport"
results = results %>%
mutate(rodada = ceiling(results$Match/10)) %>%
left_join(transfermarkt)
View(results)
is.na(results$Value_Away)
is.na(results$Value_Away) %>% sum()
results %>%
filter(is.na(results$Value_Home))
results %>%
filter(is.na(results$Value_Home)) %>% View()
View(transfermarkt)
results %>%
filter(is.na(results$Value_Home))
transfermarkt %>% filter(Season == 2017, Home_Team == Cruzeiro, Away_Team == "Ponte Preta")
transfermarkt %>% filter(Season == 2017, Home_Team == "Cruzeiro", Away_Team == "Ponte Preta")
library(dplyr)
library(ggplot2)
load("data/transfermarkt.RData")
glimpse(transfermarkt)
transfermarkt = transfermarkt %>%
filter(ano_campeonato >= 2015,
!is.na(gols_man))
transfermarkt %>%
filter(time_man == "Flamengo") %>%
select(data, valor_equipe_titular_man)
sum(is.na(transfermarkt$valor_equipe_titular_man))/nrow(transfermarkt)
sum(is.na(transfermarkt$valor_equipe_titular_vis))/nrow(transfermarkt)
teams = sort(unique(transfermarkt$time_man))
teams
transfermarkt$time_man[which(transfermarkt$time_man == "Atlético-PR")] = "Athletico-PR"
transfermarkt$time_vis[which(transfermarkt$time_vis == "Atlético-PR")] = "Athletico-PR"
team = NULL
season = NULL
mean_value = NULL
for(t in teams) {
for(s in 2015:2020) {
man = transfermarkt %>%
filter(time_man == t,
ano_campeonato == s) %>%
.$valor_equipe_titular_man
vis = transfermarkt %>%
filter(time_vis == t,
ano_campeonato == s) %>%
.$valor_equipe_titular_vis
all = c(man, vis)
team = c(team, t)
season = c(season, s)
mean_value = c(mean_value, mean(all, na.rm = TRUE))
}
}
mean_values = tibble(team, season, mean_value) %>%
filter(!is.na(mean_value))
na_man = which(is.na(transfermarkt$valor_equipe_titular_man))
na_vis = which(is.na(transfermarkt$valor_equipe_titular_vis))
sum(na_man == na_vis) / length(na_man == na_vis)
for(i in 1:length(na_man)) {
man = transfermarkt$time_man[na_man[i]]
vis = transfermarkt$time_vis[na_man[i]]
ano = transfermarkt$ano_campeonato[na_man[i]]
mean_man = mean_values %>%
filter(season == ano,
team == man) %>%
.$mean_value
mean_vis = mean_values %>%
filter(season == ano,
team == vis) %>%
.$mean_value
transfermarkt$valor_equipe_titular_man[na_man[i]] = mean_man
transfermarkt$valor_equipe_titular_vis[na_man[i]] = mean_vis
}
transfermarkt = transfermarkt %>%
mutate(dif_valor = valor_equipe_titular_man - valor_equipe_titular_vis,
dif_log_valor = log(valor_equipe_titular_man) - log(valor_equipe_titular_vis))
transfermarkt %>%
arrange(desc(dif_valor)) %>%
select(ano_campeonato, time_man, time_vis, valor_equipe_titular_man,
valor_equipe_titular_vis, dif_valor)
transfermarkt %>%
arrange(dif_valor) %>%
select(ano_campeonato, time_man, time_vis, valor_equipe_titular_man,
valor_equipe_titular_vis, dif_valor)
transfermarkt %>%
ggplot(aes(x = factor(gols_man), y = dif_valor)) +
geom_boxplot() +
theme_bw() +
xlab("Home team's goals") +
ylab("Home team's value - away team's value")
transfermarkt %>%
ggplot(aes(x = factor(gols_vis), y = dif_valor)) +
geom_boxplot() +
theme_bw() +
xlab("Away team's goals") +
ylab("Home team's value - away team's value")
transfermarkt %>%
ggplot(aes(x = factor(gols_man), y = dif_log_valor)) +
geom_boxplot() +
theme_bw() +
xlab("Home team's goals") +
ylab("log home team's value - log away team's value")
transfermarkt %>%
ggplot(aes(x = factor(gols_vis), y = dif_log_valor)) +
geom_boxplot() +
theme_bw() +
xlab("Away team's goals") +
ylab("log home team's value - log away team's value")
cor(transfermarkt$gols_man, transfermarkt$dif_valor)
cor(transfermarkt$gols_vis, transfermarkt$dif_valor)
cor(transfermarkt$gols_man, transfermarkt$dif_log_valor)
cor(transfermarkt$gols_vis, transfermarkt$dif_log_valor)
cor(transfermarkt$gols_man, transfermarkt$dif_valor, method = "kendall")
cor(transfermarkt$gols_vis, transfermarkt$dif_valor, method = "kendall")
cor(transfermarkt$gols_man, transfermarkt$dif_log_valor, method = "kendall")
cor(transfermarkt$gols_vis, transfermarkt$dif_log_valor, method = "kendall")
load("~/GitHub/soccer-live-predictions/soccer-live-predictions/scrape/data/results2.RData")
transfermarkt = transfermarkt %>%
rename(Season = ano_campeonato,
Home_Team = time_man,
Away_Team = time_vis,
Value_Home = valor_equipe_titular_man,
Value_Away = valor_equipe_titular_vis,
Dif_Value = dif_valor,
Dif_Log_Value = dif_log_valor) %>%
select(Season, Home_Team, Away_Team, Value_Home, Value_Away,
Dif_Value, Dif_Log_Value, rodada)
sort(unique(transfermarkt$Home_Team))
sort(unique(results$Home_Team))
transfermarkt$Home_Team[which(transfermarkt$Home_Team == "Avaí FC")] = "Avaí"
transfermarkt$Away_Team[which(transfermarkt$Away_Team == "Avaí FC")] = "Avaí"
transfermarkt$Home_Team[which(transfermarkt$Home_Team == "Ceará SC")] = "Ceará"
transfermarkt$Away_Team[which(transfermarkt$Away_Team == "Ceará SC")] = "Ceará"
transfermarkt$Home_Team[which(transfermarkt$Home_Team == "Coritiba FC")] = "Coritiba"
transfermarkt$Away_Team[which(transfermarkt$Away_Team == "Coritiba FC")] = "Coritiba"
transfermarkt$Home_Team[which(transfermarkt$Home_Team == "CSA")] = "Csa"
transfermarkt$Away_Team[which(transfermarkt$Away_Team == "CSA")] = "Csa"
transfermarkt$Home_Team[which(transfermarkt$Home_Team == "EC Bahia")] = "Bahia"
transfermarkt$Away_Team[which(transfermarkt$Away_Team == "EC Bahia")] = "Bahia"
transfermarkt$Home_Team[which(transfermarkt$Home_Team == "EC Vitória")] = "Vitória"
transfermarkt$Away_Team[which(transfermarkt$Away_Team == "EC Vitória")] = "Vitória"
transfermarkt$Home_Team[which(transfermarkt$Home_Team == "Figueirense FC")] = "Figueirense"
transfermarkt$Away_Team[which(transfermarkt$Away_Team == "Figueirense FC")] = "Figueirense"
transfermarkt$Home_Team[which(transfermarkt$Home_Team == "Goiás EC")] = "Goiás"
transfermarkt$Away_Team[which(transfermarkt$Away_Team == "Goiás EC")] = "Goiás"
transfermarkt$Home_Team[which(transfermarkt$Home_Team == "Joinville-SC")] = "Joinville"
transfermarkt$Away_Team[which(transfermarkt$Away_Team == "Joinville-SC")] = "Joinville"
transfermarkt$Home_Team[which(transfermarkt$Home_Team == "RB Bragantino")] = "Red Bull Bragantino"
transfermarkt$Away_Team[which(transfermarkt$Away_Team == "RB Bragantino")] = "Red Bull Bragantino"
transfermarkt$Home_Team[which(transfermarkt$Home_Team == "Santos FC")] = "Santos"
transfermarkt$Away_Team[which(transfermarkt$Away_Team == "Santos FC")] = "Santos"
transfermarkt$Home_Team[which(transfermarkt$Home_Team == "Sport Recife")] = "Sport"
transfermarkt$Away_Team[which(transfermarkt$Away_Team == "Sport Recife")] = "Sport"
results = results %>%
mutate(rodada = ceiling(results$Match/10))
results$rodada[1020] = 28 # https://conteudo.cbf.com.br/sumulas/2017/142261se.pdf
results$rodada[1030] = 27 # https://conteudo.cbf.com.br/sumulas/2017/142271se.pdf
results = left_join(results, transfermarkt)
View(results)
is.na(results$Value_Away)
is.na(results$Value_Away) %>% sum()
save(results, file = "data/results.RData")
sum(is.na(results))
is.na(results)
load("2015-2020/data/input.RData")
load("2015-2020/data/input_mod_7.RData")
copy_results
match_dates
View(match_dates)
load("transfermarkt/data/results.RData")
res = results %>%
select(Season, Date, Match, Dif_Value, Dif_Log_Value)
library(dplyr)
load("2015-2020/data/input.RData")
load("2015-2020/data/input_mod_7.RData")
load("transfermarkt/data/results.RData")
res = results %>%
select(Season, Date, Match, Dif_Value, Dif_Log_Value)
match_dates = match_dates %>%
left_join(res)
M1_lambda
names(M1_lambda)
colnames(M1_lambda)
match_dates$Lines1s[i]
match_dates$Lines1[i]
match_dates$Lines1[[i]]
match_dates$Lines1
match_dates$Lines1[1]
match_dates$Lines1[1][[1]]
match_dates$Lines1[1][[1]]
match_dates$Lines1[1][[2]]
match_dates$Lines1[2][[1]]
match_dates$Lines1[1][[1]]
for(i in 1:nrow(match_dates)) {
dif_value_1[match_dates$Lines1[i][[1]]] = match_dates$Dif_Value[i]
dif_value_2[match_dates$Lines2[i][[1]]] = match_dates$Dif_Value[i]
}
dif_value_1 = NULL
dif_value_2 = NULL
for(i in 1:nrow(match_dates)) {
dif_value_1[match_dates$Lines1[i][[1]]] = match_dates$Dif_Value[i]
dif_value_2[match_dates$Lines2[i][[1]]] = match_dates$Dif_Value[i]
}
dif_value_1
M1_lambda = cbind(M1_lambda, dif_value_1)
names(M1_lambda)[ncol(M1_lambda)] = "dif_value"
View(M1_lambda)
library(dplyr)
load("2015-2020/data/input.RData")
load("2015-2020/data/input_mod_7.RData")
load("transfermarkt/data/results.RData")
res = results %>%
select(Season, Date, Match, Dif_Value, Dif_Log_Value)
match_dates = match_dates %>%
left_join(res)
dif_value_1 = NULL
dif_value_2 = NULL
for(i in 1:nrow(match_dates)) {
dif_value_1[match_dates$Lines1[i][[1]]] = match_dates$Dif_Value[i]
dif_value_2[match_dates$Lines2[i][[1]]] = match_dates$Dif_Value[i]
}
M1_lambda = cbind(M1_lambda, dif_value_1)
names(M1_lambda)[ncol(M1_lambda)] = "dif_value"
M1_mu = cbind(M1_mu, dif_value_1)
names(M1_mu)[ncol(M1_mu)] = "dif_value"
M2_lambda = cbind(M2_lambda, dif_value_2)
names(M2_lambda)[ncol(M2_lambda)] = "dif_value"
M2_mu = cbind(M2_mu, dif_value_2)
names(M2_mu)[ncol(M2_mu)] = "dif_value"
source('~/GitHub/soccer-live-predictions/soccer-live-predictions/2015-2020/input_mod_9.R', echo=TRUE)
source('~/GitHub/soccer-live-predictions/soccer-live-predictions/2015-2020/input_mod_9.R', echo=TRUE)
source('~/GitHub/soccer-live-predictions/soccer-live-predictions/2015-2020/input_mod_10.R', echo=TRUE)
source('~/GitHub/soccer-live-predictions/soccer-live-predictions/2015-2020/input_mod_10.R', echo=TRUE)
source('~/GitHub/soccer-live-predictions/soccer-live-predictions/2015-2020/mod_9.R', echo=TRUE)
source('~/GitHub/soccer-live-predictions/soccer-live-predictions/2015-2020/mod_9.R', echo=TRUE)
source('~/GitHub/soccer-live-predictions/soccer-live-predictions/2015-2020/mod_9.R', echo=TRUE)
source('~/GitHub/soccer-live-predictions/soccer-live-predictions/2015-2020/input_mod_9.R', echo=TRUE)
source('~/GitHub/soccer-live-predictions/soccer-live-predictions/2015-2020/input_mod_10.R', echo=TRUE)
source('~/GitHub/soccer-live-predictions/soccer-live-predictions/2015-2020/mod_9.R', echo=TRUE)
source('~/GitHub/soccer-live-predictions/soccer-live-predictions/2015-2020/mod_9.R', echo=TRUE)
source('~/GitHub/soccer-live-predictions/soccer-live-predictions/2015-2020/input_mod_10.R', echo=TRUE)
source('~/GitHub/soccer-live-predictions/soccer-live-predictions/2015-2020/mod_9.R', echo=TRUE)
source('~/GitHub/soccer-live-predictions/soccer-live-predictions/2015-2020/input_mod_10.R', echo=TRUE)
source('~/GitHub/soccer-live-predictions/soccer-live-predictions/2015-2020/input_mod_9.R', echo=TRUE)
source('~/GitHub/soccer-live-predictions/soccer-live-predictions/2015-2020/input_mod_10.R', echo=TRUE)
source('~/GitHub/soccer-live-predictions/soccer-live-predictions/2015-2020/mod_9.R', echo=TRUE)
dif
load("2015-2020/data/mod_9.RData")")
)
a
a
)
)
)
al
)
""
load("2015-2020/data/mod_9.RData")
library(CVXR)
load("2015-2020/data/input.RData")
load("2015-2020/data/input_mod_9.RData")
M1_lambda
M1_lambda %>% View()
load("transfermarkt/data/results.RData")
View(results)
0.0062*10
0.0062*100
View(M1_lambda)
View(M1_mu)
source('~/GitHub/soccer-live-predictions/soccer-live-predictions/2015-2020/input_mod_9.R', echo=TRUE)
library(dplyr)
load("2015-2020/data/input.RData")
load("2015-2020/data/input_mod_7.RData")
load("transfermarkt/data/results.RData")
res = results %>%
select(Season, Date, Match, Dif_Value, Dif_Log_Value)
match_dates = match_dates %>%
left_join(res)
dif_value_1 = NULL
dif_value_2 = NULL
for(i in 1:nrow(match_dates)) {
dif_value_1[match_dates$Lines1[i][[1]]] = match_dates$Dif_Value[i]/10^6 # <---
dif_value_2[match_dates$Lines2[i][[1]]] = match_dates$Dif_Value[i]/10^6 # <---
}
M1_lambda = cbind(M1_lambda, dif_value_1)
colnames(M1_lambda)[ncol(M1_lambda)] = "dif_value"
M1_mu = cbind(M1_mu, -dif_value_1)
colnames(M1_mu)[ncol(M1_mu)] = "dif_value"
M2_lambda = cbind(M2_lambda, dif_value_2)
colnames(M2_lambda)[ncol(M2_lambda)] = "dif_value"
M2_mu = cbind(M2_mu, -dif_value_2)
colnames(M2_mu)[ncol(M2_mu)] = "dif_value"
save.image("2015-2020/data/input_mod_9.RData")
source('~/GitHub/soccer-live-predictions/soccer-live-predictions/2015-2020/input_mod_10.R', echo=TRUE)
source('~/GitHub/soccer-live-predictions/soccer-live-predictions/2015-2020/mod_9.R', echo=TRUE)
source('~/GitHub/soccer-live-predictions/soccer-live-predictions/2015-2020/mod_10.R', echo=TRUE)
source('~/GitHub/soccer-live-predictions/soccer-live-predictions/weight/mod_9_dc.R', echo=TRUE)
source('~/GitHub/soccer-live-predictions/soccer-live-predictions/weight/mod_9_dc.R', echo=TRUE)
mod_9_dc
source('~/GitHub/soccer-live-predictions/soccer-live-predictions/weight/predicting_matches_mod_9_dc.R', echo=TRUE)
load("~/GitHub/soccer-live-predictions/soccer-live-predictions/weight/data/mod_9_dc.RData")
mod_9_dc
exp(0.2095248)
length(mod_9_dc)
load("~/GitHub/soccer-live-predictions/soccer-live-predictions/weight/data/mod_3_dc.RData")
length(mod_3_dc)
source('~/GitHub/soccer-live-predictions/soccer-live-predictions/weight/mod_10_dc.R', echo=TRUE)
source('~/GitHub/soccer-live-predictions/soccer-live-predictions/weight/predicting_matches_mod_9_dc.R', echo=TRUE)
predictions_mod_9_dc
source('~/GitHub/soccer-live-predictions/soccer-live-predictions/weight/predicting_matches_mod_9_dc.R', echo=TRUE)
predictions_mod_9_dc
source('~/GitHub/soccer-live-predictions/soccer-live-predictions/weight/HDA_dc.R', echo=TRUE)
library(dplyr)
library(ggplot2)
library(tidyr)
library(knitr)
load("data/HDA_dc.RData")
load("data/first_matches.RData")
HDA = HDA_dc %>%
anti_join(first_matches)
nrow(HDA)
HDA[,c(9:98)][which(HDA[,c(9:98)] == 0, arr.ind = TRUE)] = 10^-5
names(HDA)
library(dplyr)
library(ggplot2)
library(tidyr)
library(knitr)
load("data/HDA_dc.RData")
load("data/first_matches.RData")
HDA = HDA_dc %>%
anti_join(first_matches)
nrow(HDA)
HDA[,c(9:128)][which(HDA[,c(9:128)] == 0, arr.ind = TRUE)] = 10^-5
results = tibble(GeoMean = apply(HDA[,c(81:104)], 2, EnvStats::geoMean),
Minute = as.integer(rep(c(0, 15, 30, 45, 60, 75), 4)),
Model = factor(c(rep("0", 6),
rep("3", 6),
rep("8", 6),
rep("9", 6))))
results %>%
ggplot(aes(x = Minute, y = GeoMean, col = Model)) +
geom_line() +
geom_point() +
scale_x_continuous(breaks = c(0, 15, 30, 45, 60, 75)) +
theme_bw() +
ggtitle("All predicted matches") +
ylab("Geometric mean for the results")
results %>%
pivot_wider(id_cols = "Model", values_from = "GeoMean", names_from = "Minute",
names_prefix = "Minute ") %>%
kable()
scores = tibble(GeoMean = apply(HDA[,c(81:98)], 2, EnvStats::geoMean),
Minute = as.integer(rep(c(0, 15, 30, 45, 60, 75), 4)),
Model = factor(c(rep("0", 6),
rep("3", 6),
rep("8", 6),
rep("9", 6))))
names(HDA)
load("2015-2020/data/mod_8.RData")
library(dplyr)
library(future.apply)
plan(multisession(workers = 12))
source("pred/pred_mod_8.R")
source("pred/pred_mod_9.R")
source("pred/pred_mod_10.R")
load("2015-2020/data/mod_8.RData")
load("2015-2020/data/mod_9.RData")
load("2015-2020/data/mod_10.RData")
pred_mod_8(mod_8, home_team = "Flamengo", away_team = "Vasco da Gama")
pred_mod_9(mod_9, home_team = "Flamengo", away_team = "Vasco da Gama")
load("transfermarkt/data/results.RData")
View(results)
pred_mod_9(mod_9, home_team = "Flamengo", away_team = "Vasco da Gama", value_home = 79050000, value_away = 23150000)
pred_mod_9(mod_9, home_team = "Flamengo", away_team = "Vasco da Gama", value_home = 79050000, value_away = 23150000)
pred_mod_10(mod_10, home_team = "Flamengo", away_team = "Vasco da Gama", value_home = 79050000, value_away = 23150000)
pred_mod_8(mod_8, home_team = "Flamengo", away_team = "Vasco da Gama")
pred_mod_9(mod_9, home_team = "Flamengo", away_team = "Vasco da Gama", value_home = 79050000, value_away = 23150000)
pred_mod_10(mod_10, home_team = "Flamengo", away_team = "Vasco da Gama", value_home = 79050000, value_away = 23150000)
pred_mod_9(mod_9, home_team = "Flamengo", away_team = "Vasco da Gama", value_home = 790500000, value_away = 23150000)
pred_mod_10(mod_10, home_team = "Flamengo", away_team = "Vasco da Gama", value_home = 790500000, value_away = 23150000)
values = input_value("Vasco da Gama", "Ponte Preta", "2015-06-03")
load("transfermarkt/data/results.RData")
load("scrape/data/goals.RData")
load("scrape/data/reds.RData")
load("2015-2020/data/input.RData")
source("pred/pred_mod_10.R")
source("pred/input_pred.R")
source("pred/input_value.R")
load("weight/data/mod_10_dc.RData")
load("weight/data/matches_to_be_predicted.RData")
values = input_value("Vasco da Gama", "Ponte Preta", "2015-06-03")
values
source('~/GitHub/soccer-live-predictions/soccer-live-predictions/weight/predicting_matches_mod_10_dc.R', echo=TRUE)
predictions_mod_10_dc
source('~/GitHub/soccer-live-predictions/soccer-live-predictions/weight/HDA_dc.R', echo=TRUE)
library(dplyr)
library(ggplot2)
library(tidyr)
library(knitr)
load("data/HDA_dc.RData")
load("data/first_matches.RData")
HDA = HDA_dc %>%
anti_join(first_matches)
nrow(HDA)
HDA[,c(9:128)][which(HDA[,c(9:128)] == 0, arr.ind = TRUE)] = 10^-5
names(HDA)
library(dplyr)
library(ggplot2)
library(tidyr)
library(knitr)
load("data/HDA_dc.RData")
load("data/first_matches.RData")
HDA = HDA_dc %>%
anti_join(first_matches)
nrow(HDA)
HDA[,c(9:128)][which(HDA[,c(9:158)] == 0, arr.ind = TRUE)] = 10^-5
names(HDA)
library(dplyr)
library(future.apply)
plan(multisession(workers = 12))
source("pred/pred_mod_8.R")
source("pred/pred_mod_9.R")
source("pred/pred_mod_10.R")
load("2015-2020/data/mod_8.RData")
load("2015-2020/data/mod_9.RData")
load("2015-2020/data/mod_10.RData")
load("transfermarkt/data/results.RData")
pred_mod_8(mod_8, home_team = "Flamengo", away_team = "Vasco da Gama")
pred_mod_9(mod_9, home_team = "Flamengo", away_team = "Vasco da Gama", value_home = 79050000, value_away = 23150000)
pred_mod_10(mod_10, home_team = "Flamengo", away_team = "Vasco da Gama", value_home = 79050000, value_away = 23150000)
pred_mod_9(mod_9, home_team = "Flamengo", away_team = "Vasco da Gama", value_home = 790500000, value_away = 23150000)
pred_mod_10(mod_10, home_team = "Flamengo", away_team = "Vasco da Gama", value_home = 790500000, value_away = 23150000)
load("data/HDA_dc.RData")
View(HDA_dc)
plot(HDA_dc$Home_mod_0_pred_0, HDA_dc$Home_mod_10_pred_0)
library(ggplot2)
load("data/HDA_dc.RData")
load("data/first_matches.RData")
HDA = HDA_dc %>%
anti_join(first_matches)
library(dplyr)
library(ggplot2)
load("data/HDA_dc.RData")
load("data/first_matches.RData")
HDA = HDA_dc %>%
anti_join(first_matches)
load("data/HDA_dc.RData")
load("data/first_matches.RData")
load("weight/data/HDA_dc.RData")
load("weigth/data/first_matches.RData")
load("weight/data/first_matches.RData")
HDA = HDA_dc %>%
anti_join(first_matches)
HDA
mod_0 = HDA$Home_mod_0_pred_0
mod_3 = HDA$Home_mod_3_pred_0
mod_9 = HDA$Home_mod_9_pred_0
mod_10 = HDA$Home_mod_10_pred_0
length(mod_0)
l = nrow(HDA)
l
tibble(Model = c(rep("0", l), rep("3", l), rep("9", l), rep("10", l)),
Home = c(mod_0, mod_3, mod_9, mod_10),
Match = rep(1:l, 4))
tibble(Model = c(rep("0", l), rep("3", l), rep("9", l), rep("10", l)),
Home = c(mod_0, mod_3, mod_9, mod_10),
Match = rep(1:l, 4)) %>%
ggplot(aes(x = Match, y = Home, col = Model)) +
geom_line()
tibble(Model = c(rep("0", l), rep("3", l), rep("9", l), rep("10", l)),
Home = c(mod_0, mod_3, mod_9, mod_10),
Match = rep(1:l, 4)) %>%
filter(Match > 1700) %>%
ggplot(aes(x = Match, y = Home, col = Model)) +
geom_line()
tibble(Model = c(rep("0", l), rep("3", l), rep("9", l), rep("10", l)),
Home = c(mod_0, mod_3, mod_9, mod_10),
Match = rep(1:l, 4)) %>%
filter(Match > l-380,
Model %in% c("3", "9")) %>%
ggplot(aes(x = Match, y = Home, col = Model)) +
geom_line()
tibble(Model = c(rep("0", l), rep("3", l), rep("9", l), rep("10", l)),
Home = c(mod_0, mod_3, mod_9, mod_10),
Match = rep(1:l, 4)) %>%
filter(Match > l-380,
Model %in% c("3", "9")) %>%
ggplot(aes(x = Match, y = Home, col = Model)) +
geom_line()
