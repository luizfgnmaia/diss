results %>%
ggplot(aes(x = Minute, y = GeoMean, col = Model)) +
geom_line() +
geom_point() +
scale_x_continuous(breaks = c(0, 15, 30, 45, 60, 75)) +
theme_bw() +
ggtitle("All predicted matches") +
ylab("Geometric mean for the results")
results %>%
pivot_wider(id_cols = "Model", values_from = "GeoMean", names_from = "Minute",
names_prefix = "Minute ") %>%
kable()
library(dplyr)
library(ggplot2)
library(tidyr)
library(knitr)
load("~/GitHub/soccer-live-predictions/soccer-live-predictions/odds/data/HDA_bet365.RData")
load("data/first_matches.RData")
HDA = HDA_bet365 %>%
anti_join(first_matches) #%>%
#filter(!is.na(Home_bet365))
nrow(HDA)
HDA = as.data.frame(HDA)
HDA[,c(9:162)][which(HDA[,c(9:162)] == 0, arr.ind = TRUE)] = 10^-5
results = tibble(GeoMean = apply(HDA[,c(99, 105, 111, 117, 123, 162)], 2, EnvStats::geoMean),
Model = c("A", "B", "C", "D", "E", "bet365"))
# results = tibble(GeoMean = apply(HDA[,c(99, 105, 111, 117, 123)], 2, EnvStats::geoMean),
#                   Model = c("A", "B", "C", "D", "E"))
kable(results)
library(dplyr)
library(ggplot2)
library(tidyr)
library(knitr)
load("data/HDA_dc_2.RData")
load("data/first_matches.RData")
HDA = HDA_dc %>%
anti_join(first_matches)
nrow(HDA)
HDA[,c(9:158)][which(HDA[,c(9:158)] == 0, arr.ind = TRUE)] = 10^-5
names(HDA)
source('~/.active-rstudio-document', echo=TRUE)
serie_a_open = do.call(rbind, lst)
View(serie_a_open)
source('~/.active-rstudio-document', encoding = 'UTF-8', echo=TRUE)
source('~/.active-rstudio-document', encoding = 'UTF-8', echo=TRUE)
View(serie_a_open)
names(serie_a_open)
source('~/.active-rstudio-document', encoding = 'UTF-8', echo=TRUE)
View(serie_a_open)
sum(c(0.3872028,
0.2935247,
0.31927249))
source('~/.active-rstudio-document', encoding = 'UTF-8', echo=TRUE)
table(serie_a_open$Bookmaker)
table(serie_a_open$Bookmaker) %>%
sort(decreasing = TRUE)
names(serie_a_open)
source('~/GitHub/soccer-live-predictions/soccer-live-predictions/odds/serie_a_open.R', encoding = 'UTF-8', echo=TRUE)
View(mean(medias_por_jogo))
medias_por_jogo
c(0.334,0.291,0.375) %>% sum()
source('~/GitHub/soccer-live-predictions/soccer-live-predictions/odds/serie_a_open.R', encoding = 'UTF-8', echo=TRUE)
serie_a_open_means
source('~/GitHub/soccer-live-predictions/soccer-live-predictions/odds/serie_a_open.R', encoding = 'UTF-8', echo=TRUE)
pnk_Result <- function(Score, Home, Draw, Away) {
if(Score == 1) {
return(Home)
} else if(Score == 2) {
return(Draw)
} else {
return(Away)
}
}
load("odds/data/serie_a_open_means.RData")
source('~/GitHub/soccer-live-predictions/soccer-live-predictions/odds/serie_a_open.R', encoding = 'UTF-8', echo=TRUE)
pnk_Result <- function(Score, Home, Draw, Away) {
if(Score == 1) {
return(Home)
} else if(Score == 2) {
return(Draw)
} else {
return(Away)
}
}
load("odds/data/serie_a_open_means.RData")
load("weight/data/HDA_dc_2.RData")
serie_a_open_means
source('~/GitHub/soccer-live-predictions/soccer-live-predictions/odds/serie_a_open.R', encoding = 'UTF-8', echo=TRUE)
source('~/GitHub/soccer-live-predictions/soccer-live-predictions/odds/HDA_open.R', echo=TRUE)
pnk_Result <- function(Score, Home, Draw, Away) {
if(Score == 1) {
return(Home)
} else if(Score == 2) {
return(Draw)
} else {
return(Away)
}
}
load("odds/data/serie_a_open_means.RData")
load("weight/data/HDA_dc_2.RData")
HDA_open = left_join(HDA_dc, serie_a_open_means, by = c("Season", "Home_Team", "Away_Team")) %>%
rowwise() %>%
mutate(pnk_Result_open = pnk_Result(Result, Home_open, Draw_open, Away_open))
HDA_open
View(HDA_open)
source('~/GitHub/soccer-live-predictions/soccer-live-predictions/odds/HDA_open.R', echo=TRUE)
library(dplyr)
library(ggplot2)
library(ggplot2)
library(tidyr)
library(knitr)
load("~/GitHub/soccer-live-predictions/soccer-live-predictions/odds/data/HDA_opem.RData")
load("data/first_matches.RData")
library(dplyr)
library(ggplot2)
library(tidyr)
library(knitr)
load("~/GitHub/soccer-live-predictions/soccer-live-predictions/odds/data/HDA_open.RData")
load("data/first_matches.RData")
HDA = HDA_bet365 %>%
anti_join(first_matches) %>%
filter(!is.na(Home_bet365))
HDA = HDA_bet365 %>%
anti_join(first_matches) %>%
filter(!is.na(Home_open))
HDA = HDA_open %>%
anti_join(first_matches) %>%
filter(!is.na(Home_open))
nrow(HDA)
HDA = as.data.frame(HDA)
HDA[,c(9:162)][which(HDA[,c(9:162)] == 0, arr.ind = TRUE)] = 10^-5
results = tibble(Model = c("A", "B", "C", "D", "E", "open"),
GeoMean = apply(HDA[,c(99, 105, 111, 117, 123, 162)], 2, EnvStats::geoMean))
kable(results)
library(dplyr)
library(ggplot2)
library(tidyr)
library(knitr)
load("~/GitHub/soccer-live-predictions/soccer-live-predictions/odds/data/HDA_open.RData")
load("data/first_matches.RData")
HDA = HDA_open %>%
anti_join(first_matches) %>%
filter(!is.na(Home_open))
nrow(HDA)
HDA = as.data.frame(HDA)
HDA[,c(9:162)][which(HDA[,c(9:162)] == 0, arr.ind = TRUE)] = 10^-5
results = tibble(Model = c("A", "B", "C", "D", "E", "open"),
GeoMean = apply(HDA[,c(99, 105, 111, 117, 123, 162)], 2,
EnvStats::geoMean))
kable(results)
library(dplyr)
library(ggplot2)
library(tidyr)
library(knitr)
load("data/HDA_dc_2.RData")
load("data/first_matches.RData")
HDA = HDA_dc %>%
anti_join(first_matches)
nrow(HDA)
HDA[,c(9:158)][which(HDA[,c(9:158)] == 0, arr.ind = TRUE)] = 10^-5
results = tibble(GeoMean = apply(HDA[,c(99:128)], 2, EnvStats::geoMean),
Minute = as.integer(rep(c(0, 15, 30, 45, 60, 75), 5)),
Model = factor(c(rep("A", 6),
rep("B", 6),
rep("C", 6),
rep("D", 6),
rep("E", 6))))
results %>%
ggplot(aes(x = Minute, y = GeoMean, col = Model)) +
geom_line() +
geom_point() +
scale_x_continuous(breaks = c(0, 15, 30, 45, 60, 75)) +
theme_bw() +
ggtitle("All predicted matches") +
ylab("Geometric mean for the results")
results %>%
pivot_wider(id_cols = "Model", values_from = "GeoMean", names_from = "Minute",
names_prefix = "Minute ") %>%
kable()
results = tibble(GeoMean = apply(HDA[,c(99:128)], 2, EnvStats::geoMean),
Minute = as.integer(rep(c(0, 15, 30, 45, 60, 75), 5)),
Model = factor(c(rep("A", 6),
rep("B", 6),
rep("C", 6),
rep("D", 6),
rep("E", 6)))) %>%
pivot_wider(names_from = "Model", values_from = "GeoMean", names_prefix = "Model ") %>%
mutate(`Model B` = log(`Model B`) - log(`Model A`),
`Model C` = log(`Model C`) - log(`Model A`),
`Model D` = log(`Model D`) - log(`Model A`),
`Model E` = log(`Model E`) - log(`Model A`),
`Model A` = 0) %>%
pivot_longer(cols = starts_with("Model"), names_to = "Model", values_to = "GeoMean")
results %>%
ggplot(aes(x = Minute, y = GeoMean, col = Model)) +
geom_line() +
geom_point() +
scale_x_continuous(breaks = c(0, 15, 30, 45, 60, 75)) +
theme_bw() +
ggtitle("All predicted matches") +
ylab("Geometric mean for the results")
results %>%
pivot_wider(id_cols = "Model", values_from = "GeoMean", names_from = "Minute",
names_prefix = "Minute ") %>%
kable()
results = tibble(GeoMean = apply(HDA[,c(99:128)], 2, EnvStats::geoMean),
Minute = as.integer(rep(c(0, 15, 30, 45, 60, 75), 5)),
Model = factor(c(rep("A", 6),
rep("B", 6),
rep("C", 6),
rep("D", 6),
rep("E", 6)))) %>%
pivot_wider(names_from = "Model", values_from = "GeoMean", names_prefix = "Model ") %>%
mutate(`Model B` = log(`Model B`) - log(`Model A`),
`Model C` = log(`Model C`) - log(`Model A`),
`Model D` = log(`Model D`) - log(`Model A`),
`Model E` = log(`Model E`) - log(`Model A`),
`Model A` = 0) %>%
pivot_longer(cols = starts_with("Model"), names_to = "", values_to = "GeoMean")
results = tibble(GeoMean = apply(HDA[,c(99:128)], 2, EnvStats::geoMean),
Minute = as.integer(rep(c(0, 15, 30, 45, 60, 75), 5)),
Model = factor(c(rep("A", 6),
rep("B", 6),
rep("C", 6),
rep("D", 6),
rep("E", 6)))) %>%
pivot_wider(names_from = "Model", values_from = "GeoMean", names_prefix = "Model ") %>%
mutate(`Model B` = log(`Model B`) - log(`Model A`),
`Model C` = log(`Model C`) - log(`Model A`),
`Model D` = log(`Model D`) - log(`Model A`),
`Model E` = log(`Model E`) - log(`Model A`),
`Model A` = 0) %>%
pivot_longer(cols = starts_with("Model"), names_to = " ", values_to = "GeoMean")
results %>%
ggplot(aes(x = Minute, y = GeoMean, col = Model)) +
geom_line() +
geom_point() +
scale_x_continuous(breaks = c(0, 15, 30, 45, 60, 75)) +
theme_bw() +
ggtitle("All predicted matches") +
ylab("Geometric mean for the results")
results = tibble(GeoMean = apply(HDA[,c(99:128)], 2, EnvStats::geoMean),
Minute = as.integer(rep(c(0, 15, 30, 45, 60, 75), 5)),
Model = factor(c(rep("A", 6),
rep("B", 6),
rep("C", 6),
rep("D", 6),
rep("E", 6)))) %>%
pivot_wider(names_from = "Model", values_from = "GeoMean", names_prefix = "Model ") %>%
mutate(`Model B` = log(`Model B`) - log(`Model A`),
`Model C` = log(`Model C`) - log(`Model A`),
`Model D` = log(`Model D`) - log(`Model A`),
`Model E` = log(`Model E`) - log(`Model A`),
`Model A` = 0) %>%
pivot_longer(cols = starts_with("Model"), names_to = "", values_to = "GeoMean")
results = tibble(GeoMean = apply(HDA[,c(99:128)], 2, EnvStats::geoMean),
Minute = as.integer(rep(c(0, 15, 30, 45, 60, 75), 5)),
Model = factor(c(rep("A", 6),
rep("B", 6),
rep("C", 6),
rep("D", 6),
rep("E", 6)))) %>%
pivot_wider(names_from = "Model", values_from = "GeoMean", names_prefix = "Model ") %>%
mutate(`Model B` = log(`Model B`) - log(`Model A`),
`Model C` = log(`Model C`) - log(`Model A`),
`Model D` = log(`Model D`) - log(`Model A`),
`Model E` = log(`Model E`) - log(`Model A`),
`Model A` = 0) %>%
pivot_longer(cols = starts_with("Model"), names_to = "Model", values_to = "GeoMean")
results %>%
ggplot(aes(x = Minute, y = GeoMean, col = Model)) +
geom_line() +
geom_point() +
scale_x_continuous(breaks = c(0, 15, 30, 45, 60, 75)) +
theme_bw() +
ggtitle("All predicted matches") +
ylab("Geometric mean for the results")
results %>%
pivot_wider(id_cols = "Model", values_from = "GeoMean", names_from = "Minute",
names_prefix = "Minute ") %>%
kable()
results = tibble(GeoMean = apply(HDA[,c(99:128)], 2, EnvStats::geoMean),
Minute = as.integer(rep(c(0, 15, 30, 45, 60, 75), 5)),
Model = factor(c(rep("A", 6),
rep("B", 6),
rep("C", 6),
rep("D", 6),
rep("E", 6)))) %>%
pivot_wider(names_from = "Model", values_from = "GeoMean", names_prefix = "Model ") %>%
mutate(`Model B` = log(`Model B`) - log(`Model A`),
`Model C` = log(`Model C`) - log(`Model A`),
`Model D` = log(`Model D`) - log(`Model A`),
`Model E` = log(`Model E`) - log(`Model A`),
`Model A` = 0) %>%
pivot_longer(cols = starts_with("Model"), names_to = "Model", values_to = "GeoMean")
results
results = tibble(GeoMean = apply(HDA[,c(99:128)], 2, EnvStats::geoMean),
Minute = as.integer(rep(c(0, 15, 30, 45, 60, 75), 5)),
Model = factor(c(rep("A", 6),
rep("B", 6),
rep("C", 6),
rep("D", 6),
rep("E", 6)))) %>%
pivot_wider(names_from = "Model", values_from = "GeoMean", names_prefix = "Model ") %>%
mutate(`Model B` = log(`Model B`) - log(`Model A`),
`Model C` = log(`Model C`) - log(`Model A`),
`Model D` = log(`Model D`) - log(`Model A`),
`Model E` = log(`Model E`) - log(`Model A`),
`Model A` = 0) %>%
pivot_longer(cols = starts_with("Model"), names_to = "Model", values_to = "GeoMean") %>%
mutate(Model = stringr::str_replace_all(Model, "Model ", ""))
results %>%
ggplot(aes(x = Minute, y = GeoMean, col = Model)) +
geom_line() +
geom_point() +
scale_x_continuous(breaks = c(0, 15, 30, 45, 60, 75)) +
theme_bw() +
ggtitle("All predicted matches") +
ylab("Geometric mean for the results")
results %>%
pivot_wider(id_cols = "Model", values_from = "GeoMean", names_from = "Minute",
names_prefix = "Minute ") %>%
kable()
library(dplyr)
library(tidyr)
library(stringr)
files = paste0("odds/serie-a-open/serie-a_", 2016:2020, ".csv")
lst = list()
for(i in 1:length(files)) {
lst[[i]] = read.csv2(files[i])
}
serie_a_open = do.call(rbind, lst) %>%
mutate(Date = str_replace_all(Date, " ", "-"),
Date = str_replace_all(Date, "Feb", "Fev"),
Date = str_replace_all(Date, "Apr", "Abr"),
Date = str_replace_all(Date, "May", "Mai"),
Date = str_replace_all(Date, "Aug", "Ago"),
Date = str_replace_all(Date, "Sep", "Set"),
Date = str_replace_all(Date, "Oct", "Out"),
Date = str_replace_all(Date, "Dec", "Dez"),
Date = as.character(as.Date(Date, format = "%d-%b-%y")))
View(serie_a_open)
load("weigth/data/mod_12_dc.RData")
load("weight/data/mod_12_dc.RData")
mod_12_dc
mod_12_dc$`2021-02-25`
load("weight/data/mod_0_dc.RData")
load("weight/data/mod_12_dc.RData")
mod_0_dc$`2021-02-25`
mod_12_dc$`2021-02-25`
mod_0 = mod_0_dc$`2021-02-25`
mod_12 = mod_12_dc$`2021-02-25`
mod_0
mod_0$alpha
mod_0$alpha["Internacional"]
mod_0$gamma
rate_mod_0 = exp(mod_0$alpha["Internacional"] + mod_0$beta["Corinthians"] + mod_0$gamma) * remaining/90
rate_mod_0 = exp(mod_0$alpha["Internacional"] + mod_0$beta["Corinthians"] + mod_0$gamma) / 90
rate_mod_0
rate_home_mod_0 = exp(mod_0$alpha["Internacional"] + mod_0$beta["Corinthians"] + mod_0$gamma) / 90
rate_away_mod_0 = exp(mod_0$alpha["Corinthians"] + mod_0$beta["Internacional"] + mod_0$gamma) / 90
rate_home_mod_0
rate_away_mod_0
load("~/GitHub/soccer-live-predictions/soccer-live-predictions/scrape/data/results2.RData")
View(results2)
View(results)
load("~/GitHub/soccer-live-predictions/soccer-live-predictions/transfermarkt/data/transfermarkt.RData")
View(transfermarkt)
View(results)
load("~/GitHub/soccer-live-predictions/soccer-live-predictions/transfermarkt/data/results.RData")
load("weight/data/mod_0_dc.RData")
load("weight/data/mod_12_dc.RData")
load("transfermarkt/data/results.RData")
mod_0 = mod_0_dc$`2021-02-25`
mod_12 = mod_12_dc$`2021-02-25`
dif_value =
# Internacional e Corinthians
rate_home_mod_0 = exp(mod_0$alpha["Internacional"] + mod_0$beta["Corinthians"] + mod_0$gamma) / 90
rate_away_mod_0 = exp(mod_0$alpha["Corinthians"] + mod_0$beta["Internacional"] + mod_0$gamma) / 90
transfermarkt
results
rate_home_mod_0 = exp(mod_0$alpha["Internacional"] + mod_0$beta["Corinthians"] + mod_0$gamma) / 90
rate_away_mod_0 = exp(mod_0$alpha["Corinthians"] + mod_0$beta["Internacional"] + mod_0$gamma) / 90
rate_home_mod_12_1 = exp(mod_12$alpha["Internacional"] + mod_12$beta["Corinthians"] + mod_12$gamma + mod_12$omega["value"]*(dif_value))
rate_home_mod_12_2 = exp(mod_12$tau + mod_12$alpha["Corinthians"] + mod_12$beta["Internacional"] + mod_12$gamma + mod_12$omega["value"]*(dif_value))
rate_home_mod_0
rate_away_mod_0
rate_home_mod_12_1 = exp(mod_12$alpha["Internacional"] + mod_12$beta["Corinthians"] + mod_12$gamma + mod_12$omega["value"]*(dif_value))
rate_home_mod_12_2 = exp(mod_12$tau + mod_12$alpha["Corinthians"] + mod_12$beta["Internacional"] + mod_12$gamma + mod_12$omega["value"]*(dif_value))
rate_home_mod_12_1
rate_home_mod_12_2
rate_home_mod_0 = exp(mod_0$alpha["Internacional"] + mod_0$beta["Corinthians"] + mod_0$gamma) / 90
rate_away_mod_0 = exp(mod_0$alpha["Corinthians"] + mod_0$beta["Internacional"] + mod_0$gamma) / 90
load("weight/data/mod_0_dc.RData")
load("weight/data/mod_12_dc.RData")
load("transfermarkt/data/results.RData")
mod_0 = mod_0_dc$`2021-02-25`
mod_12 = mod_12_dc$`2021-02-25`
dif_value = 0.33764251
rate_home_mod_0 = exp(mod_0$alpha["Internacional"] + mod_0$beta["Corinthians"] + mod_0$gamma) / 90
rate_away_mod_0 = exp(mod_0$alpha["Corinthians"] + mod_0$beta["Internacional"] + mod_0$gamma) / 90
load("weight/data/mod_0_dc.RData")
load("weight/data/mod_12_dc.RData")
load("transfermarkt/data/results.RData")
mod_0 = mod_0_dc$`2021-02-25`
mod_12 = mod_12_dc$`2021-02-25`
dif_value = 0.33764251
(rate_home_mod_0 = exp(mod_0$alpha["Internacional"] + mod_0$beta["Corinthians"] + mod_0$gamma) / 90)
(rate_away_mod_0 = exp(mod_0$alpha["Corinthians"] + mod_0$beta["Internacional"] + mod_0$gamma) / 90)
(rate_home_mod_12_1 = exp(mod_12$alpha["Internacional"] + mod_12$beta["Corinthians"] + mod_12$gamma + mod_12$omega["value"]*(dif_value)))
(rate_home_mod_12_2 = exp(mod_12$alpha["Corinthians"] + mod_12$beta["Internacional"] + mod_12$gamma + mod_12$omega["value"]*(dif_value)))
(rate_away_mod_12_1 = exp(mod_12$tau + mod_12$alpha["Internacional"] + mod_12$beta["Corinthians"] + mod_12$gamma + mod_12$omega["value"]*(dif_value)))
(rate_away_mod_12_2 = exp(mod_12$tau + mod_12$alpha["Corinthians"] + mod_12$beta["Internacional"] + mod_12$gamma + mod_12$omega["value"]*(dif_value)))
load("weight/data/mod_0_dc.RData")
load("weight/data/mod_12_dc.RData")
load("transfermarkt/data/results.RData")
mod_0 = mod_0_dc$`2021-02-25`
mod_12 = mod_12_dc$`2021-02-25`
dif_value = 0.33764251
(rate_home_mod_0 = exp(mod_0$alpha["Internacional"] + mod_0$beta["Corinthians"] + mod_0$gamma) / 90)
(rate_away_mod_0 = exp(mod_0$alpha["Corinthians"] + mod_0$beta["Internacional"]) / 90)
(rate_home_mod_12_1 = exp(mod_12$alpha["Internacional"] + mod_12$beta["Corinthians"] + mod_12$gamma + mod_12$omega["value"]*(dif_value)))
(rate_home_mod_12_2 = exp(mod_12$alpha["Corinthians"] + mod_12$beta["Internacional"] + mod_12$gamma + mod_12$omega["value"]*(dif_value)))
load("weight/data/mod_0_dc.RData")
load("weight/data/mod_12_dc.RData")
load("transfermarkt/data/results.RData")
mod_0 = mod_0_dc$`2021-02-25`
mod_12 = mod_12_dc$`2021-02-25`
dif_value = 0.33764251
(rate_home_mod_0 = exp(mod_0$alpha["Internacional"] + mod_0$beta["Corinthians"] + mod_0$gamma) / 90)
(rate_away_mod_0 = exp(mod_0$alpha["Corinthians"] + mod_0$beta["Internacional"]) / 90)
(rate_home_mod_12_1 = exp(mod_12$alpha["Internacional"] + mod_12$beta["Corinthians"] + mod_12$gamma + mod_12$omega["value"]*(dif_value)))
(rate_home_mod_12_2 = exp(mod_12$tau + mod_12$alpha["Internacional"] + mod_12$beta["Corinthians"] + mod_12$gamma + mod_12$omega["value"]*(dif_value)))
(rate_away_mod_12_1 = exp(mod_12$alpha["Corinthians"] + mod_12$beta["Internacional"] + mod_12$gamma + mod_12$omega["value"]*(dif_value)))
(rate_away_mod_12_2 = exp(mod_12$tau + mod_12$alpha["Corinthians"] + mod_12$beta["Internacional"] + mod_12$gamma + mod_12$omega["value"]*(dif_value)))
(rate_home_mod_0 = exp(mod_0$alpha["Internacional"] + mod_0$beta["Corinthians"] + mod_0$gamma) / 90)
(rate_away_mod_0 = exp(mod_0$alpha["Corinthians"] + mod_0$beta["Internacional"]) / 90)
(rate_home_mod_12_1 = exp(mod_12$alpha["Internacional"] + mod_12$beta["Corinthians"] + mod_12$gamma + mod_12$omega["value"]*(dif_value)))
(rate_home_mod_12_2 = exp(mod_12$tau + mod_12$alpha["Internacional"] + mod_12$beta["Corinthians"] + mod_12$gamma + mod_12$omega["value"]*(dif_value)))
(rate_away_mod_12_1 = exp(mod_12$alpha["Corinthians"] + mod_12$beta["Internacional"] + mod_12$gamma + mod_12$omega["value"]*(dif_value)))
(rate_away_mod_12_2 = exp(mod_12$tau + mod_12$alpha["Corinthians"] + mod_12$beta["Internacional"] + mod_12$gamma + mod_12$omega["value"]*(dif_value)))
load("weight/data/mod_0_dc.RData")
load("weight/data/mod_12_dc.RData")
load("transfermarkt/data/results.RData")
mod_0 = mod_0_dc$`2021-02-25`
mod_12 = mod_12_dc$`2021-02-25`
dif_value = 0.33764251
# Internacional e Corinthians
rate_home_mod_0 = exp(mod_0$alpha["Internacional"] + mod_0$beta["Corinthians"] + mod_0$gamma) / 90
rate_away_mod_0 = exp(mod_0$alpha["Corinthians"] + mod_0$beta["Internacional"]) / 90
rate_home_mod_12_1 = exp(mod_12$alpha["Internacional"] + mod_12$beta["Corinthians"] + mod_12$gamma + mod_12$omega["value"]*(dif_value))
rate_home_mod_12_2 = exp(mod_12$tau + mod_12$alpha["Internacional"] + mod_12$beta["Corinthians"] + mod_12$gamma + mod_12$omega["value"]*(dif_value))
rate_away_mod_12_1 = exp(mod_12$alpha["Corinthians"] + mod_12$beta["Internacional"] + mod_12$gamma + mod_12$omega["value"]*(dif_value))
rate_away_mod_12_2 = exp(mod_12$tau + mod_12$alpha["Corinthians"] + mod_12$beta["Internacional"] + mod_12$gamma + mod_12$omega["value"]*(dif_value))
home = c(rate_home_mod_0, rate_home_mod_12_1, rate_home_mod_12_2)
away = c(rate_away_mod_0, rate_away_mod_12_1, rate_away_mod_12_2)
rate = c("Model 0", "Model 12 1st half", "Model 12 2nd half")
(df = data.frame(rate, home, away))
View(resutls)
View(results)
load("weight/data/mod_0_dc.RData")
load("weight/data/mod_12_dc.RData")
load("transfermarkt/data/results.RData")
mod_0 = mod_0_dc$`2021-02-25`
mod_12 = mod_12_dc$`2021-02-25`
dif_value = 0.33764251
st = 6+8
rate_home_mod_0 = exp(mod_0$alpha["Internacional"] + mod_0$beta["Corinthians"] + mod_0$gamma) / (90+st)
rate_away_mod_0 = exp(mod_0$alpha["Corinthians"] + mod_0$beta["Internacional"]) / (90+st)
rate_home_mod_12_1 = exp(mod_12$alpha["Internacional"] + mod_12$beta["Corinthians"] + mod_12$gamma + mod_12$omega["value"]*(dif_value))
rate_home_mod_12_2 = exp(mod_12$tau + mod_12$alpha["Internacional"] + mod_12$beta["Corinthians"] + mod_12$gamma + mod_12$omega["value"]*(dif_value))
rate_away_mod_12_1 = exp(mod_12$alpha["Corinthians"] + mod_12$beta["Internacional"] + mod_12$gamma + mod_12$omega["value"]*(dif_value))
rate_away_mod_12_2 = exp(mod_12$tau + mod_12$alpha["Corinthians"] + mod_12$beta["Internacional"] + mod_12$gamma + mod_12$omega["value"]*(dif_value))
home = c(rate_home_mod_0, rate_home_mod_12_1, rate_home_mod_12_2)
away = c(rate_away_mod_0, rate_away_mod_12_1, rate_away_mod_12_2)
rate = c("Model 0", "Model 12 1st half", "Model 12 2nd half")
(df = data.frame(rate, home, away))
citation()
citation("CVXR")
library(dplyr)
library(ggplot2)
library(CVXR)
load("2020/data/input.RData")
st1 = U1
st1[which(st1 > 10)] = 10
tibble(st1) %>%
count(st1) %>%
ggplot(aes(x = st1, y = n)) +
geom_bar(position = "dodge", stat = "identity") +
theme_bw() +
xlab("Stoppage time for the first half") +
ylab("n") +
scale_x_continuous(breaks = 0:10,
labels = c(0:9, "10+"))
st2 = U2
st2[which(st2 > 10)] = 10
tibble(st2) %>%
count(st2) %>%
ggplot(aes(x = st2, y = n)) +
geom_bar(position = "dodge", stat = "identity") +
theme_bw() +
xlab("Stoppage time for the second half") +
ylab("n") +
scale_x_continuous(breaks = 0:10,
labels = c(0:9, "10+"))
aic <- function(loglik, k) {
2*k - 2*loglik
}
bic <- function(loglik, k, n) {
k*log(n) - 2*loglik
}
eta = Variable(2)
