{"frames":[{"func":"tibble(Model = rep(1:13, 2), Param = c(rep(\"Constant\", 13), rep(\"Per season\", \n    13)), loglik = c(mod_0_goals$loglik, mod_1_goals$loglik, \n    mod_2_goals$loglik, mod_3_goals$loglik, mod_4_goals$loglik, \n    mod_5_goals$loglik, mod_6_goals$loglik, mod_7_goals$loglik,  ...","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"mutate(., AIC = aic(loglik, k), BIC = bic(loglik, k, n))","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"rowwise(.)","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"tibble(Model = rep(1:13, 2), Param = c(rep(\"Constant\", 13), rep(\"Per season\", \n    13)), loglik = c(mod_0_goals$loglik, mod_1_goals$loglik, \n    mod_2_goals$loglik, mod_3_goals$loglik, mod_4_goals$loglik, \n    mod_5_goals$loglik, mod_6_goals$loglik, mod_7_goals$loglik,  ...","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"tibble_quos(xs[!is.null], .rows, .name_repair)","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"vectbl_recycle_rows(res, first_size, j, given_col_names[[j]])","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"cnd_signal(error_incompatible_size(n, name, size, \"Existing data\"))","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"signal_abort(cnd)","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"stop(fallback)","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0}],"message":"Erro: Tibble columns must have compatible sizes.\n* Size 26: Existing data.\n* Size 25: Column `loglik`.\n\u001B[34mi\u001B[39m Only values of size one are recycled.\n\u001B[90mRun `rlang::last_error()` to see where the error occurred.\u001B[39m\n"}