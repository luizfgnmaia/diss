{"frames":[{"func":"tibble(Model = 1:4, `log-likelihood` = c(mod_1$loglik, mod_2$loglik, \n    mod_3$loglik, mod_4$loglik))","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"tibble_quos(xs[!is.null], .rows, .name_repair)","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"vectbl_recycle_rows(res, first_size, j, given_col_names[[j]])","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"cnd_signal(error_incompatible_size(n, name, size, \"Existing data\"))","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"signal_abort(cnd)","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"stop(fallback)","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0}],"message":"Erro: Tibble columns must have compatible sizes.\n* Size 4: Existing data.\n* Size 3: Column `log-likelihood`.\n\u001B[34mi\u001B[39m Only values of size one are recycled.\n\u001B[90mRun `rlang::last_error()` to see where the error occurred.\u001B[39m\n"}