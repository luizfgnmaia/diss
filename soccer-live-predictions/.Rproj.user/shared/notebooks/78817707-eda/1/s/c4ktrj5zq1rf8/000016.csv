"0","reds$Acréscimo[which(is.na(reds$Acréscimo))] = 0"
"0",""
"0","reds = reds %>%"
"0","  mutate(Minuto = Minuto + Acréscimo)"
"0",""
"0","reds$Minuto[which(reds$Minuto > 50)] = 50"
"0",""
"0","tib_zeros = tibble(Minuto = c(1:50, 1:50), Tempo = c(rep(""1º"", 50), rep(""2º"", 50)), n = 0L)"
"0","complete_zeros <- function(tib_count) {"
"0","  tib_count %>%"
"0","    full_join(tib_zeros, by = c(""Minuto"", ""Tempo"", ""n"")) %>%"
"0","    group_by(Minuto, Tempo) %>%"
"0","    summarise(n = sum(n))"
"0","}"
"0",""
"0","tmp = reds %>%"
"0","  count(Minuto, Tempo) %>%"
"0","  complete_zeros() %>%"
"0","  mutate(p = n/nrow(reds))"
"2","`summarise()` has grouped output by 'Minuto'. You can override using the `.groups` argument.
"
"0","tmp %>%"
"0","  ggplot(aes(x = Minuto, y = p, col = Tempo)) +"
"0","  geom_line(size = 1) +"
"0","  geom_point(size = 2) +"
"0","  theme_bw() +"
"0","  ylab(""Cartões vermelhos (%)"") +"
"0","  scale_x_continuous(breaks = seq(from = 0, to = 50, by = 5),"
"0","                     labels = c(seq(from = 0, to = 45, by = 5), ""50+"")) +"
"0","  ylim(0, 0.055)"
