tmp_t[k] = tables[[k]][placares[i]]
} else {
tmp_delta[k] = 0
tmp_t[k] = 0
}
}
delta[[i]] = tmp_delta
t[[i]] = tmp_t
}
lst_tibbles = list()
for(i in 1:length(placares)) {
lst_tibbles[[i]] = tibble(Placar = rep(placares[i], N),
delta = delta[[i]],
t = t[[i]])
}
tib = do.call(lst_tibbles, rbind)
# ?Surv
#
# with(aml, Surv(time, status))
# survfit(Surv(time, status) ~ ph.ecog, data=lung)
# Surv(heart$start, heart$stop, heart$event)
tib = do.call(rbind, lst_tibbles)
View(tib)
tib = do.call(rbind, lst_tibbles) %>%
filter(t > 0)
View(tib)
library(survival)
library(dplyr)
load("dados_serie_a_2014_2019.RData")
x = list(); y = list(); xy = list()
for(i in 1:N) {
x[[i]] = c(x1[[i]], x2[[i]])
y[[i]] = c(y1[[i]], y2[[i]])
xy[[i]] = paste(x[[i]], y[[i]], sep = "-")
}
placares = c("0-0", "1-0", "0-1", "1-1", "2-0", "0-2", "2-1", "1-2", "2-2")
tables = lapply(xy, table)
last_score = lapply(xy, function(x) x[length(x)])
delta = list()
t = list()
for(i in 1:length(placares)) {
tmp_delta = NULL
tmp_t = NULL
for(k in 1:N) {
if(placares[i] %in% names(tables[[k]])) {
tmp_delta[k] = ifelse(last_score[[k]] == placares[i], 0, 1)
tmp_t[k] = tables[[k]][placares[i]]
} else {
tmp_delta[k] = 0
tmp_t[k] = 0
}
}
delta[[i]] = tmp_delta
t[[i]] = tmp_t
}
lst_tibbles = list()
for(i in 1:length(placares)) {
lst_tibbles[[i]] = tibble(Placar = rep(placares[i], N),
delta = delta[[i]],
t = t[[i]])
}
tib = do.call(rbind, lst_tibbles) %>%
filter(t > 0)
tib
summary(survfit(Surv(t, delta)~1, data = tib))
summary(survfit(Surv(Placar, delta)~1, data = tib))
summary(survfit(Surv(t, delta)~Placar, data = tib))
?Surv
?survfit
2019-2014
library(corrplot)
install.packages("corrplot")
library(corrplot)
```{r, warning = FALSE, message = FALSE}
library(corrplot)
library(corrplot)
tib
library(dplyr)
load("dados_serie_a_2014_2019.RData")
x = list(); y = list(); xy = list()
for(i in 1:N) {
x[[i]] = c(x1[[i]], x2[[i]])
y[[i]] = c(y1[[i]], y2[[i]])
xy[[i]] = paste(x[[i]], y[[i]], sep = "-")
}
placares = c("0-0", "1-0", "0-1", "1-1", "2-0", "0-2", "2-1", "1-2", "2-2")
tables = lapply(xy, table)
last_score = lapply(xy, function(x) x[length(x)])
delta = list()
t = list()
for(i in 1:length(placares)) {
tmp_delta = NULL
tmp_t = NULL
for(k in 1:N) {
if(placares[i] %in% names(tables[[k]])) {
tmp_delta[k] = ifelse(last_score[[k]] == placares[i], 0, 1)
tmp_t[k] = tables[[k]][placares[i]]
} else {
tmp_delta[k] = 0
tmp_t[k] = 0
}
}
delta[[i]] = tmp_delta
t[[i]] = tmp_t
}
names(delta) = placares
names(t) = placares
rates = NULL
for(i in 1:length(delta)) {
rates[i] = sum(delta[[i]])/sum(t[[i]])
}
# pág 66 do Crowder
sd = NULL
for(i in 1:length(delta)) {
sd[i] = rates[i]/sqrt(sum(delta[[i]]))
}
tib = tibble(Rates = rates, SD = sd)
rownames(tib) = placares
knitr::kable(tib)
library(corrplot)
library(corrplot)
rates
tib = tibble(Rates = rates, SD = sd)
rownames(tib) = placares
knitr::kable(tib)
mat = matrix(NA, nrow = 3, ncol = 3)
mat
names(rates) = placares
rownames(mat) = 1:3
colnames(mat) = 1:3
mat
rownames(mat) = 0:2
colnames(mat) = 0:2
mat
scores
rates
mat[1,1] = rates["0-0"]
library(corrplot)
mat = matrix(NA, nrow = 3, ncol = 3)
rownames(mat) = 0:2
colnames(mat) = 0:2
for(i in 1:3) {
for(j in 1:3) {
mat[i,j] = rates[paste(i, j, sep = "-")]
}
}
mat
library(corrplot)
mat = matrix(NA, nrow = 3, ncol = 3)
rownames(mat) = 0:2
colnames(mat) = 0:2
for(i in 1:3) {
for(j in 1:3) {
mat[i,j] = rates[paste(i-1, j-1, sep = "-")]
}
}
mat
corrplot(M, method = "number")
corrplot(mat, method = "number")
?corrplot
corrplot(mat, method = "number", cl.lim = c(0, 1))
max(mat)
min(mat)
corrplot(mat, method = "number", cl.lim = c(0.02, 0.03))
mat = mat*100
mat = mat*100
corrplot(mat, method = "number", cl.lim = c(2, 3))
library(corrplot)
mat = matrix(NA, nrow = 3, ncol = 3)
rownames(mat) = 0:2
colnames(mat) = 0:2
for(i in 1:3) {
for(j in 1:3) {
mat[i,j] = rates[paste(i-1, j-1, sep = "-")]
}
}
corrplot(mat, method = "number", cl.lim = c(0.02, 0.03))
corrplot(mat, method = "number", cl.lim = c(0.02, 0.03), digits = 6)
corrplot(mat, method = "number", cl.lim = c(0.02, 0.03),
number.digits = 6)
corrplot(mat, method = "number", cl.lim = c(0.02, 0.03),
number.digits = 6, col = "black")
corrplot(mat, method = "number", cl.lim = c(0.02, 0.03),
number.digits = 6, col = c("blue", "red"))
col1 <- colorRampPalette(c("#7F0000", "red", "#FF7F00", "yellow", "white",
"cyan", "#007FFF", "blue", "#00007F"))
corrplot(mat, method = "number", cl.lim = c(0.02, 0.03),
number.digits = 6, col = col1)
col1 <- colorRampPalette(c("#7F0000", "red", "#FF7F00", "yellow", "white",
"cyan", "#007FFF", "blue", "#00007F"))
corrplot(mat, method = "number", cl.lim = c(0.02, 0.03),
number.digits = 6, col = col1(100))
corrplot(mat, method = "number", cl.lim = c(0.02, 0.03),
number.digits = 6, col = col1(12))
corrplot(mat, method = "number", cl.lim = c(0.02, 0.03),
number.digits = 6, col = col1(3))
corrplot(mat, method = "number", cl.lim = c(0.02, 0.03),
number.digits = 6, col = "black")
knitr::kable(mat)
?kable
library(dplyr)
load("dados_serie_a_2014_2019.RData")
x = list(); y = list(); xy = list()
for(i in 1:N) {
x[[i]] = c(x1[[i]], x2[[i]])
y[[i]] = c(y1[[i]], y2[[i]])
xy[[i]] = paste(x[[i]], y[[i]], sep = "-")
}
placares = c("0-0", "1-0", "0-1", "1-1", "2-0", "0-2", "2-1", "1-2", "2-2")
tables = lapply(xy, table)
last_score = lapply(xy, function(x) x[length(x)])
delta = list()
t = list()
for(i in 1:length(placares)) {
tmp_delta = NULL
tmp_t = NULL
for(k in 1:N) {
if(placares[i] %in% names(tables[[k]])) {
tmp_delta[k] = ifelse(last_score[[k]] == placares[i], 0, 1)
tmp_t[k] = tables[[k]][placares[i]]
} else {
tmp_delta[k] = 0
tmp_t[k] = 0
}
}
delta[[i]] = tmp_delta
t[[i]] = tmp_t
}
names(delta) = placares
names(t) = placares
rates = NULL
for(i in 1:length(delta)) {
rates[i] = sum(delta[[i]])/sum(t[[i]])
}
names(rates) = placares
# pág 66 do Crowder
sd = NULL
for(i in 1:length(delta)) {
sd[i] = rates[i]/sqrt(sum(delta[[i]]))
}
tib = tibble(Rates = rates, SD = sd)
rownames(tib) = placares
knitr::kable(tib)
mat = matrix(NA, nrow = 3, ncol = 3)
rownames(mat) = 0:2
colnames(mat) = 0:2
for(i in 1:3) {
for(j in 1:3) {
mat[i,j] = rates[paste(i-1, j-1, sep = "-")]
}
}
knitr::kable(mat)
library(dplyr)
load("dados_serie_a_2014_2019.RData")
x = list(); y = list(); xy = list()
for(i in 1:N) {
x[[i]] = c(x1[[i]], x2[[i]])
y[[i]] = c(y1[[i]], y2[[i]])
xy[[i]] = paste(x[[i]], y[[i]], sep = "-")
}
placares = c("0-0", "1-0", "0-1", "1-1", "2-0", "0-2", "2-1", "1-2", "2-2")
tables = lapply(xy, table)
last_score = lapply(xy, function(x) x[length(x)])
delta = list()
t = list()
for(i in 1:length(placares)) {
tmp_delta = NULL
tmp_t = NULL
for(k in 1:N) {
if(placares[i] %in% names(tables[[k]])) {
tmp_delta[k] = ifelse(last_score[[k]] == placares[i], 0, 1)
tmp_t[k] = tables[[k]][placares[i]]
} else {
tmp_delta[k] = 0
tmp_t[k] = 0
}
}
delta[[i]] = tmp_delta
t[[i]] = tmp_t
}
names(delta) = placares
names(t) = placares
rates = NULL
for(i in 1:length(delta)) {
rates[i] = sum(delta[[i]])/sum(t[[i]])
}
names(rates) = placares
# pág 66 do Crowder
sd = NULL
for(i in 1:length(delta)) {
sd[i] = rates[i]/sqrt(sum(delta[[i]]))
}
tib = tibble(Rates = rates, SD = sd)
rownames(tib) = placares
knitr::kable(tib)
mat = matrix(NA, nrow = 3, ncol = 3)
rownames(mat) = 0:2
colnames(mat) = 0:2
for(i in 1:3) {
for(j in 1:3) {
mat[i,j] = rates[paste("H:", i-1, "A:", j-1, sep = "-")]
}
}
knitr::kable(mat)
library(dplyr)
load("dados_serie_a_2014_2019.RData")
x = list(); y = list(); xy = list()
for(i in 1:N) {
x[[i]] = c(x1[[i]], x2[[i]])
y[[i]] = c(y1[[i]], y2[[i]])
xy[[i]] = paste(x[[i]], y[[i]], sep = "-")
}
placares = c("0-0", "1-0", "0-1", "1-1", "2-0", "0-2", "2-1", "1-2", "2-2")
tables = lapply(xy, table)
last_score = lapply(xy, function(x) x[length(x)])
delta = list()
t = list()
for(i in 1:length(placares)) {
tmp_delta = NULL
tmp_t = NULL
for(k in 1:N) {
if(placares[i] %in% names(tables[[k]])) {
tmp_delta[k] = ifelse(last_score[[k]] == placares[i], 0, 1)
tmp_t[k] = tables[[k]][placares[i]]
} else {
tmp_delta[k] = 0
tmp_t[k] = 0
}
}
delta[[i]] = tmp_delta
t[[i]] = tmp_t
}
names(delta) = placares
names(t) = placares
rates = NULL
for(i in 1:length(delta)) {
rates[i] = sum(delta[[i]])/sum(t[[i]])
}
names(rates) = placares
# pág 66 do Crowder
sd = NULL
for(i in 1:length(delta)) {
sd[i] = rates[i]/sqrt(sum(delta[[i]]))
}
tib = tibble(Rates = rates, SD = sd)
rownames(tib) = placares
knitr::kable(tib)
mat = matrix(NA, nrow = 3, ncol = 3)
rownames(mat) = paste0("H", 0:2)
colnames(mat) = paste0("A", 0:2)
for(i in 1:3) {
for(j in 1:3) {
mat[i,j] = rates[paste(i-1, j-1, sep = "-")]
}
}
knitr::kable(mat)
library(dplyr)
load("dados_serie_a_2014_2019.RData")
x = list(); y = list(); xy = list()
for(i in 1:N) {
x[[i]] = c(x1[[i]], x2[[i]])
y[[i]] = c(y1[[i]], y2[[i]])
xy[[i]] = paste(x[[i]], y[[i]], sep = "-")
}
placares = c("0-0", "1-0", "0-1", "1-1", "2-0", "0-2", "2-1", "1-2", "2-2")
tables = lapply(xy, table)
last_score = lapply(xy, function(x) x[length(x)])
delta = list()
t = list()
for(i in 1:length(placares)) {
tmp_delta = NULL
tmp_t = NULL
for(k in 1:N) {
if(placares[i] %in% names(tables[[k]])) {
tmp_delta[k] = ifelse(last_score[[k]] == placares[i], 0, 1)
tmp_t[k] = tables[[k]][placares[i]]
} else {
tmp_delta[k] = 0
tmp_t[k] = 0
}
}
delta[[i]] = tmp_delta
t[[i]] = tmp_t
}
names(delta) = placares
names(t) = placares
rates = NULL
for(i in 1:length(delta)) {
rates[i] = sum(delta[[i]])/sum(t[[i]])
}
names(rates) = placares
# pág 66 do Crowder
sd = NULL
for(i in 1:length(delta)) {
sd[i] = rates[i]/sqrt(sum(delta[[i]]))
}
tib = tibble(Rates = rates, SD = sd)
rownames(tib) = placares
knitr::kable(tib)
mat = matrix(NA, nrow = 3, ncol = 3)
rownames(mat) = paste0("H: ", 0:2)
colnames(mat) = paste0("A: ", 0:2)
for(i in 1:3) {
for(j in 1:3) {
mat[i,j] = rates[paste(i-1, j-1, sep = "-")]
}
}
knitr::kable(mat)
library(dplyr)
load("dados_serie_a_2014_2019.RData")
x = list(); y = list(); xy = list()
for(i in 1:N) {
x[[i]] = c(x1[[i]], x2[[i]])
y[[i]] = c(y1[[i]], y2[[i]])
xy[[i]] = paste(x[[i]], y[[i]], sep = "-")
}
placares = c("0-0", "1-0", "0-1", "1-1", "2-0", "0-2", "2-1", "1-2", "2-2")
tables = lapply(xy, table)
last_score = lapply(xy, function(x) x[length(x)])
delta = list()
t = list()
for(i in 1:length(placares)) {
tmp_delta = NULL
tmp_t = NULL
for(k in 1:N) {
if(placares[i] %in% names(tables[[k]])) {
tmp_delta[k] = ifelse(last_score[[k]] == placares[i], 0, 1)
tmp_t[k] = tables[[k]][placares[i]]
} else {
tmp_delta[k] = 0
tmp_t[k] = 0
}
}
delta[[i]] = tmp_delta
t[[i]] = tmp_t
}
names(delta) = placares
names(t) = placares
rates = NULL
for(i in 1:length(delta)) {
rates[i] = sum(delta[[i]])/sum(t[[i]])
}
names(rates) = placares
# pág 66 do Crowder
sd = NULL
for(i in 1:length(delta)) {
sd[i] = rates[i]/sqrt(sum(delta[[i]]))
}
tib = tibble(Rates = rates, SD = sd)
rownames(tib) = placares
knitr::kable(tib)
mat = matrix(NA, nrow = 3, ncol = 3)
rownames(mat) = paste0("x = ", 0:2)
colnames(mat) = paste0("y =  ", 0:2)
for(i in 1:3) {
for(j in 1:3) {
mat[i,j] = rates[paste(i-1, j-1, sep = "-")]
}
}
knitr::kable(mat)
library(dplyr)
load("dados_serie_a_2014_2019.RData")
x = list(); y = list(); xy = list()
for(i in 1:N) {
x[[i]] = c(x1[[i]], x2[[i]])
y[[i]] = c(y1[[i]], y2[[i]])
xy[[i]] = paste(x[[i]], y[[i]], sep = "-")
}
placares = c("0-0", "1-0", "0-1", "1-1", "2-0", "0-2", "2-1", "1-2", "2-2")
tables = lapply(xy, table)
last_score = lapply(xy, function(x) x[length(x)])
delta = list()
t = list()
for(i in 1:length(placares)) {
tmp_delta = NULL
tmp_t = NULL
for(k in 1:N) {
if(placares[i] %in% names(tables[[k]])) {
tmp_delta[k] = ifelse(last_score[[k]] == placares[i], 0, 1)
tmp_t[k] = tables[[k]][placares[i]]
} else {
tmp_delta[k] = 0
tmp_t[k] = 0
}
}
delta[[i]] = tmp_delta
t[[i]] = tmp_t
}
names(delta) = placares
names(t) = placares
rates = NULL
for(i in 1:length(delta)) {
rates[i] = sum(delta[[i]])/sum(t[[i]])
}
names(rates) = placares
# pág 66 do Crowder
sd = NULL
for(i in 1:length(delta)) {
sd[i] = rates[i]/sqrt(sum(delta[[i]]))
}
tib = tibble(Rates = rates, SD = sd)
rownames(tib) = placares
knitr::kable(tib)
mat = matrix(NA, nrow = 3, ncol = 3)
rownames(mat) = paste0("x = ", 0:2)
colnames(mat) = paste0("y =  ", 0:2)
for(i in 1:3) {
for(j in 1:3) {
mat[i,j] = rates[paste(i-1, j-1, sep = "-")]
}
}
knitr::kable(mat)
