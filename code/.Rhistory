source('~/diss/code/mod_1_CVXR_3.R', echo=TRUE)
source('~/diss/code/mod_1_CVXR.R', echo=TRUE)
source('~/diss/code/mod_1_CVXR.R', echo=TRUE)
source('~/diss/code/mod_1_CVXR.R', echo=TRUE)
source('~/diss/code/mod_1_CVXR.R', echo=TRUE)
t0 = Sys.time()
library(CVXR)
load("serie_a_2019.RData")
alpha = Variable(19)
beta = Variable(20)
gamma = Variable(1)
param = vstack(beta, alpha, gamma)
lst_JH = list()
lst_JA = list()
for(k in 1:length(lst_J)) {
tmp_JH = list()
tmp_JA = list()
if(is.na(lst_J[[k]][1])) {
JH[[k]] = 0
JA[[k]] = 0
} else {
for(l in 1:length(lst_J[[k]])) {
tmp_JH[[l]] = 1 * (1-lst_J[[k]][l])
tmp_JA[[l]] = 1 * (lst_J[[k]][l])
}
lst_JH[[k]] = sum_entries(do.call(vstack, tmp_JH))
lst_JA[[k]] = sum_entries(do.call(vstack, tmp_JA))
}
}
source('~/diss/code/mod_1_CVXR.R', echo=TRUE)
source('~/diss/code/mod_1_CVXR.R', echo=TRUE)
