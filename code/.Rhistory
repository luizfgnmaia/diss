# Mudar a escala dos deltas tem bastante impacto nos betas
library(dplyr)
library(CVXR)
load("dados_serie_a_2019.RData")
load("dados_mod_2.RData")
# delta1 = delta1/90
# delta2 = delta2/90
t0 = Sys.time()
alpha = Variable(19)
beta = Variable(20)
gamma = Variable(1)
lambda_xy = Variable(2)
mu_xy = Variable(2)
theta = vstack(alpha, beta, gamma, lambda_xy, mu_xy)
tau = Variable(2)
phi = Variable(2)
omega = Variable(2)
pi1 = tau[1] + phi[1] * r1 + omega[1] * s1
pi2 = tau[2] + phi[2] * r2 + omega[2] * s2
log_lik = -t(delta1) %*% exp(M1_lambda %*% theta) - t(delta1) %*% exp(M1_mu %*% theta) - t(delta2) %*% exp(M2_lambda %*% theta) - t(delta2) %*% exp(M2_mu %*% theta) +
t(1-J1) %*% J1_lambda %*% theta + t(J1) %*% J1_mu %*% theta + t(1-J2) %*% J2_lambda %*% theta + t(J2) %*% J2_mu %*% theta +
t(T1) %*% log(pi1) + t(T2) %*% log(pi2) - sum_entries(pi1) - sum_entries(pi2)
objective = Maximize(log_lik)
problem = Problem(objective)
set.seed(1)
solution = solve(problem, solver = "MOSEK")
duration = Sys.time() - t0
mod_2 = list(par = c(0, solution$getValue(alpha), solution$getValue(beta), solution$getValue(gamma),
solution$getValue(lambda_xy), solution$getValue(mu_xy),
solution$getValue(tau), solution$getValue(phi), solution$getValue(omega)),
value = solution$value,
duration = duration)
save(mod_2, file = "mod_2.RData")
library(ggplot2)
load("dixon robinson/sol/mod_2_CVXR.RData")
tibble(new = mod_2$par[1:41], old = mod_2_CVXR$par[1:41],
par = c(rep("alpha", 20), rep("beta", 20), "gamma")) %>%
ggplot(aes(x = new, y = old, col = par)) +
geom_point(size = 2) +
theme_bw()
mod_2$par[41]
mod_2$par[40]
mod_2$par[41]
mod_2_CVXR$par[41]
exp(0.95)
library(dplyr)
library(CVXR)
load("dados_serie_a_2019.RData")
load("dados_mod_2.RData")
# delta1 = delta1/90
# delta2 = delta2/90
t0 = Sys.time()
alpha = Variable(19)
beta = Variable(20)
gamma = Variable(1)
lambda_xy = Variable(2)
mu_xy = Variable(2)
theta = vstack(alpha, beta, gamma, lambda_xy, mu_xy)
tau = Variable(2)
phi = Variable(2)
omega = Variable(2)
pi1 = tau[1] + phi[1] * r1 + omega[1] * s1
pi2 = tau[2] + phi[2] * r2 + omega[2] * s2
log_lik = -t(delta1) %*% exp(M1_lambda %*% theta) - t(delta1) %*% exp(M1_mu %*% theta) - t(delta2) %*% exp(M2_lambda %*% theta) - t(delta2) %*% exp(M2_mu %*% theta) +
t(1-J1) %*% J1_lambda %*% theta + t(J1) %*% J1_mu %*% theta + t(1-J2) %*% J2_lambda %*% theta + t(J2) %*% J2_mu %*% theta +
t(T1) %*% log(pi1) + t(T2) %*% log(pi2) - sum_entries(pi1) - sum_entries(pi2)
objective = Maximize(log_lik)
problem = Problem(objective)
set.seed(1)
solution = solve(problem, solver = "MOSEK")
duration = Sys.time() - t0
mod_2 = list(par = c(0, solution$getValue(alpha), solution$getValue(beta), solution$getValue(gamma),
solution$getValue(lambda_xy), solution$getValue(mu_xy),
solution$getValue(tau), solution$getValue(phi), solution$getValue(omega)),
value = solution$value,
duration = duration)
save(mod_2, file = "mod_2.RData")
library(ggplot2)
load("dixon robinson/sol/mod_2_CVXR.RData")
tibble(new = mod_2$par[1:41], old = mod_2_CVXR$par[1:41],
par = c(rep("alpha", 20), rep("beta", 20), "gamma")) %>%
ggplot(aes(x = new, y = old, col = par)) +
geom_point(size = 2) +
theme_bw()
mod_2$par[42:45]
mod_2_CVXR$par[42:45]
load("mod_1.RData")
mod_2$par[46:51]
mod_1$par[42:47]
# Mudar a escala dos deltas tem bastante impacto nos betas
library(dplyr)
library(CVXR)
load("dados_serie_a_2019.RData")
load("dados_mod_1.RData")
# delta1 = delta1/90
# delta2 = delta2/90
t0 = Sys.time()
alpha = Variable(19)
beta = Variable(20)
gamma = Variable(1)
theta = vstack(alpha, beta, gamma)
tau = Variable(2)
phi = Variable(2)
omega = Variable(2)
pi1 = tau[1] + phi[1] * r1 + omega[1] * s1
pi2 = tau[2] + phi[2] * r2 + omega[2] * s2
log_lik = -t(delta1) %*% exp(M1_lambda %*% theta) - t(delta1) %*% exp(M1_mu %*% theta) - t(delta2) %*% exp(M2_lambda %*% theta) - t(delta2) %*% exp(M2_mu %*% theta) +
t(1-J1) %*% J1_lambda %*% theta + t(J1) %*% J1_mu %*% theta + t(1-J2) %*% J2_lambda %*% theta + t(J2) %*% J2_mu %*% theta +
t(T1) %*% log(pi1) + t(T2) %*% log(pi2) - sum_entries(pi1) - sum_entries(pi2)
objective = Maximize(log_lik)
problem = Problem(objective)
set.seed(1)
solution = solve(problem, solver = "MOSEK")
duration = Sys.time() - t0
mod_1 = list(par = c(0, solution$getValue(alpha), solution$getValue(beta), solution$getValue(gamma),
solution$getValue(tau), solution$getValue(phi), solution$getValue(omega)),
value = solution$value,
duration = duration)
save(mod_1, file = "mod_1.RData")
library(ggplot2)
load("dixon robinson/sol/mod_1_CVXR.RData")
tibble(new = mod_1$par[1:41], old = mod_1_CVXR$par, par = c(rep("alpha", 20), rep("beta", 20), "gamma")) %>%
ggplot(aes(x = new, y = old, col = par)) +
geom_point(size = 2) +
theme_bw()
mod_1_CVXR$par[41]
mod_1$par[41]
source('~/diss/code/mod_1.R')
library(dplyr)
library(CVXR)
load("dados_serie_a_2019.RData")
load("dados_mod_2.RData")
# delta1 = delta1/90
# delta2 = delta2/90
t0 = Sys.time()
alpha = Variable(19)
beta = Variable(20)
gamma = Variable(1)
lambda_xy = Variable(2)
mu_xy = Variable(2)
theta = vstack(alpha, beta, gamma, lambda_xy, mu_xy)
tau = Variable(2)
phi = Variable(2)
omega = Variable(2)
pi1 = tau[1] + phi[1] * r1 + omega[1] * s1
pi2 = tau[2] + phi[2] * r2 + omega[2] * s2
log_lik = -t(delta1) %*% exp(M1_lambda %*% theta) - t(delta1) %*% exp(M1_mu %*% theta) - t(delta2) %*% exp(M2_lambda %*% theta) - t(delta2) %*% exp(M2_mu %*% theta) +
t(1-J1) %*% J1_lambda %*% theta + t(J1) %*% J1_mu %*% theta + t(1-J2) %*% J2_lambda %*% theta + t(J2) %*% J2_mu %*% theta +
t(T1) %*% log(pi1) + t(T2) %*% log(pi2) - sum_entries(pi1) - sum_entries(pi2)
objective = Maximize(log_lik)
problem = Problem(objective)
set.seed(1)
solution = solve(problem, solver = "MOSEK")
duration = Sys.time() - t0
mod_2 = list(par = c(0, solution$getValue(alpha), solution$getValue(beta), solution$getValue(gamma),
solution$getValue(lambda_xy), solution$getValue(mu_xy),
solution$getValue(tau), solution$getValue(phi), solution$getValue(omega)),
value = solution$value,
duration = duration)
save(mod_2, file = "mod_2.RData")
library(ggplot2)
load("dixon robinson/sol/mod_2_CVXR.RData")
tibble(new = mod_2$par[1:41], old = mod_2_CVXR$par[1:41],
par = c(rep("alpha", 20), rep("beta", 20), "gamma")) %>%
ggplot(aes(x = new, y = old, col = par)) +
geom_point(size = 2) +
theme_bw()
mod_2$par[42:45]
mod_2_CVXR$par[42:45]
load("mod_1.RData")
mod_2$par[46:51]
mod_1$par[42:47]
mod_2$par[42:45]
mod_2_CVXR$par[42:45]
cor(mod_2_CVXR$par[1:40], mod_2$par[1:40])
cor(mod_2_CVXR$par[1:40], mod_2$par[1:40], method = "kendall")
cor(mod_2_CVXR$par[1:20], mod_2$par[1:20], method = "kendall")
cor(mod_2_CVXR$par[21:40], mod_2$par[21:40], method = "kendall")
cor(mod_2_CVXR$par[21:40], mod_2$par[21:40], method = "spearman")
cor(mod_2_CVXR$par[1:20], mod_2$par[1:20], method = "spearman")
library(dplyr)
load("dados_serie_a_2019.RData")
#### T1
gols_t1 = unlist(lapply(t1, function(x) length(x < 45)))
reds_t1 = unlist(lapply(t1s, function(x) length(x < 45)))
fit_T1 = glm(T1 ~ gols_t1 + reds_t1)
summary(fit_T1)
#### T2
gols_t2 = unlist(lapply(t2, function(x) length(x < 90)))
reds_t2 = unlist(lapply(t2s, function(x) length(x < 90)))
fit_T2 = glm(T2 ~ gols_t2 + reds_t2)
summary(fit_T2)
summary(fit_T1)
summary(fit_T2)
tibble(x = T1) %>%
ggplot(aes(x = x))  +
geom_bar() +
scale_x_continuous(breaks = 0:9) +
theme_bw() +
xlab("") +
ggtitle("T1")
tibble(x = T2) %>%
ggplot(aes(x = x))  +
geom_bar() +
scale_x_continuous(breaks = 0:12) +
theme_bw() +
xlab("") +
ggtitle("T2")
#### T1
gols_t1 = unlist(lapply(t1, function(x) length(x < 45)))
reds_t1 = unlist(lapply(t1s, function(x) length(x < 45)))
fit_T1 = glm(T1 ~ gols_t1 + reds_t1)
summary(fit_T1)
?glm
fit_T1 = glm(T1 ~ gols_t1 + reds_t1, family = "poisson")
summary(fit_T1)
gols_t1 = unlist(lapply(t1, function(x) length(x < 45)))
reds_t1 = unlist(lapply(t1s, function(x) length(x < 45)))
fit_T1 = glm(T1 ~ gols_t1 + reds_t1, family = "poisson")
summary(fit_T1)
library(dplyr)
library(CVXR)
load("dados_serie_a_2019.RData")
load("dados_mod_1.RData")
# delta1 = delta1/90
# delta2 = delta2/90
t0 = Sys.time()
alpha = Variable(19)
beta = Variable(20)
gamma = Variable(1)
theta = vstack(alpha, beta, gamma)
tau = Variable(2)
phi = Variable(2)
omega = Variable(2)
pi1 = tau[1] + phi[1] * r1 + omega[1] * s1
pi2 = tau[2] + phi[2] * r2 + omega[2] * s2
log_lik = -t(delta1) %*% exp(M1_lambda %*% theta) - t(delta1) %*% exp(M1_mu %*% theta) - t(delta2) %*% exp(M2_lambda %*% theta) - t(delta2) %*% exp(M2_mu %*% theta) +
t(1-J1) %*% J1_lambda %*% theta + t(J1) %*% J1_mu %*% theta + t(1-J2) %*% J2_lambda %*% theta + t(J2) %*% J2_mu %*% theta +
t(T1) %*% log(pi1) + t(T2) %*% log(pi2) - sum_entries(pi1) - sum_entries(pi2)
objective = Maximize(log_lik)
problem = Problem(objective)
set.seed(1)
solution = solve(problem, solver = "MOSEK")
duration = Sys.time() - t0
mod_1 = list(par = c(0, solution$getValue(alpha), solution$getValue(beta), solution$getValue(gamma),
solution$getValue(tau), solution$getValue(phi), solution$getValue(omega)),
value = solution$value,
duration = duration)
save(mod_1, file = "mod_1.RData")
library(ggplot2)
load("dixon robinson/sol/mod_1_CVXR.RData")
tibble(new = mod_1$par[1:41], old = mod_1_CVXR$par, par = c(rep("alpha", 20), rep("beta", 20), "gamma")) %>%
ggplot(aes(x = new, y = old, col = par)) +
geom_point(size = 2) +
theme_bw()
source('~/diss/code/mod_1.R', echo=TRUE)
source('~/diss/code/mod_1.R', echo=TRUE)
load("data/resultados.RData")
load("data/resultados.RData")
load("data/gols.RData")
View(gols)
gols = gols %>%
rename(Acréscimo_Gols = Acréscimo)
library(dplyr)
load("data/resultados.RData")
load("data/gols.RData")
gols = gols %>%
rename(Acréscimo_Gols = Acréscimo)
load("data/resultados.RData")
load("data/gols.RData")
gols = gols %>%
rename(Acréscimo_Gols = Acréscimo) %>%
select("Campeonato", "Ano", "Jogo", "Tempo", "Acréscimo_Gols")
gols = gols %>%
rename(Acréscimo_Gols = Acréscimo) %>%
select("Campeonato", "Ano", "Jogo", "Tempo", "Acréscimo_Gols") %>%
left_join(resultados)
library(dplyr)
load("data/resultados.RData")
load("data/gols.RData")
gols = gols %>%
rename(Acréscimo_Gols = Acréscimo) %>%
select("Campeonato", "Ano", "Jogo", "Tempo", "Acréscimo_Gols") %>%
left_join(resultados)
View(gols)
library(dplyr)
load("data/resultados.RData")
load("data/gols.RData")
gols = gols %>%
rename(Acréscimo_Gol = Acréscimo) %>%
filter(!is.na(Acréscimo_Gol))
select("Campeonato", "Ano", "Jogo", "Tempo", "Acréscimo_Gol") %>%
left_join(resultados)
library(dplyr)
load("data/resultados.RData")
load("data/gols.RData")
gols = gols %>%
rename(Acréscimo_Gol = Acréscimo) %>%
filter(!is.na(Acréscimo_Gol))
select("Campeonato", "Ano", "Jogo", "Tempo", "Acréscimo_Gol") %>%
left_join(resultados)
gols = gols %>%
rename(Acréscimo_Gol = Acréscimo) %>%
filter(!is.na(Acréscimo_Gol))
library(dplyr)
load("data/resultados.RData")
load("data/gols.RData")
gols = gols %>%
rename(Acréscimo_Gol = Acréscimo) %>%
filter(!is.na(Acréscimo_Gol))
library(dplyr)
load("data/resultados.RData")
load("data/gols.RData")
gols = gols %>%
rename(Acréscimo_Gol = Acréscimo) %>%
filter(!is.na(Acréscimo_Gol))
select("Campeonato", "Ano", "Jogo", "Tempo", "Acréscimo_Gol") %>%
left_join(resultados)
library(dplyr)
load("data/resultados.RData")
load("data/gols.RData")
gols = gols %>%
rename(Acréscimo_Gol = Acréscimo) %>%
filter(!is.na(Acréscimo_Gol)) %>%
select("Campeonato", "Ano", "Jogo", "Tempo", "Acréscimo_Gol") %>%
left_join(resultados)
library(dplyr)
load("data/resultados.RData")
load("data/gols.RData")
# Para o primeiro tempo
gols = gols %>%
rename(Acréscimo_Gol = Acréscimo) %>%
filter(!is.na(Acréscimo_Gol),
Tempo == "1º") %>%
select("Campeonato", "Ano", "Jogo", "Tempo", "Acréscimo_Gol") %>%
left_join(resultados)
View(gols)
library(dplyr)
load("data/resultados.RData")
load("data/gols.RData")
# Para o primeiro tempo
gols = gols %>%
rename(Acréscimo_Gol = Acréscimo) %>%
filter(!is.na(Acréscimo_Gol),
Tempo == "1º",
Ano >= 2014) %>%
select("Campeonato", "Ano", "Jogo", "Tempo", "Acréscimo_Gol") %>%
left_join(resultados)
library(dplyr)
load("data/resultados.RData")
load("data/gols.RData")
# Para o primeiro tempo
gols = gols %>%
rename(Acréscimo_Gol = Acréscimo) %>%
filter(!is.na(Acréscimo_Gol),
Tempo == "1º",
Ano >= 2014) %>%
select("Campeonato", "Ano", "Jogo", "Tempo", "Acréscimo_Gol") %>%
left_join(resultados) %>%
rowwise() %>%
mutate(problema = Acréscimo_Gol >= Acréscimos_1)
library(dplyr)
load("data/resultados.RData")
load("data/gols.RData")
# Para o primeiro tempo
gols = gols %>%
rename(Acréscimo_Gol = Acréscimo) %>%
filter(!is.na(Acréscimo_Gol),
Tempo == "1º",
Ano >= 2014) %>%
select("Campeonato", "Ano", "Jogo", "Tempo", "Acréscimo_Gol") %>%
left_join(resultados) %>%
rowwise() %>%
mutate(problema = Acréscimo_Gol >= Acréscimos_1) %>%
filter(problema == TRUE)
library(dplyr)
load("data/resultados.RData")
load("data/gols.RData")
# Primeiro tempo
gols = gols %>%
rename(Acréscimo_Gol = Acréscimo) %>%
filter(!is.na(Acréscimo_Gol),
Tempo == "1º",
Ano >= 2014) %>%
select("Campeonato", "Ano", "Jogo", "Tempo", "Acréscimo_Gol") %>%
left_join(resultados) %>%
rowwise() %>%
mutate(problema = Acréscimo_Gol >= Acréscimos_1) %>%
filter(problema == TRUE) %>%
View()
# Segundo tempo
gols = gols %>%
rename(Acréscimo_Gol = Acréscimo) %>%
filter(!is.na(Acréscimo_Gol),
Tempo == "2º",
Ano >= 2014) %>%
select("Campeonato", "Ano", "Jogo", "Tempo", "Acréscimo_Gol") %>%
left_join(resultados) %>%
rowwise() %>%
mutate(problema = Acréscimo_Gol >= Acréscimos_2) %>%
filter(problema == TRUE) %>%
View()
library(dplyr)
load("data/resultados.RData")
load("data/gols.RData")
# Primeiro tempo
gols %>%
rename(Acréscimo_Gol = Acréscimo) %>%
filter(!is.na(Acréscimo_Gol),
Tempo == "1º",
Ano >= 2014) %>%
select("Campeonato", "Ano", "Jogo", "Tempo", "Acréscimo_Gol") %>%
left_join(resultados) %>%
rowwise() %>%
mutate(problema = Acréscimo_Gol >= Acréscimos_1) %>%
filter(problema == TRUE) %>%
View()
# Segundo tempo
gols %>%
rename(Acréscimo_Gol = Acréscimo) %>%
filter(!is.na(Acréscimo_Gol),
Tempo == "2º",
Ano >= 2014) %>%
select("Campeonato", "Ano", "Jogo", "Tempo", "Acréscimo_Gol") %>%
left_join(resultados) %>%
rowwise() %>%
mutate(problema = Acréscimo_Gol >= Acréscimos_2) %>%
filter(problema == TRUE) %>%
View()
library(dplyr)
load("data/resultados.RData")
load("data/gols.RData")
# Primeiro tempo
t1 = gols %>%
rename(Acréscimo_Gol = Acréscimo) %>%
filter(!is.na(Acréscimo_Gol),
Tempo == "1º",
Ano >= 2014) %>%
select("Campeonato", "Ano", "Jogo", "Tempo", "Acréscimo_Gol") %>%
left_join(resultados) %>%
rowwise() %>%
mutate(problema = Acréscimo_Gol >= Acréscimos_1) %>%
filter(problema == TRUE)
View(t1)
# Segundo tempo
t2 = gols %>%
rename(Acréscimo_Gol = Acréscimo) %>%
filter(!is.na(Acréscimo_Gol),
Tempo == "2º",
Ano >= 2014) %>%
select("Campeonato", "Ano", "Jogo", "Tempo", "Acréscimo_Gol") %>%
left_join(resultados) %>%
rowwise() %>%
mutate(problema = Acréscimo_Gol >= Acréscimos_2) %>%
filter(problema == TRUE)
View(t2)
library(dplyr)
load("data/resultados.RData")
load("data/gols.RData")
# Primeiro tempo
t1 = gols %>%
rename(Acréscimo_Gol = Acréscimo) %>%
filter(!is.na(Acréscimo_Gol),
Tempo == "1º",
Ano >= 2014) %>%
select("Campeonato", "Ano", "Jogo", "Tempo", "Acréscimo_Gol") %>%
left_join(resultados) %>%
rowwise() %>%
mutate(problema = Acréscimo_Gol > Acréscimos_1) %>%
filter(problema == TRUE)
View(t1)
# Segundo tempo
t2 = gols %>%
rename(Acréscimo_Gol = Acréscimo) %>%
filter(!is.na(Acréscimo_Gol),
Tempo == "2º",
Ano >= 2014) %>%
select("Campeonato", "Ano", "Jogo", "Tempo", "Acréscimo_Gol") %>%
left_join(resultados) %>%
rowwise() %>%
mutate(problema = Acréscimo_Gol > Acréscimos_2) %>%
filter(problema == TRUE)
View(t2)
library(dplyr)
load("data/resultados.RData")
load("data/gols.RData")
# Primeiro tempo
t1 = gols %>%
rename(Acréscimo_Gol = Acréscimo) %>%
filter(!is.na(Acréscimo_Gol),
Tempo == "1º",
Ano >= 2014) %>%
select("Campeonato", "Ano", "Jogo", "Tempo", "Acréscimo_Gol") %>%
left_join(resultados) %>%
rowwise() %>%
mutate(problema = Acréscimo_Gol >= Acréscimos_1) %>%
filter(problema == TRUE)
View(t1)
# Segundo tempo
t2 = gols %>%
rename(Acréscimo_Gol = Acréscimo) %>%
filter(!is.na(Acréscimo_Gol),
Tempo == "2º",
Ano >= 2014) %>%
select("Campeonato", "Ano", "Jogo", "Tempo", "Acréscimo_Gol") %>%
left_join(resultados) %>%
rowwise() %>%
mutate(problema = Acréscimo_Gol >= Acréscimos_2) %>%
filter(problema == TRUE)
View(t2)
61+4
61+46
