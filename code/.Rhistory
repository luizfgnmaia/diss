}
score_index_3_1[[k]] = tmp_score_index
}
score_index_3_2 = list() # conferir depois esse aqui
for(k in 1:N) {
tmp_score_index = NULL
for(l in 1:(length(I2[[k]])-1)) {
tmp_x = x2[[k]][I2[[k]][l]+1-45]
tmp_y = y2[[k]][I2[[k]][l]+1-45]
tmp_score_index[l] = ifelse(tmp_x == tmp_y, 1,
ifelse(tmp_x - tmp_y >= 1, 2,
ifelse(tmp_x - tmp_y <= -1, 3,
0)))
}
score_index_3_2[[k]] = tmp_score_index
}
zero_1 = rep(0, L1)
zero_2 = rep(0, L2)
M_score_index_3_1 = unlist(score_index_3_1)
lambda_10_1 = rep(0, L1)
lambda_01_1 = rep(0, L1)
mu_10_1 = rep(0, L1)
mu_01_1 = rep(0, L1)
lambda_10_1[which(M_score_index_3_1 == 2)] = 1
lambda_01_1[which(M_score_index_3_1 == 3)] = 1
mu_10_1[which(M_score_index_3_1 == 2)] = 1
mu_01_1[which(M_score_index_3_1 == 3)] = 1
M_score_index_3_2 = unlist(score_index_3_2)
lambda_10_2 = rep(0, L2)
lambda_01_2 = rep(0, L2)
mu_10_2 = rep(0, L2)
mu_01_2 = rep(0, L2)
lambda_10_2[which(M_score_index_3_2 == 2)] = 1
lambda_01_2[which(M_score_index_3_2 == 3)] = 1
mu_10_2[which(M_score_index_3_2 == 2)] = 1
mu_01_2[which(M_score_index_3_2 == 3)] = 1
M1_lambda = cbind(M1_lambda, lambda_10_1, lambda_01_1, zero_1, zero_1)
colnames(M1_lambda)[43:44] = c("mu_10", "mu_01")
M2_lambda = cbind(M2_lambda, lambda_10_2, lambda_01_2, zero_2, zero_2)
colnames(M2_lambda)[43:44] = c("mu_10", "mu_01")
M1_mu = cbind(M1_mu, zero_1, zero_1, mu_10_1, mu_01_1)
colnames(M1_mu)[41:42] = c("lambda_10", "lambda_01")
M2_mu = cbind(M2_mu, zero_2, zero_2, mu_10_2, mu_01_2)
colnames(M2_mu)[41:42] = c("lambda_10", "lambda_01")
G_score_index_3_1 = list()
G_score_index_3_2 = list()
N
score_index_3_1
for(k in 1:N) {
G_score_index_3_1[[k]] = score_index_3_1[[k]][-length(score_index_3_1[[k]])]
}
for(k in 1:N) {
G_score_index_3_1[[k]] = score_index_3_1[[k]][-length(score_index_3_1[[k]])]
G_score_index_3_2[[k]] = score_index_3_2[[k]][-length(score_index_3_2[[k]])]
}
G_score_index_3_1
J1
J2
J1_lambda
source('~/diss/code/dados_mod_1.R', echo=TRUE)
source('~/diss/code/mod_1.R', echo=TRUE)
source('~/diss/code/dados_mod_1.R', echo=TRUE)
source('~/diss/code/mod_1.R', echo=TRUE)
J_score_index_3_1 = list()
J_score_index_3_2 = list()
for(k in 1:N) {
J_score_index_3_1[[k]] = score_index_3_1[[k]][-length(score_index_3_1[[k]])]
J_score_index_3_2[[k]] = score_index_3_2[[k]][-length(score_index_3_2[[k]])]
}
library(dplyr)
load("dados_serie_a_2019.RData")
load("dados_mod_1.RData")
score_index_3_1 = list()
for(k in 1:N) {
tmp_score_index = NULL
for(l in 1:(length(I1[[k]])-1)) {
tmp_x = x1[[k]][I1[[k]][l]+1]
tmp_y = y1[[k]][I1[[k]][l]+1]
tmp_score_index[l] = ifelse(tmp_x == tmp_y, 1,
ifelse(tmp_x - tmp_y >= 1, 2,
ifelse(tmp_x - tmp_y <= -1, 3,
0)))
}
score_index_3_1[[k]] = tmp_score_index
}
score_index_3_2 = list() # conferir depois esse aqui
for(k in 1:N) {
tmp_score_index = NULL
for(l in 1:(length(I2[[k]])-1)) {
tmp_x = x2[[k]][I2[[k]][l]+1-45]
tmp_y = y2[[k]][I2[[k]][l]+1-45]
tmp_score_index[l] = ifelse(tmp_x == tmp_y, 1,
ifelse(tmp_x - tmp_y >= 1, 2,
ifelse(tmp_x - tmp_y <= -1, 3,
0)))
}
score_index_3_2[[k]] = tmp_score_index
}
zero_1 = rep(0, L1)
zero_2 = rep(0, L2)
M_score_index_3_1 = unlist(score_index_3_1)
lambda_10_1 = rep(0, L1)
lambda_01_1 = rep(0, L1)
mu_10_1 = rep(0, L1)
mu_01_1 = rep(0, L1)
lambda_10_1[which(M_score_index_3_1 == 2)] = 1
lambda_01_1[which(M_score_index_3_1 == 3)] = 1
mu_10_1[which(M_score_index_3_1 == 2)] = 1
mu_01_1[which(M_score_index_3_1 == 3)] = 1
M_score_index_3_2 = unlist(score_index_3_2)
lambda_10_2 = rep(0, L2)
lambda_01_2 = rep(0, L2)
mu_10_2 = rep(0, L2)
mu_01_2 = rep(0, L2)
lambda_10_2[which(M_score_index_3_2 == 2)] = 1
lambda_01_2[which(M_score_index_3_2 == 3)] = 1
mu_10_2[which(M_score_index_3_2 == 2)] = 1
mu_01_2[which(M_score_index_3_2 == 3)] = 1
M1_lambda = cbind(M1_lambda, lambda_10_1, lambda_01_1, zero_1, zero_1)
colnames(M1_lambda)[43:44] = c("mu_10", "mu_01")
M2_lambda = cbind(M2_lambda, lambda_10_2, lambda_01_2, zero_2, zero_2)
colnames(M2_lambda)[43:44] = c("mu_10", "mu_01")
M1_mu = cbind(M1_mu, zero_1, zero_1, mu_10_1, mu_01_1)
colnames(M1_mu)[41:42] = c("lambda_10", "lambda_01")
M2_mu = cbind(M2_mu, zero_2, zero_2, mu_10_2, mu_01_2)
colnames(M2_mu)[41:42] = c("lambda_10", "lambda_01")
J_score_index_3_1 = list()
J_score_index_3_2 = list()
for(k in 1:N) {
J_score_index_3_1[[k]] = score_index_3_1[[k]][-length(score_index_3_1[[k]])]
J_score_index_3_2[[k]] = score_index_3_2[[k]][-length(score_index_3_2[[k]])]
}
zero_1 = rep(0, LJ1)
zero_2 = rep(0, LJ2)
J_score_index_3_1 = unlist(J_score_index_3_1)
lambda_10_1 = rep(0, LJ1)
lambda_01_1 = rep(0, LJ1)
J_score_index_3_1 = unlist(J_score_index_3_1)
lambda_10_1 = rep(0, LJ1)
lambda_01_1 = rep(0, LJ1)
mu_10_1 = rep(0, LJ1)
mu_01_1 = rep(0, LJ1)
lambda_10_1[which(J_score_index_3_1 == 2)] = 1
lambda_01_1[which(J_score_index_3_1 == 3)] = 1
mu_10_1[which(J_score_index_3_1 == 2)] = 1
mu_01_1[which(J_score_index_3_1 == 3)] = 1
J_score_index_3_2 = unlist(J_score_index_3_2)
J_score_index_3_2 = unlist(J_score_index_3_2)
lambda_10_2 = rep(0, LJ2)
lambda_01_2 = rep(0, LJ2)
mu_10_2 = rep(0, LJ2)
mu_01_2 = rep(0, LJ2)
lambda_10_2[which(J_score_index_3_2 == 2)] = 1
lambda_01_2[which(J_score_index_3_2 == 3)] = 1
mu_10_2[which(J_score_index_3_2 == 2)] = 1
mu_01_2[which(J_score_index_3_2 == 3)] = 1
J1_lambda = cbind(J1_lambda, lambda_10_1, lambda_01_1, zero_1, zero_1)
colnames(J1_lambda)[43:44] = c("mu_10", "mu_01")
J2_lambda = cbind(J2_lambda, lambda_10_2, lambda_01_2, zero_2, zero_2)
colnames(J2_lambda)[43:44] = c("mu_10", "mu_01")
source('~/diss/code/dados_mod_2.R', echo=TRUE)
source('~/diss/code/dados_mod_2.R', echo=TRUE)
library(dplyr)
load("dados_serie_a_2019.RData")
load("dados_mod_1.RData")
score_index_3_1 = list()
for(k in 1:N) {
tmp_score_index = NULL
for(l in 1:(length(I1[[k]])-1)) {
tmp_x = x1[[k]][I1[[k]][l]+1]
tmp_y = y1[[k]][I1[[k]][l]+1]
tmp_score_index[l] = ifelse(tmp_x == tmp_y, 1,
ifelse(tmp_x - tmp_y >= 1, 2,
ifelse(tmp_x - tmp_y <= -1, 3,
0)))
}
score_index_3_1[[k]] = tmp_score_index
}
score_index_3_2 = list() # conferir depois esse aqui
for(k in 1:N) {
tmp_score_index = NULL
for(l in 1:(length(I2[[k]])-1)) {
tmp_x = x2[[k]][I2[[k]][l]+1-45]
tmp_y = y2[[k]][I2[[k]][l]+1-45]
tmp_score_index[l] = ifelse(tmp_x == tmp_y, 1,
ifelse(tmp_x - tmp_y >= 1, 2,
ifelse(tmp_x - tmp_y <= -1, 3,
0)))
}
score_index_3_2[[k]] = tmp_score_index
}
zero_1 = rep(0, L1)
zero_2 = rep(0, L2)
M_score_index_3_1 = unlist(score_index_3_1)
lambda_10_1 = rep(0, L1)
lambda_01_1 = rep(0, L1)
mu_10_1 = rep(0, L1)
mu_01_1 = rep(0, L1)
lambda_10_1[which(M_score_index_3_1 == 2)] = 1
lambda_01_1[which(M_score_index_3_1 == 3)] = 1
mu_10_1[which(M_score_index_3_1 == 2)] = 1
mu_01_1[which(M_score_index_3_1 == 3)] = 1
M_score_index_3_2 = unlist(score_index_3_2)
lambda_10_2 = rep(0, L2)
lambda_01_2 = rep(0, L2)
mu_10_2 = rep(0, L2)
mu_01_2 = rep(0, L2)
lambda_10_2[which(M_score_index_3_2 == 2)] = 1
lambda_01_2[which(M_score_index_3_2 == 3)] = 1
mu_10_2[which(M_score_index_3_2 == 2)] = 1
mu_01_2[which(M_score_index_3_2 == 3)] = 1
M1_lambda = cbind(M1_lambda, lambda_10_1, lambda_01_1, zero_1, zero_1)
colnames(M1_lambda)[43:44] = c("mu_10", "mu_01")
M2_lambda = cbind(M2_lambda, lambda_10_2, lambda_01_2, zero_2, zero_2)
colnames(M2_lambda)[43:44] = c("mu_10", "mu_01")
M1_mu = cbind(M1_mu, zero_1, zero_1, mu_10_1, mu_01_1)
colnames(M1_mu)[41:42] = c("lambda_10", "lambda_01")
M2_mu = cbind(M2_mu, zero_2, zero_2, mu_10_2, mu_01_2)
colnames(M2_mu)[41:42] = c("lambda_10", "lambda_01")
J_score_index_3_1 = list()
J_score_index_3_2 = list()
for(k in 1:N) {
J_score_index_3_1[[k]] = score_index_3_1[[k]][-length(score_index_3_1[[k]])]
J_score_index_3_2[[k]] = score_index_3_2[[k]][-length(score_index_3_2[[k]])]
}
zero_1 = rep(0, LJ1)
zero_2 = rep(0, LJ2)
J_score_index_3_1 = unlist(J_score_index_3_1)
lambda_10_1 = rep(0, LJ1)
lambda_01_1 = rep(0, LJ1)
mu_10_1 = rep(0, LJ1)
mu_01_1 = rep(0, LJ1)
lambda_10_1[which(J_score_index_3_1 == 2)] = 1
lambda_01_1[which(J_score_index_3_1 == 3)] = 1
mu_10_1[which(J_score_index_3_1 == 2)] = 1
mu_01_1[which(J_score_index_3_1 == 3)] = 1
J_score_index_3_2 = unlist(J_score_index_3_2)
lambda_10_2 = rep(0, LJ2)
lambda_01_2 = rep(0, LJ2)
mu_10_2 = rep(0, LJ2)
mu_01_2 = rep(0, LJ2)
lambda_10_2[which(J_score_index_3_2 == 2)] = 1
lambda_01_2[which(J_score_index_3_2 == 3)] = 1
mu_10_2[which(J_score_index_3_2 == 2)] = 1
mu_01_2[which(J_score_index_3_2 == 3)] = 1
J1_lambda = cbind(J1_lambda, lambda_10_1, lambda_01_1, zero_1, zero_1)
colnames(J1_lambda)[43:44] = c("mu_10", "mu_01")
J2_lambda = cbind(J2_lambda, lambda_10_2, lambda_01_2, zero_2, zero_2)
colnames(J2_lambda)[43:44] = c("mu_10", "mu_01")
J1_mu = cbind(J1_mu, zero_1, zero_1, mu_10_1, mu_01_1)
colnames(J1_mu)[41:42] = c("lambda_10", "lambda_01")
J2_mu = cbind(M2_mu, zero_2, zero_2, mu_10_2, mu_01_2)
J2_mu = cbind(j2_mu, zero_2, zero_2, mu_10_2, mu_01_2)
J2_mu = cbind(J2_mu, zero_2, zero_2, mu_10_2, mu_01_2)
colnames(J2_mu)[41:42] = c("lambda_10", "lambda_01")
source('~/diss/code/dados_mod_2.R', echo=TRUE)
J1_mu
source('~/diss/code/dados_mod_2.R', echo=TRUE)
source('~/diss/code/dados_mod_1.R', echo=TRUE)
source('~/diss/code/dados_mod_2.R', echo=TRUE)
View(M1_lambda)
source('~/diss/code/dados_mod_2.R', echo=TRUE)
source('~/diss/code/mod_2.R', echo=TRUE)
View(J2_mu)
source('~/diss/code/mod_2.R', echo=TRUE)
tibble(new = mod_1$par[1:41], old = mod_2_CVXR$par,
par = c(rep("alpha", 20), rep("beta", 20), "gamma")) %>%
ggplot(aes(x = new, y = old, col = par)) +
geom_point(size = 2) +
theme_bw()
# Mudar a escala dos deltas tem bastante impacto nos betas
library(dplyr)
library(CVXR)
load("dados_serie_a_2019.RData")
load("dados_mod_2.RData")
# delta1 = delta1/90
# delta2 = delta2/90
t0 = Sys.time()
alpha = Variable(19)
beta = Variable(20)
gamma = Variable(1)
lambda_xy = Variable(2)
mu_xy = Variable(2)
theta = vstack(alpha, beta, gamma, lambda_xy, mu_xy)
tau = Variable(2)
phi = Variable(2)
omega = Variable(2)
pi1 = tau[1] + phi[1] * r1 + omega[1] * s1
pi2 = tau[2] + phi[2] * r2 + omega[2] * s2
log_lik = -t(delta1) %*% exp(M1_lambda %*% theta) - t(delta1) %*% exp(M1_mu %*% theta) - t(delta2) %*% exp(M2_lambda %*% theta) - t(delta2) %*% exp(M2_mu %*% theta) +
t(1-J1) %*% J1_lambda %*% theta + t(J1) %*% J1_mu %*% theta + t(1-J2) %*% J2_lambda %*% theta + t(J2) %*% J2_mu %*% theta +
t(T1) %*% log(pi1) + t(T2) %*% log(pi2) - sum_entries(pi1) - sum_entries(pi2)
objective = Maximize(log_lik)
problem = Problem(objective)
set.seed(1)
solution = solve(problem, solver = "MOSEK")
duration = Sys.time() - t0
mod_1 = list(par = c(0, solution$getValue(alpha), solution$getValue(beta), solution$getValue(gamma),
solution$getValue(lambda_xy), solution$getValue(mu_xy),
solution$getValue(tau), solution$getValue(phi), solution$getValue(omega)),
value = solution$value,
duration = duration)
save(mod_1, file = "mod_1.RData")
library(ggplot2)
load("dixon robinson/sol/mod_2_CVXR.RData")
tibble(new = mod_1$par[1:41], old = mod_2_CVXR$par,
par = c(rep("alpha", 20), rep("beta", 20), "gamma")) %>%
ggplot(aes(x = new, y = old, col = par)) +
geom_point(size = 2) +
theme_bw()
length(mod_2_CVXR)
length(mod_2_CVXR$par)
tibble(new = mod_1$par[1:41], old = mod_2_CVXR$par[1:41],
par = c(rep("alpha", 20), rep("beta", 20), "gamma")) %>%
ggplot(aes(x = new, y = old, col = par)) +
geom_point(size = 2) +
theme_bw()
mod_1$par[42:45]
mod_2$par[42:45]
mod_2$par[42:45]
mod_2_CVXR$par[42:45]
source('~/diss/code/mod_1.R', echo=TRUE)
source('~/diss/code/mod_2.R', echo=TRUE)
source('~/diss/code/mod_2.R', echo=TRUE)
mod_2$par[42:45]
mod_2_CVXR$par[42:45]
mod_2$par
mod_2$par[42:45]
mod_2_CVXR$par[42:45]
source('~/diss/code/mod_2.R', echo=TRUE)
exp(0.9533624786)
mod_2$par[41]
mod_2_CVXR$par[41]
solution$getValue("gamma")
solution$getValue(gamma)
J1_lambda
View(M1_lambda)
View(M2_lambda)
View(M1_mu)
View(M2_mu)
View(J1_lambda)
View(J2_lambda)
View(J1_mu)
View(J2_mu)
source('~/diss/code/mod_2.R', echo=TRUE)
load("mod_1.RData")
mod_2$par[46:51]
mod_1$par[42:46]
mod_1$par[42:47]
mod_2$par[46:51]
mod_1$par[42:47]
source('~/diss/code/mod_2.R', echo=TRUE)
library(dplyr)
load("dados_serie_a_2019.RData")
#### T1
gols_t1 = unlist(lapply(t1, function(x) length(x < 45)))
reds_t1 = unlist(lapply(t1s, function(x) length(x < 45)))
fit_T1 = glm(T1 ~ gols_t1 + reds_t1)
summary(fit_T1)
#### T2
gols_t2 = unlist(lapply(t2, function(x) length(x < 90)))
reds_t2 = unlist(lapply(t2s, function(x) length(x < 90)))
fit_T2 = glm(T2 ~ gols_t2 + reds_t2)
summary(fit_T2)
?geom_hist
library(ggplot2)
?geom_hist
?geom_histogram
x
T1
tibble(data = T1, fitted = fit_T1$fitted.values)
tibble(x = c(T1, fit_T1$fitted.values, fitted),
category = c(rep("data", length(T1)), rep("fitted", length(T1))))
tibble(x = c(T1, fit_T1$fitted.values, fitted),
category = c(rep("data", length(T1)), rep("fitted", length(T1))))
length(T1)
tibble(x = c(T1, fit_T1$fitted.values),
category = c(rep("data", length(T1)), rep("fitted", length(T1))))
tibble(x = c(T1, fit_T1$fitted.values),
category = c(rep("data", length(T1)), rep("fitted", length(T1)))) %>%
ggplot(aes(x = x, fill = category)) +
geom_histogram()
?geom_histogram
tibble(x = c(T1, fit_T1$fitted.values),
category = c(rep("data", length(T1)), rep("fitted", length(T1)))) %>%
ggplot(aes(x = x, fill = category)) +
geom_histogram(binwidth = 1)
length(T1)
length(fit_T1$fitted.values)
hist(fitted.values(fit_T1))
hist(T1)
hist(fitted.values(fit_T1))
hist(T1)
hist(fitted.values(fit_T1))
hist(T1)
tibble(x = c(T1, fit_T1$fitted.values),
category = c(rep("data", length(T1)), rep("fitted", length(T1)))) %>%
ggplot(aes(x = x, fill = category)) +
geom_histogram(binwidth = 1)
?geom_histogram
tibble(x = c(T1, fit_T1$fitted.values),
category = c(rep("data", length(T1)), rep("fitted", length(T1)))) %>%
ggplot(aes(x = x, fill = category)) +
geom_histogram(binwidth = 1, position = "dodge")
tibble(x = c(T1, fit_T1$fitted.values),
category = c(rep("data", length(T1)), rep("fitted", length(T1)))) %>%
ggplot(aes(x = x, fill = category)) +
geom_histogram(binwidth = 1, position = "fill")
tibble(x = c(T1, fit_T1$fitted.values),
category = c(rep("data", length(T1)), rep("fitted", length(T1)))) %>%
ggplot(aes(x = x, fill = category)) +
geom_histogram(binwidth = 1, position = "identity")
?seq
tibble(x = c(T1, fit_T1$fitted.values),
category = c(rep("data", length(T1)), rep("fitted", length(T1)))) %>%
ggplot(aes(x = x, fill = category)) +
geom_histogram(binwidth = 1, position = "identity") +
scale_x_continuous(breaks = seq(0,12,1))
tibble(x = c(T1, fit_T1$fitted.values),
category = c(rep("data", length(T1)), rep("fitted", length(T1)))) %>%
ggplot(aes(x = x, fill = category)) +
geom_histogram(binwidth = 1, position = "identity")
tibble(x = c(T1, fit_T1$fitted.values),
category = c(rep("data", length(T1)), rep("fitted", length(T1)))) %>%
ggplot(aes(x = x, fill = category)) +
geom_histogram(binwidth = 1, position = "identity") +
scale_x_continuous(breaks = 0:10)
tibble(x = c(T1, fit_T1$fitted.values),
category = c(rep("data", length(T1)), rep("fitted", length(T1)))) %>%
ggplot(aes(x = x, fill = category)) +
geom_histogram(binwidth = 1, position = "identity") +
scale_x_continuous(breaks = 0:9)
tibble(T1 = c(T1, fit_T1$fitted.values),
category = c(rep("data", length(T1)), rep("fitted", length(T1)))) %>%
ggplot(aes(x = T1, fill = category)) +
geom_histogram(binwidth = 1, position = "identity") +
scale_x_continuous(breaks = 0:9) +
theme_bw()
tibble(x = c(T1, fit_T1$fitted.values),
category = c(rep("data", length(T1)), rep("fitted", length(T1)))) %>%
ggplot(aes(x = x, fill = category)) +
geom_histogram(binwidth = 1, position = "identity") +
scale_x_continuous(breaks = 0:9) +
theme_bw()
tibble(x = c(T1, fit_T1$fitted.values),
category = c(rep("data", length(T1)), rep("fitted", length(T1)))) %>%
ggplot(aes(x = x, fill = category)) +
geom_histogram(binwidth = 1, position = "identity") +
scale_x_continuous(breaks = 0:9) +
theme_bw() +
xlab("")
tibble(x = c(T2, fit_T2$fitted.values),
category = c(rep("data", length(T2)), rep("fitted", length(T2)))) %>%
ggplot(aes(x = x, fill = category)) +
geom_histogram(binwidth = 1, position = "identity") +
scale_x_continuous(breaks = 0:9) +
theme_bw() +
xlab("")
tibble(x = c(T2, fit_T2$fitted.values),
category = c(rep("data", length(T2)), rep("fitted", length(T2)))) %>%
ggplot(aes(x = x, fill = category)) +
geom_histogram(binwidth = 1, position = "identity") +
scale_x_continuous(breaks = 0:13) +
theme_bw() +
xlab("")
tibble(x = c(T2, fit_T2$fitted.values),
category = c(rep("data", length(T2)), rep("fitted", length(T2)))) %>%
ggplot(aes(x = x, fill = category)) +
geom_histogram(binwidth = 1, position = "identity") +
scale_x_continuous(breaks = 0:12) +
theme_bw() +
xlab("")
tibble(x = c(T1, fit_T1$fitted.values),
category = c(rep("data", length(T1)), rep("fitted", length(T1)))) %>%
ggplot(aes(x = x, fill = category)) +
geom_histogram(binwidth = 1, position = "identity") +
scale_x_continuous(breaks = 0:9) +
theme_bw() +
xlab("")
tibble(x = c(T2, fit_T2$fitted.values),
category = c(rep("data", length(T2)), rep("fitted", length(T2)))) %>%
ggplot(aes(x = x, fill = category)) +
geom_histogram(binwidth = 1, position = "identity") +
scale_x_continuous(breaks = 0:12) +
theme_bw() +
xlab("")
tibble(x = c(T1, fit_T1$fitted.values),
category = c(rep("data", length(T1)), rep("fitted", length(T1)))) %>%
ggplot(aes(x = x, fill = category)) +
geom_histogram(binwidth = 1, position = "identity") +
scale_x_continuous(breaks = 0:9) +
theme_bw() +
xlab("")
source('~/diss/code/fit_T.R', echo=TRUE)
source('~/diss/code/fit_T.R', echo=TRUE)
#### T1
gols_t1 = unlist(lapply(t1, function(x) length(x < 45)))
reds_t1 = unlist(lapply(t1s, function(x) length(x < 45)))
library(dplyr)
load("dados_serie_a_2019.RData")
#### T1
gols_t1 = unlist(lapply(t1, function(x) length(x < 45)))
reds_t1 = unlist(lapply(t1s, function(x) length(x < 45)))
fit_T1 = glm(T1 ~ gols_t1 + reds_t1)
summary(fit_T1)
#### T2
gols_t2 = unlist(lapply(t2, function(x) length(x < 90)))
reds_t2 = unlist(lapply(t2s, function(x) length(x < 90)))
fit_T2 = glm(T2 ~ gols_t2 + reds_t2)
summary(fit_T2)
source('~/diss/code/fit_T.R', echo=TRUE)
source('~/diss/code/fit_T.R', echo=TRUE)
