} else {
minute = 45
}
}
U1 = rpois(1, lambda = mod_2$tau[1] + mod_2$phi[1]*(score_home + score_away))
u1 = 0
while(u1 < U1) {
lambda_xy = ifelse(score_home > score_away, mod_2$lambda_xy["10"],
ifelse(score_away < score_home, mod_2$lambda_xy["01"],
0))
mu_xy = ifelse(score_home > score_away, mod_2$mu_xy["10"],
ifelse(score_away < score_home, mod_2$mu_xy["01"],
0))
lambda = exp(alpha_i + beta_j + gamma + lambda_xy)
mu = exp(alpha_j + beta_i + mu_xy)
next_home_goal = rexp(1, rate = lambda) + u1
next_away_goal = rexp(1, rate = mu) + u1
next_goal = min(next_home_goal, next_away_goal)
if(next_goal < U1) {
u1 = next_goal
if(next_home_goal == u1) {
score_home = score_home + 1
} else {
score_away = score_away + 1
}
} else {
u1 = U1
minute = 45
half = 2
}
}
}
while(minute < 90) {
lambda_xy = ifelse(score_home > score_away, mod_2$lambda_xy["10"],
ifelse(score_away < score_home, mod_2$lambda_xy["01"],
0))
mu_xy = ifelse(score_home > score_away, mod_2$mu_xy["10"],
ifelse(score_away < score_home, mod_2$mu_xy["01"],
0))
lambda = exp(alpha_i + beta_j + gamma + lambda_xy)
mu = exp(alpha_j + beta_i + mu_xy)
next_home_goal = rexp(1, rate = lambda) + minute
next_away_goal = rexp(1, rate = mu) + minute
next_goal = min(next_home_goal, next_away_goal)
if(next_goal < 90) {
minute = next_goal
if(next_home_goal == minute) {
score_home = score_home + 1
} else {
score_away = score_away + 1
}
} else {
minute = 90
}
}
U2 = rpois(1, lambda = mod_2$tau[2] + mod_2$phi[2]*(score_home + score_away) +
mod_2$kappa * (abs(score_home - score_away) <= 1))
u2 = 0
while(u2 < U2) {
lambda_xy = ifelse(score_home > score_away, mod_2$lambda_xy["10"],
ifelse(score_away < score_home, mod_2$lambda_xy["01"],
0))
mu_xy = ifelse(score_home > score_away, mod_2$mu_xy["10"],
ifelse(score_away < score_home, mod_2$mu_xy["01"],
0))
lambda = exp(alpha_i + beta_j + gamma + lambda_xy)
mu = exp(alpha_j + beta_i + mu_xy)
next_home_goal = rexp(1, rate = lambda) + u2
next_away_goal = rexp(1, rate = mu) + u2
next_goal = min(next_home_goal, next_away_goal)
if(next_goal < U2) {
u2 = next_goal
if(next_home_goal == u2) {
score_home = score_home + 1
} else {
score_away = score_away + 1
}
} else {
u2 = U2
half = 2
}
}
c(score_home, score_away)
}
gamma = mod_2$gamma
alpha_i = mod_2$alpha[home_team]
beta_i = mod_2$beta[home_team]
alpha_j = mod_2$alpha[away_team]
beta_j = mod_2$beta[away_team]
lst = list()
for(i in 1:n) {
lst[[i]] = pred(home_team, away_team, score_home, score_away, minute)
}
scores = do.call(rbind, lst)
colnames(scores) = c(home_team, away_team)
home_win = sum(scores[,1] > scores[,2])/n
away_win = sum(scores[,1] < scores[,2])/n
tie = 1 - home_win - away_win
winner = c(home_win, tie, away_win)
names(winner) = c(home_team, "Tie", away_team)
freq_scores = head(sort(table(paste0(scores[,1], "-", scores[,2])), decreasing = TRUE), 10)/n
freq_scores[11] = 1 - sum(freq_scores)
names(freq_scores)[11] = "other"
list("Result" = winner, "Score" = freq_scores)
}
predict_match(n = 10000, home_team = "Botafogo", away_team = "Vasco da Gama", score_home = 0, score_away = 0, minute = 0)
load("mod_2.RData")
predict_match <- function(n = 10000, home_team, away_team, score_home, score_away, minute) {
pred <- function(home_team, away_team, score_home, score_away, minute) {
half = ifelse(minute < 45, 1, 2)
if(half == 1) {
while(minute < 45) {
lambda_xy = ifelse(score_home > score_away, mod_2$lambda_xy["10"],
ifelse(score_away < score_home, mod_2$lambda_xy["01"],
0))
mu_xy = ifelse(score_home > score_away, mod_2$mu_xy["10"],
ifelse(score_away < score_home, mod_2$mu_xy["01"],
0))
lambda = exp(alpha_i + beta_j + gamma + lambda_xy)
mu = exp(alpha_j + beta_i + mu_xy)
next_home_goal = rexp(1, rate = lambda) + minute
next_away_goal = rexp(1, rate = mu) + minute
next_goal = min(next_home_goal, next_away_goal)
if(next_goal < 45) {
minute = next_goal
if(next_home_goal == minute) {
score_home = score_home + 1
} else {
score_away = score_away + 1
}
} else {
minute = 45
}
}
U1 = rpois(1, lambda = mod_2$tau[1] + mod_2$phi[1]*(score_home + score_away))
u1 = 0
while(u1 < U1) {
lambda_xy = ifelse(score_home > score_away, mod_2$lambda_xy["10"],
ifelse(score_away < score_home, mod_2$lambda_xy["01"],
0))
mu_xy = ifelse(score_home > score_away, mod_2$mu_xy["10"],
ifelse(score_away < score_home, mod_2$mu_xy["01"],
0))
lambda = exp(alpha_i + beta_j + gamma + lambda_xy)
mu = exp(alpha_j + beta_i + mu_xy)
next_home_goal = rexp(1, rate = lambda) + u1
next_away_goal = rexp(1, rate = mu) + u1
next_goal = min(next_home_goal, next_away_goal)
if(next_goal < U1) {
u1 = next_goal
if(next_home_goal == u1) {
score_home = score_home + 1
} else {
score_away = score_away + 1
}
} else {
u1 = U1
minute = 45
half = 2
}
}
}
while(minute < 90) {
lambda_xy = ifelse(score_home > score_away, mod_2$lambda_xy["10"],
ifelse(score_away < score_home, mod_2$lambda_xy["01"],
0))
mu_xy = ifelse(score_home > score_away, mod_2$mu_xy["10"],
ifelse(score_away < score_home, mod_2$mu_xy["01"],
0))
lambda = exp(alpha_i + beta_j + gamma + lambda_xy)
mu = exp(alpha_j + beta_i + mu_xy)
next_home_goal = rexp(1, rate = lambda) + minute
next_away_goal = rexp(1, rate = mu) + minute
next_goal = min(next_home_goal, next_away_goal)
if(next_goal < 90) {
minute = next_goal
if(next_home_goal == minute) {
score_home = score_home + 1
} else {
score_away = score_away + 1
}
} else {
minute = 90
}
}
U2 = rpois(1, lambda = mod_2$tau[2] + mod_2$phi[2]*(score_home + score_away) +
mod_2$kappa * (abs(score_home - score_away) <= 1))
u2 = 0
while(u2 < U2) {
lambda_xy = ifelse(score_home > score_away, mod_2$lambda_xy["10"],
ifelse(score_away < score_home, mod_2$lambda_xy["01"],
0))
mu_xy = ifelse(score_home > score_away, mod_2$mu_xy["10"],
ifelse(score_away < score_home, mod_2$mu_xy["01"],
0))
lambda = exp(alpha_i + beta_j + gamma + lambda_xy)
mu = exp(alpha_j + beta_i + mu_xy)
next_home_goal = rexp(1, rate = lambda) + u2
next_away_goal = rexp(1, rate = mu) + u2
next_goal = min(next_home_goal, next_away_goal)
if(next_goal < U2) {
u2 = next_goal
if(next_home_goal == u2) {
score_home = score_home + 1
} else {
score_away = score_away + 1
}
} else {
u2 = U2
half = 2
}
}
c(score_home, score_away)
}
gamma = mod_2$gamma
alpha_i = mod_2$alpha[home_team]
beta_i = mod_2$beta[home_team]
alpha_j = mod_2$alpha[away_team]
beta_j = mod_2$beta[away_team]
lst = list()
for(i in 1:n) {
lst[[i]] = pred(home_team, away_team, score_home, score_away, minute)
}
scores = do.call(rbind, lst)
colnames(scores) = c(home_team, away_team)
home_win = sum(scores[,1] > scores[,2])/n
away_win = sum(scores[,1] < scores[,2])/n
tie = 1 - home_win - away_win
winner = c(home_win, tie, away_win)
names(winner) = c(home_team, "Tie", away_team)
freq_scores = head(sort(table(paste0(scores[,1], "-", scores[,2])), decreasing = TRUE), 10)/n
freq_scores[11] = 1 - sum(freq_scores)
names(freq_scores)[11] = "other"
list("Result" = winner, "Score" = freq_scores)
}
# predict_match(home_team = "Botafogo", away_team = "Vasco da Gama", score_home = 0, score_away = 0, minute = 0)
predict_match(home_team = "Botafogo", away_team = "Vasco da Gama", score_home = 0, score_away = 0, minute = 0)
load("serie_a_2019.RData")
goals = c(x, y)
alpha = as.factor(c(i, j))
beta = as.factor(c(j, i))
gamma = c(rep(1, N), rep(0, N))
# View(model.matrix(~ beta + alpha + gamma - 1))
mod_0_glm = glm(goals ~ beta + alpha + gamma - 1, family = poisson)
save(mod_0_glm, file = "sol/mod_0_glm.RData")
load("serie_a_2019.RData")
goals = c(x, y)
alpha = as.factor(c(i, j))
beta = as.factor(c(j, i))
gamma = c(rep(1, N), rep(0, N))
# View(model.matrix(~ beta + alpha + gamma - 1))
load("serie_a_2019.RData")
load("dados_serie_a_2019.RData")
goals = c(x, y)
alpha = as.factor(c(i, j))
beta = as.factor(c(j, i))
gamma = c(rep(1, N), rep(0, N))
mod_0_glm = glm(goals ~ beta + alpha + gamma - 1, family = poisson)
mod_0_glm
source('~/diss/code/pred_mod_2.R', echo=TRUE)
predict_match(home_team = "Botafogo", away_team = "Vasco da Gama", score_home = 0, score_away = 0, minute = 0)
predict_match(home_team = "Flamengo", away_team = "Palmeiras", score_home = 0, score_away = 0, minute = 0)
predict_match(home_team = "Palmeiras", away_team = "Flamengo", score_home = 0, score_away = 0, minute = 0)
predict_match(home_team = "Flamengo", away_team = "Palmeiras", score_home = 0, score_away = 0, minute = 0)
predict_match(home_team = "Palmeiras", away_team = "Flamengo", score_home = 0, score_away = 0, minute = 0)
predict_match(home_team = "Flamengo", away_team = "Palmeiras", score_home = 0, score_away = 0, minute = 0)
predict_match(home_team = "Flamengo", away_team = "Palmeiras", score_home = 0, score_away = 0, minute = 30)
predict_match(home_team = "Flamengo", away_team = "Vasco da Gama", score_home = 0, score_away = 3, minute = 80)
predict_match(home_team = "Flamengo", away_team = "Vasco da Gama", score_home = 0, score_away = 3, minute = 60)
predict_match(home_team = "Flamengo", away_team = "Vasco da Gama", score_home = 0, score_away = 3, minute = 0)
predict_match(home_team = "Flamengo", away_team = "Vasco da Gama", score_home = 0, score_away = 2, minute = 0)
predict_match(home_team = "Flamengo", away_team = "Vasco da Gama", score_home = 0, score_away = 0, minute = 0)
load("dados_serie_a_2019.RData")
goals = c(x, y)
alpha = as.factor(c(i, j))
beta = as.factor(c(j, i))
gamma = c(rep(1, N), rep(0, N))
# View(model.matrix(~ beta + alpha + gamma - 1))
mod_0_glm = glm(goals ~ beta + alpha + gamma - 1, family = poisson)
save(mod_0_glm, file = "sol/mod_0_glm.RData")
load("dados_serie_a_2019.RData")
goals = c(x, y)
alpha = as.factor(c(i, j))
beta = as.factor(c(j, i))
gamma = c(rep(1, N), rep(0, N))
# View(model.matrix(~ beta + alpha + gamma - 1))
mod_0_glm = glm(goals ~ beta + alpha + gamma - 1, family = poisson)
# save(mod_0_glm, file = "sol/mod_0_glm.RData")
mod_0_glm
exp(0.4026120)
load("dados_serie_a_2019.RData")
goals = c(x, y)
alpha = as.factor(c(i, j))
beta = as.factor(c(j, i))
gamma = c(rep(1, N), rep(0, N))
# View(model.matrix(~ beta + alpha + gamma - 1))
solution = glm(goals ~ beta + alpha + gamma - 1, family = poisson)
solution$coefficients
solution$coefficients[20]
solution$coefficients[21]
solution$coefficients[21:40]
solution$coefficients[21:39]
mod_0 = list(alpha = solution$coefficients[21:39],
beta = solution$coefficients[1:20],
gamma = solution$coefficients[41])
mod_0
mod_0 = list(alpha = solution$coefficients[21:39],
beta = solution$coefficients[1:20],
gamma = solution$coefficients[40])
names(mod_0$alpha) = times$Time
names(mod_0$beta) = times$Time
load("dados_serie_a_2019.RData")
goals = c(x, y)
alpha = as.factor(c(i, j))
beta = as.factor(c(j, i))
gamma = c(rep(1, N), rep(0, N))
# View(model.matrix(~ beta + alpha + gamma - 1))
solution = glm(goals ~ beta + alpha + gamma - 1, family = poisson)
mod_0 = list(alpha = c(0, solution$coefficients[21:39]),
beta = solution$coefficients[1:20],
gamma = solution$coefficients[40])
names(mod_0$alpha) = times$Time
names(mod_0$beta) = times$Time
load("dados_serie_a_2019.RData")
goals = c(x, y)
alpha = as.factor(c(i, j))
beta = as.factor(c(j, i))
gamma = c(rep(1, N), rep(0, N))
# View(model.matrix(~ beta + alpha + gamma - 1))
solution = glm(goals ~ beta + alpha + gamma - 1, family = poisson)
mod_0 = list(alpha = c(0, solution$coefficients[21:39]),
beta = solution$coefficients[1:20],
gamma = solution$coefficients[40])
names(mod_0$alpha) = times$Time
names(mod_0$beta) = times$Time
save(mod_0, file = "mod_0.RData")
gamma = mod_2$gamma
alpha_i = mod_2$alpha[home_team]
beta_i = mod_2$beta[home_team]
alpha_j = mod_2$alpha[away_team]
beta_j = mod_2$beta[away_team]
home_goals = rpois(n, lambda = alpha_i + beta_j + gamma)
away_goals = rpois(n, lambda = alpha_j + beta_i)
(home_team = "Flamengo"
home_team = "Flamengo"
home_team = "Flamengo"
away_team = "Vasco da Gama"
gamma = mod_2$gamma
alpha_i = mod_2$alpha[home_team]
gamma = mod_0$gamma
alpha_i = mod_0$alpha[home_team]
beta_i = mod_0$beta[home_team]
alpha_j = mod_0$alpha[away_team]
beta_j = mod_0$beta[away_team]
home_goals = rpois(n, lambda = alpha_i + beta_j + gamma)
away_goals = rpois(n, lambda = alpha_j + beta_i)
gamma = mod_0$gamma
load("mod_0.RData")
gamma = mod_0$gamma
alpha_i = mod_0$alpha[home_team]
beta_i = mod_0$beta[home_team]
alpha_j = mod_0$alpha[away_team]
beta_j = mod_0$beta[away_team]
home_goals = rpois(n, lambda = alpha_i + beta_j + gamma)
?rpois
home_goals = rpois(n, lambda = alpha_i + beta_j + gamma)
n = 10000
home_goals = rpois(n, lambda = alpha_i + beta_j + gamma)
away_goals = rpois(n, lambda = alpha_j + beta_i)
alpha_j + beta_i
home_goals = rpois(n, lambda = exp(alpha_i + beta_j + gamma))
away_goals = rpois(n, lambda = exp(alpha_j + beta_i))
home_goals
away_goals
scores = c(home_goals, away_goals)
home_win = sum(scores[,1] > scores[,2])/n
away_win = sum(scores[,1] < scores[,2])/n
scores = cbind(home_goals, away_goals)
home_win = sum(scores[,1] > scores[,2])/n
away_win = sum(scores[,1] < scores[,2])/n
tie = 1 - home_win - away_win
winner = c(home_win, tie, away_win)
names(winner) = c(home_team, "Tie", away_team)
freq_scores = head(sort(table(paste0(scores[,1], "-", scores[,2])), decreasing = TRUE), 10)/n
freq_scores[11] = 1 - sum(freq_scores)
names(freq_scores)[11] = "other"
list("Result" = winner, "Score" = freq_scores)
load("mod_1.RData")
pred_mod_1 <- function(n = 10000, home_team, away_team, score_home, score_away, minute) {
pred <- function(home_team, away_team, score_home, score_away, minute) {
half = ifelse(minute < 45, 1, 2)
if(half == 1) {
while(minute < 45) {
lambda = exp(alpha_i + beta_j + gamma)
mu = exp(alpha_j + beta_i)
next_home_goal = rexp(1, rate = lambda) + minute
next_away_goal = rexp(1, rate = mu) + minute
next_goal = min(next_home_goal, next_away_goal)
if(next_goal < 45) {
minute = next_goal
if(next_home_goal == minute) {
score_home = score_home + 1
} else {
score_away = score_away + 1
}
} else {
minute = 45
}
}
U1 = rpois(1, lambda = mod_1$tau[1] + mod_1$phi[1]*(score_home + score_away))
u1 = 0
while(u1 < U1) {
lambda = exp(alpha_i + beta_j + gamma)
mu = exp(alpha_j + beta_i)
next_home_goal = rexp(1, rate = lambda) + u1
next_away_goal = rexp(1, rate = mu) + u1
next_goal = min(next_home_goal, next_away_goal)
if(next_goal < U1) {
u1 = next_goal
if(next_home_goal == u1) {
score_home = score_home + 1
} else {
score_away = score_away + 1
}
} else {
u1 = U1
minute = 45
half = 2
}
}
}
while(minute < 90) {
lambda = exp(alpha_i + beta_j + gamma)
mu = exp(alpha_j + beta_i)
next_home_goal = rexp(1, rate = lambda) + minute
next_away_goal = rexp(1, rate = mu) + minute
next_goal = min(next_home_goal, next_away_goal)
if(next_goal < 90) {
minute = next_goal
if(next_home_goal == minute) {
score_home = score_home + 1
} else {
score_away = score_away + 1
}
} else {
minute = 90
}
}
U2 = rpois(1, lambda = mod_1$tau[2] + mod_1$phi[2]*(score_home + score_away) +
mod_1$kappa * (abs(score_home - score_away) <= 1))
u2 = 0
while(u2 < U2) {
lambda = exp(alpha_i + beta_j + gamma)
mu = exp(alpha_j + beta_i)
next_home_goal = rexp(1, rate = lambda) + u2
next_away_goal = rexp(1, rate = mu) + u2
next_goal = min(next_home_goal, next_away_goal)
if(next_goal < U2) {
u2 = next_goal
if(next_home_goal == u2) {
score_home = score_home + 1
} else {
score_away = score_away + 1
}
} else {
u2 = U2
half = 2
}
}
c(score_home, score_away)
}
gamma = mod_1$gamma
alpha_i = mod_1$alpha[home_team]
beta_i = mod_1$beta[home_team]
alpha_j = mod_1$alpha[away_team]
beta_j = mod_1$beta[away_team]
lst = list()
for(i in 1:n) {
lst[[i]] = pred(home_team, away_team, score_home, score_away, minute)
}
scores = do.call(rbind, lst)
colnames(scores) = c(home_team, away_team)
home_win = sum(scores[,1] > scores[,2])/n
away_win = sum(scores[,1] < scores[,2])/n
tie = 1 - home_win - away_win
winner = c(home_win, tie, away_win)
names(winner) = c(home_team, "Tie", away_team)
freq_scores = head(sort(table(paste0(scores[,1], "-", scores[,2])), decreasing = TRUE), 10)/n
freq_scores[11] = 1 - sum(freq_scores)
names(freq_scores)[11] = "other"
list("Result" = winner, "Score" = freq_scores)
}
# pred_mod_1(home_team = "Flamengo", away_team = "Vasco da Gama", score_home = 0, score_away = 0, minute = 0)
pred_mod_1(home_team = "Flamengo", away_team = "Vasco da Gama", score_home = 0, score_away = 0, minute = 0)
load("pred_mod_0.RData")
source("pred_mod_0.R")
source("pred_mod_0.R")
source("pred_mod_1.R")
source("pred_mod_2.R")
pred_mod_0(home_team = "Flamengo", away_team = "Vasco da Gama")
pred_mod_1(home_team = "Flamengo", away_team = "Vasco da Gama", score_home = 0, score_away = 0, minute = 0)
pred_mod_2(home_team = "Flamengo", away_team = "Vasco da Gama", score_home = 0, score_away = 0, minute = 0)
pred_mod_0(home_team = "Flamengo", away_team = "Vasco da Gama")
pred_mod_1(home_team = "Flamengo", away_team = "Vasco da Gama", score_home = 0, score_away = 0, minute = 0)
pred_mod_2(home_team = "Flamengo", away_team = "Vasco da Gama", score_home = 0, score_away = 0, minute = 0)
pred_mod_0(home_team = "Flamengo", away_team = "Vasco da Gama")
source("pred_mod_0.R")
source("pred_mod_1.R")
source("pred_mod_2.R")
pred_mod_0(home_team = "Flamengo", away_team = "Vasco da Gama")
pred_mod_1(home_team = "Flamengo", away_team = "Vasco da Gama")
pred_mod_2(home_team = "Flamengo", away_team = "Vasco da Gama")
